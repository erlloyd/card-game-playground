{"version":3,"sources":["../node_modules/peerjs/dist sync","serviceWorkerRegistration.ts","constants/app-constants.ts","store/localStorage.ts","features/cards-data/initialState.ts","store/global.actions.ts","features/game/initialState.ts","constants/card-constants.ts","features/game/game.slice.ts","features/cards-data/cards-data.slice.ts","features/cards/cards.actions.ts","utilities/geo.ts","features/cards-data/cards-data.selectors.ts","features/cards/cards.selectors.ts","constants/card-pack-mapping.ts","constants/game-type-properties-mapping.tsx","features/cards/cards.thunks.ts","features/cards/initialState.ts","features/cards/cards.slice.ts","features/counters/counters.actions.ts","features/counters/initialState.ts","features/counters/counters.slice.ts","store/rootReducer.ts","store/peer-js-redux-middleware.ts","store/configureStore.ts","RadialMenu.tsx","CardTokens.tsx","CardTokensContainer.tsx","constants/card-missing-image-map.ts","CardModifiers.tsx","CardModifiersContainer.tsx","Card.tsx","CardStackCardSelector.tsx","CardStackCardSelectorContainer.tsx","FileUploader.tsx","ContextMenu.tsx","Counter.tsx","DeckLoader.tsx","EncounterLoader.tsx","EncounterLoaderContainer.tsx","FirstPlayerToken.tsx","features/counters/counters.selectors.ts","FirstPlayerTokenContainer.tsx","PeerConnector.tsx","features/game/game.selectors.ts","TopLayer.tsx","utilities/card-utils.ts","RadialMenuContainer.tsx","TokenValueModifier.tsx","TouchMenu.tsx","TouchMenuContainer.tsx","utilities/text-utils.ts","Game.tsx","generated/packsList.ts","generated/packsList_lotr.ts","features/cards-data/cards-data.thunks.ts","GameContainer.tsx","features/counters/counters.thunks.ts","utilities/marvel-txt-converter.ts","features/game/game.thunks.ts","App.tsx","AppContainer.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GameType","myPeerRef","uuidv4","possibleColors","loadState","key","serializedState","localStorage","getItem","baseState","JSON","parse","present","err","queryParamsGameType","URLSearchParams","search","get","localGameState","initialState","activeDataType","activeGameType","MarvelChampions","data","resetApp","createAction","receiveRemoteGameState","verifyRemoteGameState","localStorageState","playerColors","peerId","previewCard","menuPreviewCardJsonId","radialMenuPosition","StatusTokenType","CounterTokenType","stageZoom","x","y","stagePosition","gameSlice","createSlice","name","reducers","updateZoom","action","payload","updatePosition","connectToRemoteGame","setPlayerColor","ref","color","setPeerId","requestResync","setPreviewCardId","clearPreviewCard","setMenuPreviewCardJsonId","clearMenuPreviewCardJsonId","updateActiveGameType","quitGame","showRadialMenuAtPosition","hideRadialMenu","extraReducers","builder","addCase","game","actions","convertMarvelToCommonFormat","cardMarvelFormat","images","octgnId","octgn_id","quantity","doubleSided","double_sided","backLink","back_link","typeCode","type_code","subTypeCode","extraInfo","setCode","set_code","packCode","pack_code","factionCode","faction_code","convertLOTRToCommonFormat","encounterCard","cardLOTRFormat","cardBackImage","Back","ImagePath","frontImage","Front","frontImageWithoutExtension","split","slice","join","length","Slug","CardSet","replaceAll","RingsDbCardId","Title","front","back","OctgnGuid","Quantity","CardType","CardSubType","storeCardData","isPlayerPack","careAboutDups","cs","stateLocation","entities","encounterEntities","card","cardsDataSlice","loadCardsData","activeData","setData","SetData","forEach","set","setTypeCode","card_set_type_code","cardsInSet","LordOfTheRingsLivingCardGame","Scenarios","scenario","Product","loadCardsDataForPack","packType","isHeroPack","includes","pack","map","c","cards","loadCardsForEncounterSet","activeSet","concat","filter","cd","toLocaleLowerCase","indexOf","addCardStackWithId","pullCardOutOfCardStackWithId","drawCardsOutOfCardStackWithIds","startCardMoveWithSplitStackId","replaceCardStack","setStackShuffling","createDeckFromTextFileWithIds","cardConstants","getDistance","point1","point2","deltaX","deltaY","Math","sqrt","getCenter","p1","p2","getCurrentCardData","cardsData","getCardsData","getCardsDataEntities","createSelector","getCardsDataHeroEntities","getCardsDataHerosByName","cardsDataByName","Object","values","getCardsDataPlayerCardsByName","getCardsDataEncounterEntities","getCardsDataSetData","getCardsDataSetDataAsEncounterEntities","entries","value","cis","getCardsDataEncounterEntitiesBySetCode","herosData","setTypesEncounters","campaignCards","pc","push","sort","a","b","getCards","liveState","getCardMapById","reduce","getPanMode","panMode","getMultiselectMode","multiselectMode","getDropTargetCardsById","returnVal","dropTargetCards","ownerRef","CARD_PACK_REMAPPING","bkw","cap","drs","hlk","trors","twc","EXTRA_CARDS","doctor_strange","jsonId","ant","wsp","GamePropertiesMap","marvelchampions","deckSite","decklistApi","encounterUiName","backgroundImageLocation","process","modifiers","tokens","stunned","tokenType","Stunned","touchMenuLetter","touchMenuIcon","fontSize","menuText","menuRemoveText","imagePath","confused","Confused","tough","Tough","damage","counterTokenType","Damage","isNumeric","threat","Threat","generic","Generic","lotrlcg","attributeId","attributeName","icon","slot","shuffleStack","dispatch","getState","cardsState","find","selected","controlledBy","s","cardStack","stackToShuffle","shuffling","shuffledStack","shuffle","newStack","setTimeout","drawCardsOutOfCardStack","possibleIds","Array","from","numberToDraw","_i","payloadWithIds","idsToUse","fetchDecklistById","createAsyncThunk","thunkApi","axios","gameType","decklistId","response","getMarvelCards","getLOTRCards","heroSetCode","investigator_code","encounterCardsData","heroObligationDeck","heroEncounterDeckData","heroEncounterDeck","extraCards","position","heroId","dataId","extraHeroCards","relatedEncounterDeck","encounterDeckId","relatedObligationDeck","obligationDeckId","heroCardsData","heroStack","heroes","cardDetails","newSlots","slots","cardData","array","temporaryValue","randomIndex","returnArray","stringify","currentIndex","floor","random","queryParamsCardsString","jc","attachTargetCards","ghostCards","outOfSyncWithRemote","getCardStackWithId","mutateCardWithId","callback","cardToUpdate","foreachSelectedAndControlledCard","actorRef","foreachUnselectedCard","getAttachDrawPos","baseCard","drawPos","takenSpace","i","xToDraw","yToDraw","unselectAllCardsReducer","ACTOR_REF","cardsSlice","selectCard","unselectOtherCards","unselectCard","toggleSelectCard","exhaustCard","exhausted","cardMove","movedCards","primaryCard","dx","dy","possibleDropTargets","distance","c1","c2","possibleAttachTargets","attachTarget","gc","attachGhostCard","movedCard","splice","endCardMove","attachTargetCardStacks","dragging","index","unshift","dropTargetCard","selectMultipleCards","ids","unselectAllCards","togglePanMode","toggleMultiselectMode","flipCards","faceup","reverse","resetCards","toggleToken","undefined","statusTokens","adjustCounterToken","counterTokens","delta","adjustModifier","modifierId","clearAllModifiers","clearCardTokens","isEqual","original","cardToReplaceStack","fill","cardJsonIds","cardStackToUse","cardStackId","newCardStack","newCard","assign","cardIndexToRemove","findIndex","cardToStartMoving","splitTopCard","cardToMove","topCard","shift","splitCardId","sourceCardStackId","topCardDetails","facedown","stackToUpdate","handleLoadDeck","fulfilled","potentialHeroCard","heroCardStack","heroCard","mainDeckStack","cardPadding","newDeck","encounterDeck","obligationDeck","addNewCounterWithId","queryParamsCountersString","counters","firstPlayerCounterPosition","countersSlice","updateCounterValue","counter","removeCounter","moveCounter","newPos","moveFirstPlayerCounter","updateCounterColor","newColor","pos","undoableState","combineReducers","rootReducer","undoable","limit","groupBy","groupByActionTypes","type","excludeAction","blacklistRemoteActions","setupConnection","conn","storeAPI","on","INITIAL_STATE_MSG","RESYNC","send","PING","REMOTE_ACTION","customizedMiddleware","getDefaultMiddleware","thunk","immutableCheck","serializableCheck","activeCon","cgpPeer","Peer","host","path","secure","debug","iceServers","urls","username","credential","remoteParamArray","href","remoteId","connect","metadata","stateToSend","cloneDeep","setPlayerColorAction","setInterval","currentState","peerConnection","onconnectionstatechange","ev","connectionState","next","MenuType","DrawMode","desiredWidth","desiredHeight","CardTokens","props","damageImg","threatImg","genericImg","unmounted","imagesLoaded","Image","tokenInfo","currentGameType","onload","setState","src","prevProps","prevState","this","damageX","damageY","showDamage","damageToken","scale","naturalWidth","naturalHeight","width","height","fillPatternImage","damageText","text","align","verticalAlign","threatX","threatY","showThreat","threatToken","threatText","genericX","genericY","showGeneric","Component","CardTokensContainer","CARD_ALREADY_ROTATED_MAP","MISSING_CARD_IMAGE_MAP","CardModifiers","imgs","modifiersInfo","newImagesLoaded","m","updatedImagesLoaded","nodesToRender","modifierX","isPreview","cardWidth","modifierTextX","modifierY","showModifier","img","modifierValue","modifierToken","modifierText","background","CardModifiersContainer","HORIZONTAL_TYPE_CODES","stringArraysEqual","array1","array2","every","Card","stunnedImg","confusedImg","toughImg","touchTimer","rect","shuffleToggle","initCardImages","imgUrls","imageLoaded","onerror","imageLoadFailed","imgUrl","getStrokeColor","dropTargetColor","selectedColor","renderUnanimatedCard","heightToUse","widthToUse","imgToUse","complete","getScale","offset","to","rotation","animatedProps","Rect","node","cornerRadius","stroke","strokeWidth","fillPatternRotation","shouldRenderImageHorizontal","fillPatternScaleX","fillPatternScaleY","shadowForStrokeEnabled","hitStrokeWidth","opacity","isGhost","draggable","onDragStart","handleDragStart","onDragMove","handleDragMove","onDragEnd","handleDragEnd","onDblClick","handleDoubleClick","onDblTap","handleDoubleTap","onClick","handleClick","onTap","handleTap","onMouseDown","handleMouseDown","onTouchStart","handleTouchStart","onTouchMove","handleTouchMove","onTouchEnd","handleTouchEnd","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onContextMenu","handleContextMenu","cardStackOffset","numCardsInStack","shouldRenderStunned","cardState","tokenImagesLoaded","stunnedToken","getTokenInSlot","confusedToken","toughToken","cardTokens","cardModifiers","cardHeight","renderCardName","event","target","handleTapOrClick","wasTouch","cancelBubble","clearTimeout","handleHover","handleHoverLeave","prevImgUrls","currentRotation","duration","renderCard","textOffset","shouldRender","dimensions","stunnedOffset","native","typeCodes","plainCardBack","widthHorizontal","heightHorizontal","some","CardStackCardSelector","cardsDataInStack","handleHighlightChange","_event","option","reason","preview","clearPreview","handleSelected","cardSelected","stopPropagation","cardsDataEntities","onKeyPress","Autocomplete","options","getOptionLabel","style","onChange","onHighlightChange","renderInput","params","TextField","label","variant","CardStackCardSelectorContainer","FileUploader","hiddenFileInput","React","useRef","MenuItem","current","evt","document","createEvent","initEvent","dispatchEvent","files","fileUploaded","handleFile","display","ContextMenu","nestedRef","renderMenuItem","children","val","parentMenuOpen","menuOpen","parentElement","focus","nestedI","nestedIndex","fileUploader","file","reader","FileReader","readAsText","readerEvent","content","result","fileLoadedAction","hideContextMenu","handleContextItemClicked","handleMenuClosed","preventDefault","item","contextItemClicked","items","blur","Menu","keepMounted","open","onClose","anchorReference","anchorPosition","top","left","Counter","handleDecrement","updateCounterValueBy","handleIncrement","DeckLoader","inputValue","focusInputField","input","querySelector","handleKeyPress","loadDeckId","className","EncounterLoader","questCards","encounterCards","filteredCards","oc","totalCards","loadCards","encounterData","EncounterLoaderContainer","ownProps","FirstPlayerToken","updatePos","image","getCounters","getCurrentCounters","getFirstPlayerTokenPos","FirstPlayerTokenContainer","PeerConnector","inputRef","getGame","getPlayerColors","getPeerId","getActiveGameType","getRadialMenuPosition","getMenuPreviewCard","TopLayer","completed","offsetContent","containerStyle","trasparentBackground","backgroundColor","anyCardStackHasStatus","status","stacks","getMySelectedCards","reactPieMenu","require","PieMenu","default","Slice","renderMenuSlices","visibleMenu","setVisibleMenu","currentDrawMode","setCurrentDrawMode","currentModifier","setCurrentModifer","slices","backMenu","StatusTokenActions","renderStatusTokensMenu","TopLevelActions","CounterTokenActions","renderCounterTokensMenu","DrawActions","renderDrawMenu","DrawNumber","renderDrawNumberMenu","ModifierActions","renderModifierMenu","ModifierNumber","renderModifierNumberMenu","renderTopLevelMenu","renderMenuWithBackButton","onSelect","replace","selectedCardStacks","flatMap","FaceUp","FaceDown","_","num","setCurrentModifier","RadialMenu","useState","max","radius","centerRadius","RadialMenuContainer","peerRef","TokenValueModifier","newValue","updated","Button","marginLeft","TouchMenu","IconButton","anyCardsSelected","undo","redo","TouchMenuContainer","ActionCreators","copyToClipboard","clipboard","writeText","Game","stage","doubleTapTimer","lastCenter","lastDist","componentWillUnmount","removeEventListener","handleResize","handleCounterValueUpdate","handleCounterDrag","noOp","renderEmptyMessage","renderContextMenu","showContextMenu","containerRect","container","getBoundingClientRect","pointerPosition","contextMenuPosition","contextMenuItems","clearContextMenu","renderPreviewCardModal","previewCardModal","renderTouchMenu","renderDeckImporter","showDeckImporter","deckImporterPosition","clearDeckImporter","handleImportDeck","getRelativePositionFromTarget","renderEncounterImporter","showEncounterImporter","encounterImporterPosition","clearEncounterImporter","handleLoadEncounter","renderCardSearch","showCardSearch","cardSearchPosition","cardStackForSearching","clearCardSearch","handleCardSelectedFromCardStack","renderPeerConnector","showPeerConnector","peerConnectorPosition","clearPeerConnector","handlePeerConnect","renderTokenModifier","showTokenValueModifier","tokenValueModifierPosition","tokenValueModifierProps","clearTokenValueModifier","addCardStack","pullCardOutOfCardStack","handleStageClickOrTap","mousePos","selectStartPos","handleWheel","oldScale","gameState","pointer","getPointerPosition","mousePointTo","newScale","handleCounterContextMenu","counterId","menuItems","handleCardContextMenu","cardId","mySelectedCards","tokenInfoForGameType","modifiersForGameType","handleCardClick","modifierKeyHeld","shiftKey","metaKey","ctrlKey","handleSelectAndExhaust","showOrToggleModalPreviewCard","handleCardDragStart","draggingCard","hasStack","upperRightPoint","startCardMove","modifier","intCode","parseInt","Number","isNaN","handleKeyDown","getRawPreviewCardPosition","horizontal","pointerPos","screenMidPointX","innerWidth","screenMidPointY","innerHeight","posParam","transform","getAbsoluteTransform","copy","invert","point","MouseEvent","button","TouchEvent","selecting","getSelectionRectInfo","selectRect","abs","handleMouseUp","drewASelectionRect","selectedCards","currSelectedCards","Intersects","touch1","touches","touch2","handleMultiTouch","handleMouseMove","isDragging","stopDrag","clientX","clientY","newCenter","dist","pointTo","currentTarget","txtContents","createDeckFromTxt","addNewCounter","origin","pathname","generateGameStateUrl","getCardType","getCardName","cardInQuestion","getCardCode","idToGrab","getImgUrls","topCardData","generateLCGCDNImageUrl","codeForMissingCheck","missingImageOverride","checkMissingImageMap","stageHeight","stageWidth","Konva","hitOnDragEnabled","playmatImage","playmatImageLoaded","allJsonData","addEventListener","activeElement","body","el","staticCards","dropTargetCardsById","movingCards","iAmDragging","possiblePreviewCards","menuPreviewCard","previewCards","_card","previewCardHeight","isHorizontal","rawPos","previewPos","previewCardWidth","min","url","playmatScale","tabIndex","onKeyDown","Consumer","store","onMouseUp","onMouseMove","onWheel","codeToUse","groupCode","substring","cardCode","toLocaleUpperCase","cardSuffix","packList","getSpecificMarvelPack","packName","res","getSpecificLOTRPack","getSpecificLOTRScenario","GameContainer","Promise","all","marvelPackList","lotrPackList","scenarioListLOTR","AllCards","payloadWithId","heroCardsDataByName","playerCardsDataByName","heroDataByName","playerCardDataByName","nonEmptyLines","l","trim","heroName","packLineIndex","startsWith","hero","pattern","slotLines","sl","cardName","convertMarvelTxtToDeckInfo","_dispatch","currentStoreState","crushedCardsString","crushedCountersString","renderGamePicker","FormControl","InputLabel","Select","labelId","toUpperCase","App","clearQueryParams","useEffect","AppContainer","history","replaceState","title","rtkConfigureStore","reducer","middleware","devTools","subscribe","throttle","blacklistStateKeys","setItem","saveState","configureStore","ReactDOM","render","StrictMode","getElementById","URL","fetch","headers","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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+CooB,EAA/C,cAA8DE,GAA9D,OAAyEE,EAAzE,Y,GA9qDejf,aC1KNkf,GAAW,CACxB,WACA,qBACA,WACA,qBACA,WACA,qBACA,YACA,sBACA,YACA,sBACA,WACA,qBACA,WACA,qBACA,WACA,qBACA,qBACA,WACA,qBACA,WACA,qBACA,WACA,qBACA,qBACA,WACA,qBACA,YACA,sBACA,YACA,sBACA,uBACA,aACA,uBACA,qBACA,WACA,qBACA,WACA,sBCtCaA,GAAW,CACxB,8BACA,wCACA,qCACA,4BACA,sCACA,wCACA,8BACA,uCACA,6BACA,yBACA,sCACA,4BACA,4BACA,yBACA,4CACA,sCACA,4BACA,mCACA,wBACA,yCACA,+BACA,gBACA,gCACA,+CACA,0CACA,gCACA,wCACA,iCACA,wCACA,8BACA,yBACA,iBACA,mCACA,mCACA,2CACA,iCACA,oCACA,+BACA,sCACA,4BACA,2BACA,6BACA,8BACA,+BACA,8BACA,uCACA,0CACA,qCACA,4CACA,qBACA,sBACA,mCACA,+CACA,0CACA,mCACA,yBACA,yCACA,oCACA,0BACA,mCACA,yBACA,6BACA,kCACA,wBACA,+BACA,wCACA,8BACA,wBACA,oCACA,0BACA,2CACA,iCACA,2CACA,+BACA,8BACA,wBACA,yBACA,qCACA,2BACA,sCACA,4BACA,0BACA,8BACA,kCACA,wBACA,iCACA,uBACA,mCACA,yBACA,uCACA,6BACA,oCACA,kCACA,wBACA,+BACA,wCACA,8BACA,6BACA,mCACA,4BACA,8BACA,uBACA,wCACA,8BACA,mCACA,4CACA,qCACA,2BACA,oCACA,0BACA,0BACA,qCACA,+BACA,qBACA,sBACA,gCACA,0BACA,iCACA,uBACA,4BACA,sBACA,qCACA,2BACA,sBACA,4CACA,kCACA,wBACA,qCACA,wBACA,sCACA,6BACA,0BACA,mCACA,iCACA,0CACA,oCACA,0BACA,0BACA,yCACA,+BACA,kCACA,wBACA,0CACA,gCACA,8BACA,8BACA,6BACA,uCACA,6BACA,0CACA,gCACA,mC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","file":"static/js/main.094b31b9.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 218;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { v4 as uuidv4 } from \"uuid\";\n\nexport const myPeerRef = uuidv4();\n\nexport enum GameType {\n  MarvelChampions = \"marvelchampions\",\n  LordOfTheRingsLivingCardGame = \"lotrlcg\",\n}\n\nexport type PlayerColor =\n  | \"red\"\n  | \"cyan\"\n  | \"green\"\n  | \"blue\"\n  | \"magenta\"\n  | \"yellow\";\n\nexport const possibleColors: PlayerColor[] = [\n  \"red\",\n  \"cyan\",\n  \"green\",\n  \"blue\",\n  \"magenta\",\n  \"yellow\",\n];\n","import { RootState } from \"./rootReducer\";\n\nexport const loadState = (key: string) => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    if (serializedState === null) {\n      return {};\n    }\n    const baseState = JSON.parse(serializedState || \"{}\");\n\n    return baseState.present ?? baseState;\n  } catch (err) {\n    console.error(\"problem parsing\");\n    return {};\n  }\n};\n\nexport const saveState = (state: RootState) => {\n  const blacklistStateKeys = [\"cardsData\"];\n  try {\n    Object.entries(state).forEach(([key, value]) => {\n      if (!blacklistStateKeys.includes(key)) {\n        const serializedState = JSON.stringify(value);\n        localStorage.setItem(key, serializedState);\n      }\n    });\n  } catch {\n    // ignore write errors\n    console.error(\"Error writing state to local storage\");\n  }\n};\n","import { GameType } from \"../../constants/app-constants\";\nimport { CardData } from \"../../external-api/common-card-data\";\nimport { loadState } from \"../../store/localStorage\";\nimport { IGameState } from \"../game/initialState\";\n\nexport interface ICardData {\n  [key: string]: CardData;\n}\n\nexport interface CardInSet {\n  code: string;\n  quantity: number;\n}\n\nexport interface Set {\n  name: string;\n  setTypeCode: string;\n  cardsInSet: CardInSet[];\n}\n\nexport interface ISetData {\n  [key: string]: Set;\n}\n\nexport interface ICardsDataState {\n  activeDataType: GameType;\n  data: { [key in GameType]?: IGameCardsDataState };\n}\nexport interface IGameCardsDataState {\n  entities: ICardData;\n  encounterEntities: ICardData;\n  setData: ISetData;\n}\n\nconst queryParams = new URLSearchParams(window.location.search);\nconst queryParamsGameType = queryParams.get(\"gameType\");\n\nconst localGameState: IGameState = loadState(\"game\");\n\nconst gameType = queryParamsGameType ?? localGameState.activeGameType;\n\nexport const initialState: ICardsDataState = {\n  activeDataType: (gameType as GameType) ?? GameType.MarvelChampions,\n  data: {},\n};\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"./rootReducer\";\n\nexport const resetApp = createAction(\"resetAction\");\n\nexport const receiveRemoteGameState = createAction<RootState>(\n  \"receiveRemoteGameState\"\n);\n\nexport const verifyRemoteGameState = createAction<RootState>(\n  \"verifyRemoteGameState\"\n);\n","import { Vector2d } from \"konva/lib/types\";\nimport {\n  GameType,\n  myPeerRef,\n  PlayerColor,\n} from \"../../constants/app-constants\";\nimport { loadState } from \"../../store/localStorage\";\n\nexport interface IPreviewCard {\n  id: string;\n}\n\nexport interface IGameState {\n  stageZoom: Vector2d;\n  stagePosition: Vector2d;\n  radialMenuPosition: Vector2d | null;\n  playerColors: { [key: string]: PlayerColor };\n  peerId: string;\n  previewCard: IPreviewCard | null;\n  menuPreviewCardJsonId: string | null;\n  activeGameType: GameType | null;\n}\n\nconst queryParams = new URLSearchParams(window.location.search);\nconst queryParamsGameType = queryParams.get(\"gameType\");\n\nconst localStorageState: IGameState = !!queryParamsGameType\n  ? { activeGameType: queryParamsGameType }\n  : loadState(\"game\");\n\nlocalStorageState.playerColors = {};\nlocalStorageState.playerColors[myPeerRef] = \"red\";\nlocalStorageState.peerId = \"\";\nlocalStorageState.previewCard = null;\nlocalStorageState.menuPreviewCardJsonId = null;\nlocalStorageState.radialMenuPosition = null;\n\nconst defaultState: IGameState = {\n  playerColors: {},\n  stageZoom: { x: 0.5, y: 0.5 },\n  stagePosition: { x: 0, y: 0 },\n  peerId: \"\",\n  previewCard: null,\n  menuPreviewCardJsonId: null,\n  activeGameType: null,\n  radialMenuPosition: null,\n};\nexport const initialState: IGameState = {\n  ...defaultState,\n  ...localStorageState,\n};\n","export const cardConstants = {\n  CARD_HEIGHT: 209,\n  CARD_WIDTH: 150,\n  CARD_PREVIEW_HEIGHT: 418,\n  CARD_PREVIEW_WIDTH: 300,\n};\n\nexport enum StatusTokenType {\n  Stunned = \"stunned\",\n  Confused = \"confused\",\n  Tough = \"tough\",\n}\n\nexport enum CounterTokenType {\n  Damage = \"damage\",\n  Threat = \"threat\",\n  Generic = \"generic\",\n}\n","import { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Vector2d } from \"konva/lib/types\";\nimport { GameType, PlayerColor } from \"../../constants/app-constants\";\nimport { receiveRemoteGameState, resetApp } from \"../../store/global.actions\";\nimport { IGameState, initialState } from \"./initialState\";\n\n// Reducers\nconst updateZoomReducer: CaseReducer<IGameState, PayloadAction<Vector2d>> = (\n  state,\n  action\n) => {\n  state.stageZoom = action.payload;\n  return state;\n};\n\nconst updatePositionReducer: CaseReducer<IGameState, PayloadAction<Vector2d>> =\n  (state, action) => {\n    state.stagePosition = action.payload;\n    return state;\n  };\n\nconst connectToRemoteGameReducer: CaseReducer<\n  IGameState,\n  PayloadAction<string>\n> = () => {};\n\nconst setPlayerColorReducer: CaseReducer<\n  IGameState,\n  PayloadAction<{ ref: string; color: PlayerColor }>\n> = (state, action) => {\n  state.playerColors[action.payload.ref] = action.payload.color;\n};\n\nconst setPeerIdReducer: CaseReducer<IGameState, PayloadAction<string>> = (\n  state,\n  action\n) => {\n  state.peerId = action.payload;\n};\n\nconst setPreviewCardIdReducer: CaseReducer<IGameState, PayloadAction<string>> =\n  (state, action) => {\n    if (!state.previewCard) {\n      state.previewCard = { id: action.payload };\n    } else if (state.previewCard.id !== action.payload) {\n      state.previewCard.id = action.payload;\n    }\n  };\n\nconst clearPreviewCardReducer: CaseReducer<IGameState> = (state) => {\n  state.previewCard = null;\n};\n\nconst setMenuPreviewCardJsonIdReducer: CaseReducer<\n  IGameState,\n  PayloadAction<string>\n> = (state, action) => {\n  state.menuPreviewCardJsonId = action.payload;\n};\n\nconst clearMenuPreviewCardJsonIdReducer: CaseReducer<IGameState> = (state) => {\n  state.menuPreviewCardJsonId = null;\n};\n\nconst requestResyncReducer: CaseReducer<IGameState> = () => {};\n\nconst updateActiveGameTypeReducer: CaseReducer<\n  IGameState,\n  PayloadAction<GameType>\n> = (state, action) => {\n  state.activeGameType = action.payload;\n};\n\nconst quitGameReducer: CaseReducer<IGameState> = (state) => {\n  state.activeGameType = null;\n};\n\nconst showRadialMenuAtPositionReducer: CaseReducer<\n  IGameState,\n  PayloadAction<Vector2d>\n> = (state, action) => {\n  state.radialMenuPosition = action.payload;\n};\n\nconst hideRadialMenuReducer: CaseReducer<IGameState> = (state) => {\n  state.radialMenuPosition = null;\n};\n\n// slice\nconst gameSlice = createSlice({\n  name: \"game\",\n  initialState: initialState,\n  reducers: {\n    updateZoom: updateZoomReducer,\n    updatePosition: updatePositionReducer,\n    connectToRemoteGame: connectToRemoteGameReducer,\n    setPlayerColor: setPlayerColorReducer,\n    setPeerId: setPeerIdReducer,\n    requestResync: requestResyncReducer,\n    setPreviewCardId: setPreviewCardIdReducer,\n    clearPreviewCard: clearPreviewCardReducer,\n    setMenuPreviewCardJsonId: setMenuPreviewCardJsonIdReducer,\n    clearMenuPreviewCardJsonId: clearMenuPreviewCardJsonIdReducer,\n    updateActiveGameType: updateActiveGameTypeReducer,\n    quitGame: quitGameReducer,\n    showRadialMenuAtPosition: showRadialMenuAtPositionReducer,\n    hideRadialMenu: hideRadialMenuReducer,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(receiveRemoteGameState, (state, action) => {\n      state.activeGameType = action.payload.game.activeGameType;\n    });\n    builder.addCase(resetApp, (state, action) => {\n      state.stagePosition = { x: 0, y: 0 };\n      state.stageZoom = { x: 0.5, y: 0.5 };\n      state.previewCard = null;\n    });\n  },\n});\n\nexport const {\n  updateZoom,\n  updatePosition,\n  connectToRemoteGame,\n  setPlayerColor,\n  setPeerId,\n  requestResync,\n  setPreviewCardId,\n  clearPreviewCard,\n  setMenuPreviewCardJsonId,\n  clearMenuPreviewCardJsonId,\n  updateActiveGameType,\n  quitGame,\n  showRadialMenuAtPosition,\n  hideRadialMenu,\n} = gameSlice.actions;\n\nexport default gameSlice.reducer;\n","import {\n  createSlice,\n  CaseReducer,\n  PayloadAction,\n  Draft,\n} from \"@reduxjs/toolkit\";\nimport {\n  initialState,\n  ICardsDataState,\n  IGameCardsDataState,\n} from \"./initialState\";\n\n// import * as PackData from \"../../generated/packs\";\n// import { CardData as CardDataLOTR } from \"../../external-api/beorn-json-data\";\nimport {\n  CardData as CardDataMarvel,\n  CardPack as CardPackMarvel,\n} from \"../../external-api/marvel-card-data\";\nimport SetData from \"../../external/marvelsdb-json-data/sets.json\";\nimport Scenarios from \"../../external/ringsteki-json-data/scenarios.json\";\nimport { CardData } from \"../../external-api/common-card-data\";\nimport { GameType } from \"../../constants/app-constants\";\nimport {\n  CardPack as CardPackLOTR,\n  CardData as CardDataLOTR,\n} from \"../../external-api/beorn-json-data\";\nimport { updateActiveGameType } from \"../game/game.slice\";\nimport { receiveRemoteGameState } from \"../../store/global.actions\";\n\n// Utilities\nconst convertMarvelToCommonFormat = (\n  cardMarvelFormat: CardDataMarvel\n): CardData => {\n  const mappedCardData: CardData = {\n    code: cardMarvelFormat.code,\n    name: cardMarvelFormat.name,\n    images: null,\n    octgnId: cardMarvelFormat.octgn_id ?? null,\n    quantity: cardMarvelFormat.quantity,\n    doubleSided: !!cardMarvelFormat.double_sided,\n    backLink: cardMarvelFormat.back_link ?? null,\n    typeCode: cardMarvelFormat.type_code,\n    subTypeCode: null,\n    extraInfo: {\n      setCode: cardMarvelFormat.set_code ?? null,\n      packCode: cardMarvelFormat.pack_code,\n      factionCode: cardMarvelFormat.faction_code,\n    },\n  };\n  return mappedCardData;\n};\n\nconst convertLOTRToCommonFormat = (encounterCard: boolean) => (\n  cardLOTRFormat: CardDataLOTR\n): CardData => {\n  // if (!cardLOTRFormat.RingsDbCardId) {\n  //   console.log(\n  //     `No RingsDB Id for ${cardLOTRFormat.Slug} from ${cardLOTRFormat.CardSet}`\n  //   );\n  // }\n\n  // if (cardLOTRFormat.Front && !cardLOTRFormat.Front.ImagePath) {\n  //   console.log(\n  //     `No Front Image Path for ${cardLOTRFormat.Slug} from ${cardLOTRFormat.CardSet}`\n  //   );\n  // }\n\n  let cardBackImage = cardLOTRFormat.Back?.ImagePath;\n\n  if (cardLOTRFormat.Back && !cardLOTRFormat.Back.ImagePath) {\n    const frontImage = cardLOTRFormat.Front.ImagePath;\n    const frontImageWithoutExtension = frontImage\n      .split(\".\")\n      .slice(0, -1)\n      .join(\".\");\n    if (\n      frontImageWithoutExtension[frontImageWithoutExtension.length - 1] !== \"A\"\n    ) {\n      console.log(\n        `No Non-B Back Image Path for ${cardLOTRFormat.Slug} from ${cardLOTRFormat.CardSet}`\n      );\n    } else {\n      cardBackImage = frontImage.replaceAll(\"A.\", \"B.\");\n    }\n  }\n\n  const mappedCardData: CardData = {\n    code: encounterCard ? cardLOTRFormat.Slug : cardLOTRFormat.RingsDbCardId,\n    name: cardLOTRFormat.Title,\n    images: {\n      front: cardLOTRFormat.Front.ImagePath,\n      back: cardBackImage ?? null,\n    },\n    octgnId: cardLOTRFormat.OctgnGuid ?? null,\n    quantity: cardLOTRFormat.Quantity ?? 1,\n    doubleSided: !!cardLOTRFormat.Back,\n    backLink: null,\n    typeCode: cardLOTRFormat.CardType,\n    subTypeCode: cardLOTRFormat.CardSubType,\n    extraInfo: {\n      setCode: cardLOTRFormat.CardSet ?? null,\n      packCode: \"TODO - lotr\",\n      factionCode: encounterCard ? \"encounter\" : \"player\",\n    },\n  };\n  return mappedCardData;\n};\n\n// Reducers\nconst loadCardsDataReducer: CaseReducer<ICardsDataState> = (state) => {\n  //This reducer is only intended to be called a single time each load.\n  state.data = {};\n  // const heroPacks = Object.entries(PackData)\n  //   .filter(([key, _value]) => !key.includes(\"_encounter\"))\n  //   .map(([key, value]) => (value as unknown) as CardPackMarvel);\n\n  // const encounterPacks = Object.entries(PackData)\n  //   .filter(([key, value]) => key.includes(\"_encounter\"))\n  //   .map(([key, value]) => (value as unknown) as CardPackMarvel);\n\n  // heroPacks.forEach((pack) =>\n  //   pack.map(convertMarvelToCommonFormat).forEach((card: CardData) => {\n  //     if (state.entities[card.code]) {\n  //       console.error(\"Found multiple cards with code \" + card.code);\n  //     }\n\n  //     // if (!card.octgn_id) {\n  //     //   console.error(`Card ${card.code} had no octgn_id!`);\n  //     // }\n\n  //     state.entities[card.code] = card;\n  //   })\n  // );\n\n  // encounterPacks.forEach((pack) =>\n  //   pack.map(convertMarvelToCommonFormat).forEach((card: CardData) => {\n  //     if (state.encounterEntities[card.code]) {\n  //       console.error(\"Found multiple cards with code \" + card.code);\n  //     }\n\n  //     // if (!card.octgn_id) {\n  //     //   console.error(`Card ${card.code}: ${card.name} had no octgn_id!`);\n  //     // }\n\n  //     state.encounterEntities[card.code] = card;\n  //   })\n  // );\n\n  let activeData = state.data[GameType.MarvelChampions];\n  if (!!activeData) {\n    activeData.setData = {};\n  } else {\n    state.data[GameType.MarvelChampions] = {\n      entities: {},\n      encounterEntities: {},\n      setData: {},\n    };\n    activeData = state.data[GameType.MarvelChampions];\n  }\n\n  SetData.forEach((set) => {\n    if (!!activeData) {\n      activeData.setData[set.code] = {\n        name: set.name,\n        setTypeCode: set.card_set_type_code,\n        cardsInSet: [],\n      };\n    }\n  });\n\n  activeData = state.data[GameType.LordOfTheRingsLivingCardGame];\n\n  if (!!activeData) {\n    activeData.setData = {};\n  } else {\n    state.data[GameType.LordOfTheRingsLivingCardGame] = {\n      entities: {},\n      encounterEntities: {},\n      setData: {},\n    };\n    activeData = state.data[GameType.LordOfTheRingsLivingCardGame];\n  }\n\n  Scenarios.forEach((scenario) => {\n    if (!!activeData) {\n      activeData.setData[scenario.Slug] = {\n        name: scenario.Title,\n        setTypeCode: scenario.Product,\n        cardsInSet: [],\n      };\n    }\n  });\n\n  return state;\n};\n\nconst storeCardData = (isPlayerPack: boolean, careAboutDups: boolean) => (cs: {\n  location: Draft<IGameCardsDataState> | undefined;\n  card: CardData;\n}) => {\n  const stateLocation = isPlayerPack\n    ? (cs.location as IGameCardsDataState).entities\n    : (cs.location as IGameCardsDataState).encounterEntities;\n\n  // if (!card.octgn_id) {\n  //   console.error(`Card ${card.code} had no octgn_id!`);\n  // }\n\n  if (!(cs.card.code[0] === \"0\" && cs.card.code[1] === \"0\")) {\n    if (stateLocation[cs.card.code]) {\n      if (careAboutDups) {\n        console.error(\n          \"Found multiple cards with code \" +\n            cs.card.code +\n            \" \" +\n            cs.card.name +\n            \" \" +\n            cs.card.extraInfo.setCode +\n            \" Existing card is \" +\n            stateLocation[cs.card.code].name +\n            \" \" +\n            stateLocation[cs.card.code].extraInfo.setCode\n        );\n      }\n    }\n    stateLocation[cs.card.code] = cs.card;\n  }\n};\n\nconst loadCardsForEncounterSetReducer: CaseReducer<\n  ICardsDataState,\n  PayloadAction<{\n    setCode: string;\n    cards: CardDataLOTR[];\n  }>\n> = (state, action) => {\n  const activeData = state.data[GameType.LordOfTheRingsLivingCardGame];\n  const activeSet = activeData?.setData[action.payload.setCode];\n\n  if (!action.payload.cards.map) {\n    console.log(\"No cards found for scenario \" + action.payload.setCode);\n    return;\n  }\n\n  action.payload.cards\n    .map(convertLOTRToCommonFormat(true))\n    .map((c) => {\n      return {\n        location: state.data[GameType.LordOfTheRingsLivingCardGame],\n        card: c,\n      };\n    })\n    .forEach(storeCardData(false, false));\n\n  if (!!activeSet) {\n    activeSet.cardsInSet = activeSet.cardsInSet.concat(\n      action.payload.cards\n        .filter(\n          (cd) => cd.CardSet.toLocaleLowerCase().indexOf(\"nightmare\") === -1\n        )\n        .map((cd) => {\n          return {\n            code: cd.Slug,\n            quantity: cd.Quantity,\n          };\n        })\n    );\n  }\n\n  return state;\n};\n\nconst loadCardsDataForPackReducer: CaseReducer<\n  ICardsDataState,\n  PayloadAction<{\n    packType: GameType;\n    pack: CardPackMarvel | CardPackLOTR;\n    pack_code: string;\n  }>\n> = (state, action) => {\n  if (!state.data[action.payload.packType]) {\n    state.data[action.payload.packType] = {\n      entities: {},\n      encounterEntities: {},\n      setData: {},\n    };\n  }\n\n  if (action.payload.packType === GameType.MarvelChampions) {\n    //This reducer is only intended to be called a single time each load.\n    const isHeroPack = !action.payload.pack_code.includes(\"_encounter\");\n\n    const pack = action.payload.pack as CardPackMarvel;\n\n    pack\n      .map(convertMarvelToCommonFormat)\n      .map((c) => {\n        return { location: state.data[action.payload.packType], card: c };\n      })\n      .forEach(storeCardData(isHeroPack, true));\n  } else if (\n    action.payload.packType === GameType.LordOfTheRingsLivingCardGame\n  ) {\n    const pack = action.payload.pack as CardPackLOTR;\n    if (!pack.cards) {\n      console.log(pack);\n    }\n    pack.cards\n      .map(convertLOTRToCommonFormat(false))\n      .map((c) => {\n        return { location: state.data[action.payload.packType], card: c };\n      })\n      .forEach(storeCardData(true, true));\n  }\n\n  return state;\n};\n\n// slice\nconst cardsDataSlice = createSlice({\n  name: \"cardsData\",\n  initialState: initialState,\n  reducers: {\n    loadCardsData: loadCardsDataReducer,\n    loadCardsDataForPack: loadCardsDataForPackReducer,\n    loadCardsForEncounterSet: loadCardsForEncounterSetReducer,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(receiveRemoteGameState, (state, action) => {\n      state.activeDataType =\n        action.payload.game.activeGameType ?? GameType.MarvelChampions;\n    });\n    builder.addCase(updateActiveGameType, (state, action) => {\n      state.activeDataType = action.payload;\n    });\n  },\n});\n\nexport const {\n  loadCardsData,\n  loadCardsDataForPack,\n  loadCardsForEncounterSet,\n} = cardsDataSlice.actions;\n\nexport default cardsDataSlice.reducer;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { Vector2d } from \"konva/lib/types\";\nimport { ICardDetails } from \"./initialState\";\n\nexport interface AddCardStackWithIdPayload {\n  cardJsonIds: string[];\n  position: Vector2d;\n  id: string;\n}\n\nexport interface PullCardOutOfCardStackWithIdPayload {\n  cardStackId: string;\n  jsonId: string;\n  pos: Vector2d;\n  id: string;\n}\n\nexport interface StartCardMoveWithSplitStackIdPayload {\n  id: string;\n  splitTopCard: boolean;\n  splitCardId: string;\n}\n\nexport interface DrawCardsOutOfCardStackWithIdsPayload {\n  cardStackId: string;\n  numberToDraw: number;\n  facedown?: boolean;\n  idsToUse: string[];\n}\n\nexport interface ReplaceCardStackPayload {\n  id: string;\n  newStack: ICardDetails[];\n}\n\nexport interface CreateDeckPayload {\n  position: Vector2d;\n  heroId: string;\n  data: any;\n  dataId: string;\n  extraHeroCards: ICardDetails[];\n  relatedEncounterDeck: string[];\n  encounterDeckId: string;\n  relatedObligationDeck: string[];\n  obligationDeckId: string;\n}\n\nexport const addCardStackWithId =\n  createAction<AddCardStackWithIdPayload>(\"addCardStackWithId\");\n\nexport const pullCardOutOfCardStackWithId =\n  createAction<PullCardOutOfCardStackWithIdPayload>(\n    \"pullCardOutOfCardStackWithId\"\n  );\n\nexport const drawCardsOutOfCardStackWithIds =\n  createAction<DrawCardsOutOfCardStackWithIdsPayload>(\n    \"drawCardsOutOfCardStackWithIds\"\n  );\n\nexport const startCardMoveWithSplitStackId =\n  createAction<StartCardMoveWithSplitStackIdPayload>(\n    \"startCardMoveWithSplitStackId\"\n  );\n\nexport const replaceCardStack =\n  createAction<ReplaceCardStackPayload>(\"replaceCardStack\");\n\nexport const setStackShuffling =\n  createAction<{\n    id: string;\n    shuffling: boolean;\n  }>(\"setStackShuffling\");\n\nexport const createDeckFromTextFileWithIds = createAction<CreateDeckPayload>(\n  \"createDeckFromTextFileWithIds\"\n);\n","import { Vector2d } from \"konva/lib/types\";\n\nexport const getDistance = (point1: Vector2d, point2: Vector2d): number => {\n  const deltaX = point1.x - point2.x;\n  const deltaY = point1.y - point2.y;\n  return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n};\n\nexport const getCenter = (p1: Vector2d, p2: Vector2d) => {\n  return {\n    x: (p1.x + p2.x) / 2,\n    y: (p1.y + p2.y) / 2,\n  };\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { CardData } from \"../../external-api/common-card-data\";\nimport { RootState } from \"../../store/rootReducer\";\nimport { ICardsDataState, Set } from \"../cards-data/initialState\";\n\nexport interface IEncounterEntity {\n  setCode: string;\n  setData: Set;\n  cards: CardData[];\n}\n\nconst getCurrentCardData = (cardsData: ICardsDataState) => {\n  return (\n    cardsData.data[cardsData.activeDataType] ?? {\n      entities: {},\n      encounterEntities: {},\n      setData: {},\n    }\n  );\n};\n\nexport const getCardsData = (state: RootState) => state.cardsData;\n\nexport const getCardsDataEntities = createSelector(\n  getCardsData,\n  (cardsData) => {\n    const data = getCurrentCardData(cardsData);\n    return { ...data.entities, ...data.encounterEntities };\n  }\n);\n\nexport const getCardsDataHeroEntities = createSelector(\n  getCardsData,\n  (cardsData) => {\n    const data = getCurrentCardData(cardsData);\n    return data.entities;\n  }\n);\n\nexport const getCardsDataHerosByName = createSelector(\n  getCardsData,\n  (cardsData) => {\n    const data = getCurrentCardData(cardsData);\n    let cardsDataByName: { [key: string]: CardData } = {};\n    Object.values(data.entities).forEach((cd) => {\n      if (cd.typeCode === \"hero\") {\n        cardsDataByName[cd.name] = cd;\n      }\n    });\n    return cardsDataByName;\n  }\n);\n\nexport const getCardsDataPlayerCardsByName = createSelector(\n  getCardsData,\n  (cardsData) => {\n    const data = getCurrentCardData(cardsData);\n    let cardsDataByName: { [key: string]: CardData } = {};\n    Object.values(data.entities).forEach((cd) => {\n      if (cd.typeCode !== \"hero\") {\n        cardsDataByName[cd.name] = cd;\n      }\n    });\n    return cardsDataByName;\n  }\n);\n\nexport const getCardsDataEncounterEntities = createSelector(\n  getCardsData,\n  (cardsData) => {\n    const data = getCurrentCardData(cardsData);\n    return data.encounterEntities;\n  }\n);\n\nexport const getCardsDataSetData = createSelector(getCardsData, (cardsData) => {\n  const data = getCurrentCardData(cardsData);\n  return data.setData;\n});\n\nexport const getCardsDataSetDataAsEncounterEntities = createSelector(\n  getCardsDataSetData,\n  getCardsDataEncounterEntities,\n  (setData, encounterEntities) => {\n    return Object.entries(setData).map(([key, value]) => {\n      const encounterEntity: IEncounterEntity = {\n        setCode: key,\n        setData: value,\n        cards: value.cardsInSet.map((cis) => encounterEntities[cis.code]),\n      };\n\n      return encounterEntity;\n    });\n  }\n);\n\nexport const getCardsDataEncounterEntitiesBySetCode = createSelector(\n  getCardsDataEncounterEntities,\n  getCardsDataHeroEntities,\n  getCardsDataSetData,\n  (encounterEntities, herosData, setData): IEncounterEntity[] => {\n    const setTypesEncounters: { [key: string]: CardData[] } = {};\n\n    const campaignCards = Object.values(herosData).filter(\n      (pc) => pc.extraInfo.factionCode === \"campaign\"\n    );\n\n    Object.values(encounterEntities)\n      .concat(campaignCards)\n      .forEach((encounterCard) => {\n        const setCode = encounterCard.extraInfo.setCode || \"unknown\";\n        if (!!setTypesEncounters[setCode]) {\n          setTypesEncounters[setCode].push(encounterCard);\n        } else {\n          setTypesEncounters[setCode] = [encounterCard];\n        }\n      });\n\n    return Object.entries(setTypesEncounters)\n      .map(([key, value]) => ({\n        setCode: key,\n        setData: setData[key],\n        cards: value,\n      }))\n      .filter(\n        (set) =>\n          set.setData.setTypeCode !== \"nemesis\" &&\n          set.setData.setTypeCode !== \"hero\"\n      )\n      .sort((a, b) => (a.setData.name > b.setData.name ? 1 : -1));\n  }\n);\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../store/rootReducer\";\nimport { ICardStack } from \"./initialState\";\n\nexport const getCards = (state: RootState) => state.liveState.present.cards;\n\nexport const getCardMapById = createSelector(getCards, (cards) => {\n  return cards.cards.reduce((map: { [k: string]: ICardStack }, card) => {\n    map[card.id] = card;\n    return map;\n  }, {});\n});\n\nexport const cardsSelectedWithPeerRef = (peerRef: string) =>\n  createSelector(getCards, (cards) => {\n    return cards.cards.filter((c) => c.selected && c.controlledBy === peerRef);\n  });\n\nexport const anyCardsSelectedWithPeerRef = (peerRef: string) =>\n  createSelector(getCards, (cards) => {\n    return cards.cards.some((c) => c.selected && c.controlledBy === peerRef);\n  });\n\nexport const getPanMode = (state: RootState) =>\n  state.liveState.present.cards.panMode;\n\nexport const getMultiselectMode = (state: RootState) =>\n  state.liveState.present.cards.multiselectMode;\n\nexport const getDropTargetCardsById = createSelector(getCards, (cards) => {\n  const returnVal: {\n    [key: string]: { ownerRef: string; card: ICardStack | null };\n  } = {};\n  Object.entries(cards.dropTargetCards).forEach(([key, value]) => {\n    if (!!value) {\n      returnVal[value.id] = { ownerRef: key, card: value };\n    }\n  });\n\n  return returnVal;\n});\n","import { ICardDetails } from \"../features/cards/initialState\";\n\n// For some reason, the codes from marvelcdb and the images from cardgamedb can be off\nexport const CARD_PACK_REMAPPING: { [key: string]: string } = {\n  bkw: \"07\",\n  cap: \"04\",\n  drs: \"08\",\n  hlk: \"09\",\n  trors: \"10\",\n  twc: \"03\",\n};\n\n// export const EXTRA_CARDS: { [key: string]: { [key: string]: number } } = {\n//   doctor_strange: {\n//     \"09032\": 1,\n//     \"09033\": 1,\n//     \"09034\": 1,\n//     \"09035\": 1,\n//     \"09036\": 1,\n//   },\n//   ant: {\n//     \"12001c\": 1,\n//   },\n// };\n\nexport const EXTRA_CARDS: { [key: string]: ICardDetails[] } = {\n  doctor_strange: [\n    { jsonId: \"09032\" },\n    { jsonId: \"09033\" },\n    { jsonId: \"09034\" },\n    { jsonId: \"09035\" },\n    { jsonId: \"09036\" },\n  ],\n  ant: [{ jsonId: \"12001c\" }],\n  wsp: [{ jsonId: \"13001c\" }],\n};\n","import { GameType } from \"./app-constants\";\nimport * as React from \"react\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport { CounterTokenType, StatusTokenType } from \"../constants/card-constants\";\n\nexport interface GameProperties {\n  deckSite: string;\n  decklistApi: string;\n  encounterUiName: string;\n  backgroundImageLocation: string;\n  modifiers: ModifierInfo[];\n  tokens: {\n    stunned: TokenInfo | null;\n    confused: TokenInfo | null;\n    tough: TokenInfo | null;\n    damage: NumericTokenInfo | null;\n    threat: NumericTokenInfo | null;\n    generic: NumericTokenInfo | null;\n  };\n}\n\nexport interface TokenInfoBase {\n  touchMenuLetter: string | null;\n  touchMenuIcon: JSX.Element | null;\n  menuText: string;\n  imagePath: string;\n}\nexport interface NumericTokenInfo extends TokenInfoBase {\n  isNumeric: boolean;\n  counterTokenType: CounterTokenType;\n}\n\nexport interface TokenInfo extends TokenInfoBase {\n  menuRemoveText: string;\n  tokenType: StatusTokenType;\n}\n\nexport interface ModifierInfo {\n  attributeId: string;\n  attributeName: string;\n  icon: string;\n  slot: number;\n}\n\nexport const GamePropertiesMap: { [key in GameType]: GameProperties } = {\n  marvelchampions: {\n    deckSite: \"marvelcdb.com\",\n    decklistApi: \"https://marvelcdb.com/api/public/decklist/\",\n    encounterUiName: \"Encounter Set\",\n    backgroundImageLocation:\n      process.env.PUBLIC_URL + \"/images/table/background_marvelchampions.png\",\n    modifiers: [],\n    tokens: {\n      stunned: {\n        tokenType: StatusTokenType.Stunned,\n        touchMenuLetter: null,\n        touchMenuIcon: <NewReleasesIcon fontSize=\"large\"></NewReleasesIcon>,\n        menuText: \"Stun\",\n        menuRemoveText: \"Remove Stun\",\n        imagePath: process.env.PUBLIC_URL + \"/images/standard/stunned.png\",\n      },\n      confused: {\n        tokenType: StatusTokenType.Confused,\n        touchMenuLetter: null,\n        touchMenuIcon: <HelpIcon fontSize=\"large\"></HelpIcon>,\n        menuText: \"Confuse\",\n        menuRemoveText: \"Remove Confuse\",\n        imagePath: process.env.PUBLIC_URL + \"/images/standard/confused.png\",\n      },\n      tough: {\n        tokenType: StatusTokenType.Tough,\n        touchMenuLetter: null,\n        touchMenuIcon: <SecurityIcon fontSize=\"large\"></SecurityIcon>,\n        menuText: \"Tough\",\n        menuRemoveText: \"Remove Tough\",\n        imagePath: process.env.PUBLIC_URL + \"/images/standard/tough.png\",\n      },\n      damage: {\n        counterTokenType: CounterTokenType.Damage,\n        isNumeric: true,\n        touchMenuLetter: \"D\",\n        touchMenuIcon: null,\n        menuText: \"Set Damage\",\n        imagePath: process.env.PUBLIC_URL + \"/images/standard/damage.png\",\n      },\n      threat: {\n        counterTokenType: CounterTokenType.Threat,\n        isNumeric: true,\n        touchMenuLetter: \"T\",\n        touchMenuIcon: null,\n        menuText: \"Set Threat\",\n        imagePath: process.env.PUBLIC_URL + \"/images/standard/threat.png\",\n      },\n      generic: {\n        counterTokenType: CounterTokenType.Generic,\n        isNumeric: true,\n        touchMenuLetter: \"G\",\n        touchMenuIcon: null,\n        menuText: \"Set Generic Tokens\",\n        imagePath:\n          process.env.PUBLIC_URL + \"/images/standard/generic_counter.png\",\n      },\n    },\n  },\n  lotrlcg: {\n    deckSite: \"ringsdb.com\",\n    decklistApi: \"https://ringsdb.com/api/public/decklist/\",\n    encounterUiName: \"Scenario\",\n    backgroundImageLocation:\n      process.env.PUBLIC_URL + \"/images/table/background_lotrlcg.jpg\",\n    modifiers: [\n      {\n        attributeId: \"threat\",\n        attributeName: \"Threat\",\n        icon: process.env.PUBLIC_URL + \"/images/standard/lotr/threat.png\",\n        slot: 1,\n      },\n      {\n        attributeId: \"willpower\",\n        attributeName: \"Willpower\",\n        icon: process.env.PUBLIC_URL + \"/images/standard/lotr/willpower.png\",\n        slot: 2,\n      },\n      {\n        attributeId: \"attack\",\n        attributeName: \"Attack\",\n        icon: process.env.PUBLIC_URL + \"/images/standard/lotr/attack.png\",\n        slot: 3,\n      },\n      {\n        attributeId: \"defense\",\n        attributeName: \"Defense\",\n        icon: process.env.PUBLIC_URL + \"/images/standard/lotr/defense.png\",\n        slot: 4,\n      },\n      {\n        attributeId: \"hitpoints\",\n        attributeName: \"Hit Points\",\n        icon: process.env.PUBLIC_URL + \"/images/standard/lotr/hitpoints.png\",\n        slot: 5,\n      },\n    ],\n    tokens: {\n      stunned: {\n        tokenType: StatusTokenType.Stunned,\n        touchMenuLetter: \"Q\",\n        touchMenuIcon: null,\n        menuText: \"Quest\",\n        menuRemoveText: \"Remove From Quest\",\n        imagePath: process.env.PUBLIC_URL + \"/images/standard/quest.png\",\n      },\n      confused: null,\n      tough: null,\n      damage: {\n        counterTokenType: CounterTokenType.Damage,\n        isNumeric: true,\n        touchMenuLetter: \"D\",\n        touchMenuIcon: null,\n        menuText: \"Set Damage\",\n        imagePath: process.env.PUBLIC_URL + \"/images/standard/damage_lotr.png\",\n      },\n      threat: {\n        counterTokenType: CounterTokenType.Threat,\n        isNumeric: true,\n        touchMenuLetter: \"P\",\n        touchMenuIcon: null,\n        menuText: \"Set Progress\",\n        imagePath: process.env.PUBLIC_URL + \"/images/standard/progress.png\",\n      },\n      generic: {\n        counterTokenType: CounterTokenType.Generic,\n        isNumeric: true,\n        touchMenuLetter: \"R\",\n        touchMenuIcon: null,\n        menuText: \"Set Resource Tokens\",\n        imagePath: process.env.PUBLIC_URL + \"/images/standard/resource.png\",\n      },\n    },\n  },\n};\n","import { Action, createAsyncThunk, ThunkAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { Vector2d } from \"konva/lib/types\";\nimport { RootState } from \"../../store/rootReducer\";\nimport {\n  getCardsDataEncounterEntities,\n  getCardsDataHeroEntities,\n  getCardsDataHerosByName,\n  getCardsDataPlayerCardsByName,\n} from \"../cards-data/cards-data.selectors\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  addCardStackWithId,\n  createDeckFromTextFileWithIds,\n  drawCardsOutOfCardStackWithIds,\n  pullCardOutOfCardStackWithId,\n  replaceCardStack,\n  setStackShuffling,\n  startCardMoveWithSplitStackId,\n} from \"./cards.actions\";\nimport { ICardDetails, ICardStack } from \"./initialState\";\nimport { getCards } from \"./cards.selectors\";\nimport { EXTRA_CARDS } from \"../../constants/card-pack-mapping\";\nimport { GameType, myPeerRef } from \"../../constants/app-constants\";\nimport { GamePropertiesMap } from \"../../constants/game-type-properties-mapping\";\nimport { convertMarvelTxtToDeckInfo } from \"../../utilities/marvel-txt-converter\";\n\ninterface AddCardStackPayload {\n  cardJsonIds: string[];\n  position: Vector2d;\n}\n\nexport interface PullCardOutOfCardStackPayload {\n  cardStackId: string;\n  jsonId: string;\n  pos: Vector2d;\n}\n\nexport interface StartCardMovePayload {\n  id: string;\n  splitTopCard: boolean;\n}\n\nexport interface DrawCardsOutOfCardStackPayload {\n  cardStackId: string;\n  numberToDraw: number;\n  facedown?: boolean;\n}\n\nexport const shuffleStack =\n  (id?: string): ThunkAction<void, RootState, unknown, Action<string>> =>\n  (dispatch, getState) => {\n    const cardsState = getCards(getState());\n    const stacksToShuffle = !!id\n      ? [cardsState.cards.find((c) => c.id === id)]\n      : cardsState.cards.filter(\n          (c) => c.selected && c.controlledBy === myPeerRef\n        );\n\n    stacksToShuffle\n      .filter((s): s is ICardStack => !!s && s.cardStack.length > 1)\n      .forEach((stackToShuffle) => {\n        dispatch(setStackShuffling({ id: stackToShuffle.id, shuffling: true }));\n        const shuffledStack = shuffle(stackToShuffle.cardStack);\n        dispatch(\n          replaceCardStack({ id: stackToShuffle.id, newStack: shuffledStack })\n        );\n\n        // We have to do a setTimeout here, because if we do it in this event loop,\n        // the overall change for this card is nothing for the shuffling param\n        setTimeout(() => {\n          dispatch(\n            setStackShuffling({ id: stackToShuffle.id, shuffling: false })\n          );\n        });\n      });\n  };\n\nexport const addCardStack =\n  (\n    payload: AddCardStackPayload\n  ): ThunkAction<void, RootState, unknown, Action<string>> =>\n  (dispatch) => {\n    const payloadWithId = {\n      ...payload,\n      id: uuidv4(),\n    };\n    dispatch(addCardStackWithId(payloadWithId));\n  };\n\nexport const pullCardOutOfCardStack =\n  (\n    payload: PullCardOutOfCardStackPayload\n  ): ThunkAction<void, RootState, unknown, Action<string>> =>\n  (dispatch) => {\n    const payloadWithId = {\n      ...payload,\n      id: uuidv4(),\n    };\n    dispatch(pullCardOutOfCardStackWithId(payloadWithId));\n  };\n\nexport const startCardMove =\n  (\n    payload: StartCardMovePayload\n  ): ThunkAction<void, RootState, unknown, Action<string>> =>\n  (dispatch) => {\n    const payloadWithId = {\n      ...payload,\n      splitCardId: uuidv4(),\n    };\n    dispatch(startCardMoveWithSplitStackId(payloadWithId));\n  };\n\nexport const drawCardsOutOfCardStack =\n  (\n    payload: DrawCardsOutOfCardStackPayload\n  ): ThunkAction<void, RootState, unknown, Action<string>> =>\n  (dispatch) => {\n    const possibleIds = Array.from({ length: payload.numberToDraw }).map((_i) =>\n      uuidv4()\n    );\n    const payloadWithIds = {\n      ...payload,\n      idsToUse: possibleIds,\n    };\n    dispatch(drawCardsOutOfCardStackWithIds(payloadWithIds));\n  };\n\nexport const createDeckFromTxt =\n  (payload: {\n    gameType: GameType;\n    position: Vector2d;\n    txtContents: string;\n  }): ThunkAction<void, RootState, unknown, Action<string>> =>\n  (dispatch, getState) => {\n    if (payload.gameType === GameType.MarvelChampions) {\n      const heroCardsDataByName = getCardsDataHerosByName(getState());\n      const playerCardsDataByName = getCardsDataPlayerCardsByName(getState());\n      dispatch(\n        createDeckFromTextFileWithIds(\n          getMarvelCards(\n            convertMarvelTxtToDeckInfo(\n              heroCardsDataByName,\n              playerCardsDataByName,\n              payload.position,\n              payload.txtContents\n            ),\n            getState(),\n            {\n              gameType: payload.gameType,\n              decklistId: -1,\n              position: payload.position,\n            }\n          )\n        )\n      );\n    }\n  };\n\nexport const fetchDecklistById = createAsyncThunk(\n  \"decklist/fetchByIdStatus\",\n  async (\n    payload: { gameType: GameType; decklistId: number; position: Vector2d },\n    thunkApi\n  ) => {\n    const response = await axios.get(\n      `${GamePropertiesMap[payload.gameType].decklistApi}${payload.decklistId}`\n    );\n    const state: RootState = thunkApi.getState() as RootState;\n\n    switch (payload.gameType) {\n      case GameType.MarvelChampions:\n        return getMarvelCards(response, state, payload);\n      case GameType.LordOfTheRingsLivingCardGame:\n        return getLOTRCards(response, state, payload);\n    }\n  }\n);\n\nconst getMarvelCards = (\n  response: any,\n  state: RootState,\n  payload: { gameType: GameType; decklistId: number; position: Vector2d }\n) => {\n  const heroCardsData = getCardsDataHeroEntities(state);\n  const heroSet = heroCardsData[response.data.investigator_code];\n  const heroSetCode = heroSet.extraInfo.setCode;\n  const encounterCardsData = getCardsDataEncounterEntities(state);\n\n  let heroObligationDeck: string[] = [];\n  Object.entries(encounterCardsData)\n    .filter(\n      ([_key, value]) =>\n        (value.extraInfo.setCode === `${heroSetCode}` ||\n          value.extraInfo.setCode === `${heroSetCode}_nemesis`) &&\n        value.typeCode === \"obligation\"\n    )\n    .forEach(([key, value]) => {\n      heroObligationDeck = heroObligationDeck.concat(\n        Array.from({ length: value.quantity }).map((_i) => key)\n      );\n    });\n\n  // get the encounter cards for this deck\n  const heroEncounterDeckData = Object.values(encounterCardsData).filter(\n    (value) =>\n      value.extraInfo.setCode === `${heroSetCode}_nemesis` &&\n      value.typeCode !== \"obligation\"\n  );\n\n  let heroEncounterDeck: string[] = [];\n  heroEncounterDeckData.forEach((cd) => {\n    heroEncounterDeck = heroEncounterDeck.concat(\n      Array.from({ length: cd.quantity }).map((_i) => cd.code)\n    );\n  });\n\n  // check to see if there are any special extra cards for this hero\n  const extraCards = EXTRA_CARDS[heroSetCode ?? \"\"] ?? [];\n\n  // response.data.slots = { ...extraCards, ...response.data.slots };\n\n  return {\n    position: payload.position,\n    heroId: uuidv4(),\n    data: response.data,\n    dataId: uuidv4(),\n    extraHeroCards: extraCards,\n    relatedEncounterDeck: heroEncounterDeck,\n    encounterDeckId: uuidv4(),\n    relatedObligationDeck: heroObligationDeck,\n    obligationDeckId: uuidv4(),\n  };\n};\n\nconst getLOTRCards = (\n  response: any,\n  state: RootState,\n  payload: { gameType: GameType; decklistId: number; position: Vector2d }\n) => {\n  const heroCardsData = getCardsDataHeroEntities(state);\n\n  let heroStack: ICardDetails[] = [];\n\n  Object.entries(response.data.heroes).forEach(([key, value]) => {\n    const cardDetails: ICardDetails[] = Array.from(Array(value).keys()).map(\n      (): ICardDetails => ({ jsonId: key })\n    );\n    heroStack = heroStack.concat(cardDetails);\n  });\n\n  const newSlots: { [key: string]: number } = {};\n\n  Object.entries(response.data.slots).forEach(([key, value]) => {\n    //get the card data to make sure it's not a hero\n    const cardData = heroCardsData[key];\n    if (!cardData) {\n      throw new Error(`Couldn't find card data for ${key}`);\n    }\n\n    if (cardData.typeCode !== \"Hero\") {\n      newSlots[key] = value as number;\n    }\n  });\n\n  response.data.slots = newSlots;\n\n  return {\n    position: payload.position,\n    heroId: uuidv4(),\n    data: response.data,\n    dataId: uuidv4(),\n    extraHeroCards: heroStack,\n    relatedEncounterDeck: [],\n    encounterDeckId: uuidv4(),\n    relatedObligationDeck: [],\n    obligationDeckId: uuidv4(),\n  };\n};\n\nconst shuffle = (array: ICardDetails[]): ICardDetails[] => {\n  const returnArray = JSON.parse(JSON.stringify(array));\n  var currentIndex = returnArray.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = returnArray[currentIndex];\n    returnArray[currentIndex] = returnArray[randomIndex];\n    returnArray[randomIndex] = temporaryValue;\n  }\n\n  return returnArray;\n};\n","import { loadState } from \"../../store/localStorage\";\nimport {\n  CounterTokenType,\n  StatusTokenType,\n} from \"../../constants/card-constants\";\nimport * as jc from \"jsoncrush\";\n\nexport interface ICardStack {\n  controlledBy: string;\n  dragging: boolean;\n  shuffling: boolean;\n  exhausted: boolean;\n  faceup: boolean;\n  fill: string;\n  id: string;\n  selected: boolean;\n  x: number;\n  y: number;\n  cardStack: ICardDetails[];\n  statusTokens: {\n    [K in StatusTokenType]: boolean;\n  };\n  counterTokens: {\n    [K in CounterTokenType]: number;\n  };\n  modifiers: {\n    [K: string]: number;\n  };\n}\n\nexport interface ICardDetails {\n  jsonId: string;\n}\n\nexport interface ICardsState {\n  outOfSyncWithRemote: boolean;\n  cards: ICardStack[];\n  ghostCards: ICardStack[];\n  dropTargetCards: { [key: string]: ICardStack | null };\n  attachTargetCards: { [key: string]: ICardStack | null };\n  panMode: boolean;\n  multiselectMode: boolean;\n}\n\nconst queryParams = new URLSearchParams(window.location.search);\nconst queryParamsCardsString = queryParams.get(\"cards\");\nconst queryParamsCards = !!queryParamsCardsString\n  ? { cards: JSON.parse(jc.JSONUncrush(queryParamsCardsString)) }\n  : null;\n\nconst localStorageState: ICardsState =\n  queryParamsCards || (loadState(\"liveState\")?.cards ?? {});\n\n// Make sure initially, none of the cards are \"owned\" / \"selected\" / \"shuffling\"\nif (!!localStorageState.cards) {\n  localStorageState.cards.forEach((c) => {\n    c.controlledBy = \"\";\n    c.selected = false;\n    c.shuffling = false;\n\n    // handle missing modifiers\n    if (!c.modifiers) {\n      c.modifiers = {};\n    }\n  });\n}\n\nlocalStorageState.attachTargetCards = {};\nlocalStorageState.dropTargetCards = {};\nlocalStorageState.ghostCards = [];\nlocalStorageState.outOfSyncWithRemote = false;\n\nconst defaultState: ICardsState = {\n  outOfSyncWithRemote: false,\n  cards: [],\n  ghostCards: [],\n  dropTargetCards: {},\n  attachTargetCards: {},\n  panMode: true,\n  multiselectMode: false,\n};\n\nexport const initialState: ICardsState = {\n  ...defaultState,\n  ...localStorageState,\n};\n","import isEqual from \"lodash.isequal\";\nimport {\n  CaseReducer,\n  createSlice,\n  Draft,\n  original,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport { Vector2d } from \"konva/lib/types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  cardConstants,\n  CounterTokenType,\n  StatusTokenType,\n} from \"../../constants/card-constants\";\nimport {\n  receiveRemoteGameState,\n  resetApp,\n  verifyRemoteGameState,\n} from \"../../store/global.actions\";\nimport { getDistance } from \"../../utilities/geo\";\nimport {\n  addCardStackWithId,\n  createDeckFromTextFileWithIds,\n  CreateDeckPayload,\n  drawCardsOutOfCardStackWithIds,\n  pullCardOutOfCardStackWithId,\n  replaceCardStack,\n  setStackShuffling,\n  startCardMoveWithSplitStackId,\n} from \"./cards.actions\";\nimport { fetchDecklistById } from \"./cards.thunks\";\nimport {\n  ICardDetails,\n  ICardsState,\n  ICardStack,\n  initialState,\n} from \"./initialState\";\n\nconst CARD_DROP_TARGET_DISTANCE = 30;\nconst CARD_ATTACH_TARGET_MIN_DISTANCE = 50;\nconst CARD_ATTACH_TARGET_MAX_DISTANCE = 150;\n\n// Helper methods\nconst getCardStackWithId = (\n  state: ICardsState,\n  id: string\n): ICardStack | undefined => {\n  return state.cards.find((card) => card.id === id);\n};\n\nconst mutateCardWithId = (\n  state: ICardsState,\n  id: string,\n  ref: string,\n  callback: (card: ICardStack) => void\n) => {\n  const cardToUpdate = getCardStackWithId(state, id);\n  if (\n    cardToUpdate &&\n    (cardToUpdate.controlledBy === \"\" || cardToUpdate.controlledBy === ref)\n  ) {\n    callback(cardToUpdate);\n  }\n};\n\nconst foreachSelectedAndControlledCard = (\n  state: ICardsState,\n  actorRef: string,\n  callback: (card: ICardStack) => void\n) => {\n  state.cards\n    .filter((card) => card.selected && card.controlledBy === actorRef)\n    .forEach((card) => callback(card));\n};\n\nconst foreachUnselectedCard = (\n  state: ICardsState,\n  callback: (card: ICardStack) => void\n) => {\n  state.cards\n    .filter((card) => !card.selected)\n    .forEach((card) => callback(card));\n};\n\n// Reducers\nconst selectCardReducer: CaseReducer<\n  ICardsState,\n  PayloadAction<{ id: string; unselectOtherCards: boolean }>\n> = (state, action) => {\n  if (action.payload.unselectOtherCards) {\n    unselectAllCardsReducer(state, action);\n  }\n\n  mutateCardWithId(\n    state,\n    action.payload.id,\n    (action as any).ACTOR_REF,\n    (card) => {\n      card.selected = true;\n      card.controlledBy = (action as any).ACTOR_REF;\n    }\n  );\n};\n\nconst unselectCardReducer: CaseReducer<ICardsState, PayloadAction<string>> = (\n  state,\n  action\n) => {\n  mutateCardWithId(state, action.payload, (action as any).ACTOR_REF, (card) => {\n    card.selected = false;\n    card.controlledBy = \"\";\n  });\n};\n\nconst toggleSelectCardReducer: CaseReducer<ICardsState, PayloadAction<string>> =\n  (state, action) => {\n    mutateCardWithId(\n      state,\n      action.payload,\n      (action as any).ACTOR_REF,\n      (card) => {\n        card.selected = !card.selected;\n        if (!card.selected) {\n          card.controlledBy = \"\";\n        } else {\n          card.controlledBy = (action as any).ACTOR_REF;\n        }\n      }\n    );\n  };\n\nconst exhaustCardReducer: CaseReducer<\n  ICardsState,\n  PayloadAction<string | undefined>\n> = (state, action) => {\n  state.cards\n    .filter(\n      (card) =>\n        card.controlledBy === (action as any).ACTOR_REF &&\n        (card.id === (action.payload ?? \"\") || card.selected)\n    )\n    .forEach((card) => {\n      card.exhausted = !card.exhausted;\n    });\n};\n\nconst clearCardTokensReducer: CaseReducer<\n  ICardsState,\n  PayloadAction<string | undefined>\n> = (state, action) => {\n  state.cards\n    .filter(\n      (card) =>\n        card.controlledBy === (action as any).ACTOR_REF &&\n        (card.id === (action.payload ?? \"\") || card.selected)\n    )\n    .forEach((card) => {\n      card.statusTokens = {\n        tough: false,\n        stunned: false,\n        confused: false,\n      };\n\n      card.counterTokens = {\n        damage: 0,\n        threat: 0,\n        generic: 0,\n      };\n\n      card.modifiers = {};\n    });\n};\n\nconst getAttachDrawPos = (\n  state: Draft<ICardsState>,\n  baseCard: ICardStack\n): Vector2d => {\n  let drawPos = { x: 0, y: 0 };\n  let takenSpace = true;\n  for (let i = 0; takenSpace; i++) {\n    const xToDraw = baseCard.x + (i + 1) * 50;\n    const yToDraw = baseCard.y - (i + 1) * 50;\n\n    drawPos = { x: xToDraw, y: yToDraw };\n\n    //Check for existing card\n    takenSpace = !!state.cards.find((c) => c.x === xToDraw && c.y === yToDraw);\n  }\n  return drawPos;\n};\n\nconst cardMoveReducer: CaseReducer<\n  ICardsState,\n  PayloadAction<{ id: string; dx: number; dy: number }>\n> = (state, action) => {\n  const movedCards: ICardStack[] = [];\n\n  let primaryCard: ICardStack | null = null;\n\n  state.cards\n    .filter(\n      (card) =>\n        card.id === action.payload.id ||\n        (card.selected && card.controlledBy === (action as any).ACTOR_REF)\n    )\n    .forEach((card) => {\n      if (card.id === action.payload.id) {\n        primaryCard = card;\n      }\n\n      card.x += action.payload.dx;\n      card.y += action.payload.dy;\n\n      movedCards.push(card);\n    });\n\n  // go through and find if any unselected cards are potential drop targets\n  // If so, get the closest one. But only if the card is owned / controlled by us\n  const possibleDropTargets: { distance: number; card: ICardStack }[] = [];\n  if (\n    !!primaryCard &&\n    (primaryCard as ICardStack).controlledBy === (action as any).ACTOR_REF\n  ) {\n    foreachUnselectedCard(state, (card) => {\n      const distance = getDistance(\n        { x: card.x, y: card.y },\n        !!primaryCard ? { x: primaryCard.x, y: primaryCard.y } : { x: 0, y: 0 }\n      );\n      if (distance < CARD_DROP_TARGET_DISTANCE) {\n        possibleDropTargets.push({\n          distance,\n          card,\n        });\n      }\n    });\n  }\n\n  state.dropTargetCards[(action as any).ACTOR_REF] =\n    possibleDropTargets.sort((c1, c2) => c1.distance - c2.distance)[0]?.card ??\n    null;\n\n  // go through and find if any unselected cards are potential attach targets\n  // If so, get the closest one. But only if the card is owned / controlled by us\n  const possibleAttachTargets: { distance: number; card: ICardStack }[] = [];\n  if (\n    !!primaryCard &&\n    (primaryCard as ICardStack).controlledBy === (action as any).ACTOR_REF\n  ) {\n    foreachUnselectedCard(state, (card) => {\n      const distance = getDistance(\n        !!primaryCard ? { x: primaryCard.x, y: primaryCard.y } : { x: 0, y: 0 },\n        { x: card.x, y: card.y }\n      );\n      if (\n        distance < CARD_ATTACH_TARGET_MAX_DISTANCE &&\n        distance > CARD_ATTACH_TARGET_MIN_DISTANCE &&\n        card.x < (primaryCard?.x ?? 0) &&\n        card.y > (primaryCard?.y ?? 0)\n      ) {\n        possibleAttachTargets.push({\n          distance,\n          card,\n        });\n      }\n    });\n  }\n\n  state.attachTargetCards[(action as any).ACTOR_REF] =\n    possibleAttachTargets.sort((c1, c2) => c1.distance - c2.distance)[0]\n      ?.card ?? null;\n\n  const attachTarget = state.attachTargetCards[(action as any).ACTOR_REF];\n  if (!!attachTarget) {\n    // First, figure out where we should draw the ghost card. Keep moving up\n    // and to the right until there's not a card there\n\n    const drawPos = getAttachDrawPos(state, attachTarget);\n\n    // Next, check if there's already a ghost card where we were going to draw\n    const existingGhostCard = state.ghostCards.find(\n      (gc) =>\n        gc.x === drawPos.x &&\n        gc.y === drawPos.y &&\n        gc.cardStack.length > 0 &&\n        gc.cardStack[0].jsonId === \"-1\"\n    );\n    if (!existingGhostCard) {\n      const attachGhostCard: ICardStack = JSON.parse(\n        JSON.stringify(attachTarget)\n      );\n      // In general we don't want to do this (generate ids in here) but since this is just a temporary ghost card that we won't\n      // ever refer to by id, it should be safe.\n      attachGhostCard.id = uuidv4();\n      attachGhostCard.x = drawPos.x;\n      attachGhostCard.y = drawPos.y;\n      attachGhostCard.cardStack = [{ jsonId: \"-1\" }];\n      state.ghostCards.push(attachGhostCard);\n    }\n  } else {\n    // remove all 'attachment' ghost cards\n    state.ghostCards = state.ghostCards.filter(\n      (gc) => gc.cardStack.length > 0 && gc.cardStack[0].jsonId !== \"-1\"\n    );\n  }\n\n  // put the moved cards at the end. TODO: we could just store the move order or move time\n  // or something, and the array could be a selector\n  movedCards.forEach((movedCard) => {\n    state.cards.push(state.cards.splice(state.cards.indexOf(movedCard), 1)[0]);\n  });\n};\n\nconst endCardMoveReducer: CaseReducer<ICardsState, PayloadAction<string>> = (\n  state,\n  action\n) => {\n  let dropTargetCards: ICardDetails[] = [];\n  let attachTargetCardStacks: ICardStack[] = [];\n  state.cards\n    .filter(\n      (card) =>\n        card.id === action.payload ||\n        (card.selected && card.controlledBy === (action as any).ACTOR_REF)\n    )\n    .forEach((card) => {\n      card.dragging = false;\n\n      if (!!state.attachTargetCards[(action as any).ACTOR_REF]) {\n        attachTargetCardStacks.push(card);\n      } else if (!!state.dropTargetCards[(action as any).ACTOR_REF]) {\n        // Add the cards to the drop Target card stack\n        dropTargetCards = dropTargetCards.concat(card.cardStack);\n      }\n    });\n\n  const attachTarget = state.attachTargetCards[(action as any).ACTOR_REF];\n  if (!!attachTarget) {\n    const drawPos = getAttachDrawPos(state, attachTarget);\n\n    attachTargetCardStacks.forEach((cs, index) => {\n      cs.x = drawPos.x + index * 50;\n      cs.y = drawPos.y - index * 50;\n      state.cards.unshift(state.cards.splice(state.cards.indexOf(cs), 1)[0]);\n    });\n    // Now, if there was a drop target card, remove all those cards from the state\n  } else if (!!state.dropTargetCards[(action as any).ACTOR_REF]) {\n    state.cards = state.cards.filter(\n      (card) =>\n        !(\n          card.id === action.payload ||\n          (card.selected && card.controlledBy === (action as any).ACTOR_REF)\n        )\n    );\n\n    const dropTargetCard = state.cards.find(\n      (card) => card.id === state.dropTargetCards[(action as any).ACTOR_REF]?.id\n    );\n    if (!!dropTargetCard && dropTargetCards.length > 0) {\n      // add the cards we've collected to the top of the stack\n      dropTargetCard.cardStack = dropTargetCards.concat(\n        dropTargetCard.cardStack\n      );\n    }\n  }\n\n  state.ghostCards = [];\n  state.dropTargetCards[(action as any).ACTOR_REF] = null;\n  state.attachTargetCards[(action as any).ACTOR_REF] = null;\n};\n\nconst selectMultipleCardsReducer: CaseReducer<\n  ICardsState,\n  PayloadAction<{ ids: string[]; unselectOtherCards?: boolean }>\n> = (state, action) => {\n  // first, if we were told to unselect our other cards, do that\n  if (!!action.payload.unselectOtherCards) {\n    unselectAllCardsReducer(state, action as unknown as any);\n  }\n\n  action.payload.ids\n    .map((id) => state.cards.find((card) => card.id === id))\n    .forEach((card) => {\n      if (\n        card &&\n        (card.controlledBy === \"\" ||\n          card.controlledBy === (action as any).ACTOR_REF)\n      ) {\n        card.selected = true;\n        card.controlledBy = (action as any).ACTOR_REF;\n      }\n    });\n};\n\nconst unselectAllCardsReducer: CaseReducer<ICardsState, PayloadAction<any>> = (\n  state,\n  action\n) => {\n  state.cards\n    .filter(\n      (card) =>\n        card.controlledBy === \"\" ||\n        card.controlledBy === (action as any).ACTOR_REF\n    )\n    .forEach((card) => {\n      card.selected = false;\n      card.controlledBy = \"\";\n    });\n};\n\nconst togglePanModeReducer: CaseReducer<ICardsState> = (state) => {\n  state.panMode = !state.panMode;\n};\n\nconst toggleMultiselectModeReducer: CaseReducer<ICardsState> = (state) => {\n  state.multiselectMode = !state.multiselectMode;\n};\n\nconst flipCardsReducer: CaseReducer<ICardsState> = (state, action) => {\n  state.cards\n    .filter(\n      (card) =>\n        card.selected &&\n        (card.controlledBy === \"\" ||\n          card.controlledBy === (action as any).ACTOR_REF)\n    )\n    .forEach((card) => {\n      card.faceup = !card.faceup;\n      card.cardStack = card.cardStack.reverse();\n    });\n};\n\nconst resetCardsReducer: CaseReducer<ICardsState> = (state) => {\n  state.cards = [];\n};\n\nconst toggleTokenReducer: CaseReducer<\n  ICardsState,\n  PayloadAction<{ id?: string; tokenType: StatusTokenType; value?: boolean }>\n> = (state, action) => {\n  foreachSelectedAndControlledCard(state, (action as any).ACTOR_REF, (card) => {\n    if (action.payload.value !== undefined) {\n      card.statusTokens[action.payload.tokenType] = action.payload.value;\n    } else {\n      card.statusTokens[action.payload.tokenType] =\n        !card.statusTokens[action.payload.tokenType];\n    }\n  });\n};\n\nconst adjustCounterTokenReducer: CaseReducer<\n  ICardsState,\n  PayloadAction<{\n    id?: string;\n    tokenType: CounterTokenType;\n    delta?: number;\n    value?: number;\n  }>\n> = (state, action) => {\n  let cardsToToggle = state.cards.filter(\n    (c) =>\n      (!!action.payload.id && action.payload.id === c.id) ||\n      (c.selected && c.controlledBy === (action as any).ACTOR_REF)\n  );\n\n  cardsToToggle.forEach((c) => {\n    if (action.payload.value !== undefined) {\n      c.counterTokens[action.payload.tokenType] = action.payload.value;\n    } else if (action.payload.delta !== undefined) {\n      c.counterTokens[action.payload.tokenType] += action.payload.delta;\n    }\n    if (c.counterTokens[action.payload.tokenType] < 0) {\n      c.counterTokens[action.payload.tokenType] = 0;\n    }\n  });\n};\n\nconst adjustModifierReducer: CaseReducer<\n  ICardsState,\n  PayloadAction<{\n    id?: string;\n    modifierId: string;\n    delta?: number;\n    value?: number;\n  }>\n> = (state, action) => {\n  let cardsToToggle = state.cards.filter(\n    (c) =>\n      (!!action.payload.id && action.payload.id === c.id) ||\n      (c.selected && c.controlledBy === (action as any).ACTOR_REF)\n  );\n\n  cardsToToggle.forEach((c) => {\n    if (action.payload.value !== undefined) {\n      c.modifiers[action.payload.modifierId] = action.payload.value;\n    } else if (action.payload.delta !== undefined) {\n      if (c.modifiers[action.payload.modifierId] === undefined) {\n        c.modifiers[action.payload.modifierId] = 0;\n      }\n      c.modifiers[action.payload.modifierId] += action.payload.delta;\n    }\n  });\n};\n\nconst clearAllModifiersReducer: CaseReducer<\n  ICardsState,\n  PayloadAction<{\n    id?: string;\n  }>\n> = (state, action) => {\n  let cardsToToggle = state.cards.filter(\n    (c) =>\n      (!!action.payload.id && action.payload.id === c.id) ||\n      (c.selected && c.controlledBy === (action as any).ACTOR_REF)\n  );\n\n  cardsToToggle.forEach((c) => {\n    c.modifiers = {};\n  });\n};\n// Selectors\n\n// slice\nconst cardsSlice = createSlice({\n  name: \"cards\",\n  initialState: initialState,\n  reducers: {\n    selectCard: selectCardReducer,\n    unselectCard: unselectCardReducer,\n    toggleSelectCard: toggleSelectCardReducer,\n    exhaustCard: exhaustCardReducer,\n    cardMove: cardMoveReducer,\n    endCardMove: endCardMoveReducer,\n    selectMultipleCards: selectMultipleCardsReducer,\n    unselectAllCards: unselectAllCardsReducer,\n    togglePanMode: togglePanModeReducer,\n    toggleMultiselectMode: toggleMultiselectModeReducer,\n    flipCards: flipCardsReducer,\n    resetCards: resetCardsReducer,\n    toggleToken: toggleTokenReducer,\n    adjustCounterToken: adjustCounterTokenReducer,\n    adjustModifier: adjustModifierReducer,\n    clearAllModifiers: clearAllModifiersReducer,\n    clearCardTokens: clearCardTokensReducer,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(receiveRemoteGameState, (state, action) => {\n      // TODO: find a way to keep this automatic\n      state.cards = action.payload.liveState.present.cards.cards;\n      state.ghostCards = action.payload.liveState.present.cards.ghostCards;\n    });\n\n    builder.addCase(verifyRemoteGameState, (state, action) => {\n      state.outOfSyncWithRemote = !(\n        isEqual(\n          original(state.cards)?.filter((c) => !c.dragging),\n          action.payload.liveState.present.cards.cards.filter(\n            (c) => !c.dragging\n          )\n        ) &&\n        isEqual(\n          original(state.ghostCards),\n          action.payload.liveState.present.cards.ghostCards\n        )\n      );\n\n      if (state.outOfSyncWithRemote) {\n        console.error(\n          \"CARDS state is out of synce with remote!!!\",\n          original(state),\n          action.payload.liveState.present.cards\n        );\n      } else {\n        console.log(\"CARDS state is in sync\");\n      }\n    });\n\n    builder.addCase(replaceCardStack, (state, action) => {\n      const cardToReplaceStack = state.cards.find(\n        (c) => c.id === action.payload.id\n      );\n      if (!!cardToReplaceStack) {\n        cardToReplaceStack.cardStack = action.payload.newStack;\n      }\n    });\n\n    builder.addCase(resetApp, (state) => {\n      state.cards = [];\n      // state.previewCard = null;\n      state.dropTargetCards = {};\n      state.ghostCards = [];\n      state.panMode = true;\n    });\n\n    builder.addCase(addCardStackWithId, (state, action) => {\n      const newStack: ICardStack = {\n        controlledBy: \"\",\n        x: action.payload.position.x,\n        y: action.payload.position.y,\n        dragging: false,\n        shuffling: false,\n        exhausted: false,\n        faceup: true,\n        fill: \"red\",\n        id: action.payload.id,\n        cardStack: action.payload.cardJsonIds.map((jsonId) => ({\n          jsonId,\n        })),\n        selected: false,\n        statusTokens: {\n          stunned: false,\n          confused: false,\n          tough: false,\n        },\n        counterTokens: {\n          damage: 0,\n          threat: 0,\n          generic: 0,\n        },\n        modifiers: {},\n      };\n\n      state.cards.push(newStack);\n    });\n\n    builder.addCase(pullCardOutOfCardStackWithId, (state, action) => {\n      const cardStackToUse = state.cards.find(\n        (c) => c.id === action.payload.cardStackId\n      );\n      if (!!cardStackToUse && cardStackToUse.cardStack.length > 1) {\n        const newCardStack: ICardDetails[] = [\n          { jsonId: action.payload.jsonId },\n        ];\n        const newCard = Object.assign({}, cardStackToUse, {\n          cardStack: newCardStack,\n        });\n        newCard.id = action.payload.id;\n        newCard.selected = true;\n        newCard.controlledBy = (action as any).ACTOR_REF;\n        newCard.x = newCard.x + cardConstants.CARD_WIDTH + 5;\n\n        // Find the first instance of the card with the json id. Note that because there\n        // might be multiple cards with the same json id, we can't just do a filter\n        const cardIndexToRemove = cardStackToUse.cardStack.findIndex(\n          (c) => c.jsonId === action.payload.jsonId\n        );\n\n        if (cardIndexToRemove !== -1) {\n          cardStackToUse.cardStack.splice(cardIndexToRemove, 1);\n        }\n\n        cardStackToUse.selected = false;\n        cardStackToUse.controlledBy = \"\";\n\n        state.cards.push(newCard);\n      }\n    });\n\n    builder.addCase(startCardMoveWithSplitStackId, (state, action) => {\n      // first, if the card moving isn't currently selected, clear all _our_ selected cards\n      const cardToStartMoving = getCardStackWithId(state, action.payload.id);\n      if (cardToStartMoving && !cardToStartMoving.selected) {\n        state.cards = state.cards.map((card) => {\n          if (\n            card.controlledBy === \"\" ||\n            card.controlledBy === (action as any).ACTOR_REF\n          ) {\n            card.selected = card.id === action.payload.id;\n            if (card.selected) {\n              card.controlledBy = (action as any).ACTOR_REF;\n            } else {\n              card.controlledBy = \"\";\n            }\n          }\n          return card;\n        });\n      }\n\n      // If we are splitting, make a new stack of cards\n      if (action.payload.splitTopCard) {\n        const cardToMove = state.cards.find((c) => c.id === action.payload.id);\n\n        if (!cardToMove) {\n          throw new Error(\"Expected to find card\");\n        }\n\n        cardToMove.selected = false;\n        cardToMove.controlledBy = \"\";\n\n        const topCard = cardToMove.cardStack.shift();\n        const newCard = Object.assign({}, cardToMove, {\n          selected: true,\n          controlledBy: (action as any).ACTOR_REF,\n          dragging: true,\n          cardStack: [topCard],\n        });\n\n        cardToMove.id = action.payload.splitCardId;\n\n        state.cards.push(newCard);\n      }\n\n      // Now all selected cards should be put into ghost cards, unless we are splitting the top card\n      state.ghostCards = [];\n\n      if (!action.payload.splitTopCard) {\n        foreachSelectedAndControlledCard(\n          state,\n          (action as any).ACTOR_REF,\n          (card) => {\n            card.dragging = true;\n            state.ghostCards.push(Object.assign({}, card));\n          }\n        );\n      }\n\n      //Finally, if we have a preview card, clear it\n      // state.previewCard = null;\n    });\n\n    builder.addCase(drawCardsOutOfCardStackWithIds, (state, action) => {\n      if (action.payload.numberToDraw !== action.payload.idsToUse.length) {\n        throw new Error(\"Did not receive the expected number of ids\");\n      }\n\n      // First, unselect everything else of ours\n      unselectAllCardsReducer(state, action as unknown as any);\n\n      // Get the cardstack in question\n      let cardStackToUse = state.cards.find(\n        (c) => c.id === action.payload.cardStackId\n      );\n\n      if (!cardStackToUse) {\n        throw new Error(\n          `Couldn't find card stack with id ${action.payload.cardStackId}`\n        );\n      }\n\n      const sourceCardStackId = cardStackToUse.id;\n\n      //Next, for each card we should draw, remove it from the stack and make a new stack, which should be selected\n      for (let index = 0; index < action.payload.numberToDraw; index++) {\n        if (!!cardStackToUse) {\n          const topCardDetails = cardStackToUse.cardStack.shift();\n          if (!topCardDetails) {\n            throw new Error(\"Expected to find a top card, but didn't\");\n          }\n          const newCardStack: ICardDetails[] = [\n            { jsonId: topCardDetails.jsonId },\n          ];\n          const newCard = Object.assign({}, cardStackToUse, {\n            cardStack: newCardStack,\n          });\n          newCard.id = action.payload.idsToUse[index];\n          newCard.selected = true;\n          newCard.controlledBy = (action as any).ACTOR_REF;\n          newCard.faceup = !action.payload.facedown;\n          newCard.x = newCard.x + (cardConstants.CARD_WIDTH + 5) * (index + 1);\n          newCard.y += cardConstants.CARD_HEIGHT;\n\n          if (cardStackToUse.cardStack.length === 0) {\n            // we went through all the cards, remove the original card\n            state.cards = state.cards.filter((c) => c.id !== sourceCardStackId);\n            cardStackToUse = undefined;\n          }\n\n          state.cards.push(newCard);\n        }\n      }\n    });\n\n    builder.addCase(setStackShuffling, (state, action) => {\n      // get the stack to update\n      const stackToUpdate = state.cards.find((c) => c.id === action.payload.id);\n\n      if (!!stackToUpdate) {\n        stackToUpdate.shuffling = action.payload.shuffling;\n      }\n    });\n\n    builder.addCase(createDeckFromTextFileWithIds, (state, action) =>\n      handleLoadDeck(state, action)\n    );\n\n    builder.addCase(fetchDecklistById.fulfilled, (state, action) =>\n      handleLoadDeck(state, action)\n    );\n  },\n});\n\nconst handleLoadDeck = (\n  state: Draft<ICardsState>,\n  action: PayloadAction<CreateDeckPayload>\n) => {\n  console.log(\"got decklist\");\n  console.log(action);\n\n  const potentialHeroCard: ICardDetails[] = action.payload.data\n    .investigator_code\n    ? [{ jsonId: action.payload.data.investigator_code }]\n    : [];\n\n  const heroCardStack = [\n    ...potentialHeroCard,\n    ...action.payload.extraHeroCards,\n  ];\n\n  const heroCard: ICardStack = {\n    controlledBy: (action as any).ACTOR_REF,\n    selected: true,\n    x: action.payload.position.x,\n    y: action.payload.position.y,\n    dragging: false,\n    shuffling: false,\n    exhausted: false,\n    faceup: true,\n    fill: \"red\",\n    id: action.payload.heroId,\n    cardStack: heroCardStack,\n    statusTokens: {\n      stunned: false,\n      confused: false,\n      tough: false,\n    },\n    counterTokens: {\n      damage: 0,\n      threat: 0,\n      generic: 0,\n    },\n    modifiers: {},\n  };\n\n  let mainDeckStack: ICardDetails[] = [];\n  Object.entries(action.payload.data.slots).forEach(([key, value]) => {\n    const cardDetails: ICardDetails[] = Array.from(Array(value).keys()).map(\n      (): ICardDetails => ({ jsonId: key })\n    );\n    mainDeckStack = mainDeckStack.concat(cardDetails);\n  });\n\n  const cardPadding = cardConstants.CARD_WIDTH + 10;\n\n  const newDeck: ICardStack = {\n    controlledBy: (action as any).ACTOR_REF,\n    selected: true,\n    x: action.payload.position.x + cardPadding,\n    y: action.payload.position.y,\n    dragging: false,\n    shuffling: false,\n    exhausted: false,\n    faceup: true,\n    fill: \"red\",\n    id: action.payload.dataId,\n    cardStack: mainDeckStack,\n    statusTokens: {\n      stunned: false,\n      confused: false,\n      tough: false,\n    },\n    counterTokens: {\n      damage: 0,\n      threat: 0,\n      generic: 0,\n    },\n    modifiers: {},\n  };\n\n  const encounterDeck: ICardStack = {\n    controlledBy: (action as any).ACTOR_REF,\n    selected: true,\n    x: action.payload.position.x + cardPadding * 2,\n    y: action.payload.position.y,\n    dragging: false,\n    shuffling: false,\n    exhausted: false,\n    faceup: true,\n    fill: \"red\",\n    id: action.payload.encounterDeckId,\n    cardStack: action.payload.relatedEncounterDeck.map((jsonId) => ({\n      jsonId,\n    })),\n    statusTokens: {\n      stunned: false,\n      confused: false,\n      tough: false,\n    },\n    counterTokens: {\n      damage: 0,\n      threat: 0,\n      generic: 0,\n    },\n    modifiers: {},\n  };\n\n  const obligationDeck: ICardStack = {\n    controlledBy: (action as any).ACTOR_REF,\n    selected: true,\n    x: action.payload.position.x + cardPadding * 3,\n    y: action.payload.position.y,\n    dragging: false,\n    shuffling: false,\n    exhausted: false,\n    faceup: true,\n    fill: \"red\",\n    id: action.payload.obligationDeckId,\n    cardStack: action.payload.relatedObligationDeck.map((jsonId) => ({\n      jsonId,\n    })),\n    statusTokens: {\n      stunned: false,\n      confused: false,\n      tough: false,\n    },\n    counterTokens: {\n      damage: 0,\n      threat: 0,\n      generic: 0,\n    },\n    modifiers: {},\n  };\n\n  if (heroCard.cardStack.length > 0) {\n    state.cards.push(heroCard);\n  }\n\n  if (newDeck.cardStack.length > 0) {\n    state.cards.push(newDeck);\n  }\n\n  if (encounterDeck.cardStack.length > 0) {\n    state.cards.push(encounterDeck);\n  }\n\n  if (obligationDeck.cardStack.length > 0) {\n    state.cards.push(obligationDeck);\n  }\n};\n\nexport const {\n  selectCard,\n  unselectCard,\n  toggleSelectCard,\n  exhaustCard,\n  cardMove,\n  endCardMove,\n  selectMultipleCards,\n  unselectAllCards,\n  togglePanMode,\n  toggleMultiselectMode,\n  flipCards,\n  resetCards,\n  toggleToken,\n  adjustCounterToken,\n  clearCardTokens,\n  adjustModifier,\n  clearAllModifiers,\n} = cardsSlice.actions;\n\nexport default cardsSlice.reducer;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { Vector2d } from \"konva/lib/types\";\n\nexport interface AddNewCounterWithIdPayload {\n  pos: Vector2d;\n  id: string;\n}\n\nexport const addNewCounterWithId = createAction<AddNewCounterWithIdPayload>(\n  \"addNewCounterWithId\"\n);\n","import { Vector2d } from \"konva/lib/types\";\nimport { PlayerColor } from \"../../constants/app-constants\";\nimport { loadState } from \"../../store/localStorage\";\nimport * as jc from \"jsoncrush\";\n\nexport interface ICountersState {\n  counters: ICounter[];\n  firstPlayerCounterPosition: Vector2d;\n}\n\nexport interface ICounter {\n  id: string;\n  position: Vector2d;\n  value: number;\n  color: PlayerColor;\n}\n\nconst queryParams = new URLSearchParams(window.location.search);\nconst queryParamsCountersString = queryParams.get(\"counters\");\nconst queryParamsCounters = !!queryParamsCountersString\n  ? JSON.parse(jc.JSONUncrush(queryParamsCountersString))\n  : null;\n\nconst localStorageState: ICountersState =\n  queryParamsCounters || (loadState(\"liveState\")?.counters ?? {});\n\nconst defaultState: ICountersState = {\n  counters: [],\n  firstPlayerCounterPosition: { x: 0, y: 0 },\n};\nexport const initialState: ICountersState = {\n  ...defaultState,\n  ...localStorageState,\n};\n","import { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Vector2d } from \"konva/lib/types\";\nimport { PlayerColor } from \"../../constants/app-constants\";\nimport { receiveRemoteGameState, resetApp } from \"../../store/global.actions\";\nimport { addNewCounterWithId } from \"./counters.actions\";\nimport { ICountersState, initialState } from \"./initialState\";\n\n// Reducers\nconst updateCounterValueReducer: CaseReducer<\n  ICountersState,\n  PayloadAction<{ id: string; delta: number }>\n> = (state, action) => {\n  const counter = state.counters.find((c) => c.id === action.payload.id);\n  if (!!counter) {\n    counter.value += action.payload.delta;\n    if (counter.value < 0) {\n      counter.value = 0;\n    }\n  }\n};\n\nconst updateCounterColorReducer: CaseReducer<\n  ICountersState,\n  PayloadAction<{ id: string; newColor: PlayerColor }>\n> = (state, action) => {\n  const counter = state.counters.find((c) => c.id === action.payload.id);\n  if (!!counter) {\n    counter.color = action.payload.newColor;\n  }\n};\n\nconst removeCounterReducer: CaseReducer<ICountersState, PayloadAction<string>> =\n  (state, action) => {\n    state.counters = state.counters.filter((c) => c.id !== action.payload);\n  };\n\nconst moveCounterReducer: CaseReducer<\n  ICountersState,\n  PayloadAction<{ id: string; newPos: Vector2d }>\n> = (state, action) => {\n  const counter = state.counters.find((c) => c.id === action.payload.id);\n  if (!!counter) {\n    counter.position = {\n      x: action.payload.newPos.x,\n      y: action.payload.newPos.y,\n    };\n  }\n};\n\nconst moveFirstPlayerCounterReducer: CaseReducer<\n  ICountersState,\n  PayloadAction<Vector2d>\n> = (state, action) => {\n  state.firstPlayerCounterPosition = {\n    x: action.payload.x,\n    y: action.payload.y,\n  };\n};\n\n// slice\nconst countersSlice = createSlice({\n  name: \"counters\",\n  initialState: initialState,\n  reducers: {\n    updateCounterValue: updateCounterValueReducer,\n    removeCounter: removeCounterReducer,\n    moveCounter: moveCounterReducer,\n    moveFirstPlayerCounter: moveFirstPlayerCounterReducer,\n    updateCounterColor: updateCounterColorReducer,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(receiveRemoteGameState, (state, action) => {\n      state.counters = action.payload.liveState.present.counters.counters;\n      state.firstPlayerCounterPosition =\n        action.payload.liveState.present.counters.firstPlayerCounterPosition;\n    });\n\n    builder.addCase(resetApp, (state, action) => {\n      state.counters = [];\n      state.firstPlayerCounterPosition = { x: 0, y: 0 };\n    });\n\n    builder.addCase(addNewCounterWithId, (state, action) => {\n      state.counters.push({\n        id: action.payload.id,\n        position: action.payload.pos,\n        value: 0,\n        color: \"red\",\n      });\n    });\n  },\n});\n\nexport const {\n  updateCounterValue,\n  removeCounter,\n  moveCounter,\n  moveFirstPlayerCounter,\n  updateCounterColor,\n} = countersSlice.actions;\n\nexport default countersSlice.reducer;\n","import { combineReducers } from \"redux\";\nimport undoable, { excludeAction, groupByActionTypes } from \"redux-undo\";\nimport cardsData from \"../features/cards-data/cards-data.slice\";\nimport { startCardMoveWithSplitStackId } from \"../features/cards/cards.actions\";\nimport cards, { cardMove } from \"../features/cards/cards.slice\";\nimport game, {\n  clearPreviewCard,\n  setPreviewCardId,\n} from \"../features/game/game.slice\";\n\nimport counters, { moveCounter } from \"../features/counters/counters.slice\";\n\nconst undoableState = combineReducers({\n  counters,\n  cards,\n});\n\nconst rootReducer = combineReducers({\n  game,\n  cardsData,\n  liveState: undoable(undoableState, {\n    limit: 20,\n    groupBy: groupByActionTypes([moveCounter.type]),\n    filter: excludeAction([\n      startCardMoveWithSplitStackId.type,\n      cardMove.type,\n      setPreviewCardId.type,\n      clearPreviewCard.type,\n    ]),\n  }),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import Peer from \"peerjs\";\nimport cloneDeep from \"lodash.clonedeep\";\nimport { myPeerRef } from \"../constants/app-constants\";\nimport { togglePanMode } from \"../features/cards/cards.slice\";\nimport {\n  loadCardsData,\n  loadCardsDataForPack,\n  loadCardsForEncounterSet,\n} from \"../features/cards-data/cards-data.slice\";\nimport {\n  clearMenuPreviewCardJsonId,\n  clearPreviewCard,\n  connectToRemoteGame,\n  requestResync,\n  setMenuPreviewCardJsonId,\n  setPeerId,\n  setPlayerColor,\n  setPreviewCardId,\n  updatePosition,\n  updateZoom,\n} from \"../features/game/game.slice\";\nimport {\n  receiveRemoteGameState,\n  verifyRemoteGameState,\n} from \"./global.actions\";\nimport { RootState } from \"./rootReducer\";\n\nconst DEBUG = false;\n\nconst blacklistRemoteActions = {\n  [connectToRemoteGame.type]: true,\n  [updatePosition.type]: true,\n  [updateZoom.type]: true,\n  [setPreviewCardId.type]: true,\n  [clearPreviewCard.type]: true,\n  [setMenuPreviewCardJsonId.type]: true,\n  [clearMenuPreviewCardJsonId.type]: true,\n  [togglePanMode.type]: true,\n  [receiveRemoteGameState.type]: true,\n  [requestResync.type]: true,\n  [loadCardsData.type]: true,\n  [loadCardsDataForPack.type]: true,\n  [loadCardsForEncounterSet.type]: true,\n};\n\nconst log = (...args: any[]) => {\n  if (DEBUG) {\n    console.log(args[0], args[1]);\n  }\n};\n\nconst setupConnection = (conn: any, storeAPI: any) => {\n  conn.on(\"data\", (data: any) => {\n    if (!data.INITIAL_STATE_MSG) {\n      if (!!data.RESYNC) {\n        log(\"received request for resync\");\n        conn.send({\n          INITIAL_STATE_MSG: true,\n          state: storeAPI.getState(),\n        });\n      } else if (!!data.PING) {\n        // Check local state\n        data.REMOTE_ACTION = true;\n        storeAPI.dispatch(verifyRemoteGameState(data.state));\n      } else {\n        log(\"recieved remote action\", data);\n        data.REMOTE_ACTION = true;\n        log(\"dispatching remote action\", data);\n        storeAPI.dispatch(data);\n      }\n    } else {\n      console.log(\"going to replace (most of) state with\", data.state);\n      setTimeout(() => {\n        storeAPI.dispatch(receiveRemoteGameState(data.state));\n      }, 0);\n    }\n  });\n};\n\nexport const peerJSMiddleware = (storeAPI: any) => {\n  const cgpPeer = new Peer(undefined, {\n    host: \"peerjs.middle-earth.house\",\n    path: \"/cgp\",\n    secure: true,\n    debug: 0,\n    config: {\n      iceServers: [\n        { urls: \"stun:stun.l.google.com:19302\" },\n        {\n          urls: \"turn:numb.viagenie.ca\",\n          username: \"webrtc@live.com\",\n          credential: \"muazkh\",\n        },\n      ],\n    },\n  });\n  let activeCon: Peer.DataConnection;\n\n  cgpPeer.on(\"error\", (err) => {\n    console.error(\"*****************Server error\");\n    console.error(err);\n  });\n\n  cgpPeer.on(\"disconnected\", () => {\n    console.log(\"****Peer server connection disconnected\");\n  });\n\n  cgpPeer.on(\"open\", (id) => {\n    console.log(\"My peer ID is: \" + id);\n    storeAPI.dispatch(setPeerId(id));\n\n    //look for query param\n    const remoteParamArray = window.location.href.split(\"remote=\");\n    if (remoteParamArray.length > 1) {\n      const remoteId = remoteParamArray[1].split(\"&\")[0];\n      console.log(\"FOUND QUERY PARAM. Going to connect to peer \" + remoteId);\n      activeCon = cgpPeer.connect(remoteId, {\n        metadata: { ref: myPeerRef },\n      });\n      setupConnection(activeCon, storeAPI);\n    }\n  });\n\n  cgpPeer.on(\"connection\", (conn) => {\n    console.log(\"Connection received!\");\n    activeCon = conn;\n    setupConnection(activeCon, storeAPI);\n\n    activeCon.on(\"open\", () => {\n      console.log(\"connection ready for data\");\n      const stateToSend: RootState = cloneDeep(storeAPI.getState());\n      // @ts-ignore\n      delete stateToSend.cardsData;\n\n      log(\"going to send initial state\", stateToSend);\n\n      activeCon.send({\n        INITIAL_STATE_MSG: true,\n        state: stateToSend,\n      });\n      // TODO: more complicated logic to handle multiple connections. Right now\n      // this just changes the connecting client to blue\n      const setPlayerColorAction = setPlayerColor({\n        ref: activeCon.metadata.ref,\n        color: \"blue\",\n      });\n      activeCon.send(setPlayerColorAction);\n      activeCon.send(\n        setPlayerColor({\n          ref: myPeerRef,\n          color: \"red\",\n        })\n      );\n      storeAPI.dispatch(setPlayerColorAction);\n\n      // Set up periodic state verification\n      setInterval(() => {\n        const currentState: RootState = cloneDeep(storeAPI.getState());\n        // @ts-ignore\n        delete currentState.cardsData;\n\n        activeCon.send({\n          PING: true,\n          state: currentState,\n        });\n      }, 5000);\n    });\n\n    activeCon.on(\"error\", (err) => {\n      console.error(\"****************Connection error:\", err);\n    });\n\n    activeCon.on(\"close\", () => {\n      console.log(\"******connection closed for ref \" + activeCon.metadata.ref);\n    });\n\n    activeCon.peerConnection.onconnectionstatechange = (ev: Event) => {\n      console.log(`connection state changed`);\n      console.log(ev);\n      console.log(activeCon.peerConnection.connectionState);\n      if (\n        activeCon.peerConnection.connectionState === \"closed\" ||\n        activeCon.peerConnection.connectionState === \"disconnected\"\n      ) {\n        console.log(\n          \"CLEARING CLIENT OWNED CARDS for \" + activeCon.metadata.ref\n        );\n      }\n    };\n  });\n  return (next: any) => (action: any) => {\n    log(\"received local action\", action);\n\n    // If this isn't a REMOTE action, add our ref onto it\n    if (!action.REMOTE_ACTION) {\n      action.ACTOR_REF = myPeerRef;\n    } else if (!action.ACTOR_REF) {\n      console.error(`Received a REMOTE action without an ACTOR_REF:`);\n      console.log(action);\n    }\n\n    if (action.type === connectToRemoteGame.type) {\n      console.log(\"going to connect to peer \" + action.payload);\n      activeCon = cgpPeer.connect(action.payload, {\n        metadata: { ref: myPeerRef },\n      });\n      setupConnection(activeCon, storeAPI);\n    } else if (action.type === requestResync.type) {\n      if (!!activeCon) {\n        activeCon.send({ RESYNC: true });\n      }\n    }\n\n    if (\n      !action.REMOTE_ACTION &&\n      !!activeCon &&\n      !blacklistRemoteActions[action.type]\n    ) {\n      log(\"going to send action to peer!\");\n      activeCon.send(action);\n    }\n\n    return next(action);\n  };\n};\n","import throttle from \"lodash.throttle\";\nimport {\n  configureStore as rtkConfigureStore,\n  getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport rootReducer from \"./rootReducer\";\nimport { saveState } from \"./localStorage\";\nimport { peerJSMiddleware } from \"./peer-js-redux-middleware\";\n\nconst customizedMiddleware = getDefaultMiddleware({\n  thunk: true,\n  immutableCheck: false,\n  serializableCheck: false,\n}).concat(peerJSMiddleware);\n\nexport default function configureStore() {\n  console.log(\"configuring store. NODE_ENV is \" + process.env.NODE_ENV);\n  const store = rtkConfigureStore({\n    reducer: rootReducer,\n    middleware: customizedMiddleware,\n    devTools: process.env.NODE_ENV !== \"production\",\n  });\n\n  store.subscribe(\n    throttle(() => {\n      saveState(store.getState());\n    }, 1000)\n  );\n\n  return store;\n}\n","import { Vector2d } from \"konva/lib/types\";\nimport React, { useState } from \"react\";\nimport TopLayer from \"./TopLayer\";\nimport { GameType } from \"./constants/app-constants\";\nimport {\n  GamePropertiesMap,\n  NumericTokenInfo,\n  TokenInfo,\n} from \"./constants/game-type-properties-mapping\";\nimport { CounterTokenType, StatusTokenType } from \"./constants/card-constants\";\nimport { DrawCardsOutOfCardStackPayload } from \"./features/cards/cards.thunks\";\nimport { ICardStack } from \"./features/cards/initialState\";\nimport { anyCardStackHasStatus } from \"./utilities/card-utils\";\nconst reactPieMenu = require(\"react-pie-menu\");\nconst PieMenu = reactPieMenu.default;\nconst { Slice } = reactPieMenu;\n\nenum MenuType {\n  TopLevelActions = \"toplevelactions\",\n  StatusTokenActions = \"statustokenactions\",\n  CounterTokenActions = \"countertokenactions\",\n  ModifierActions = \"modifieractions\",\n  DrawActions = \"drawactions\",\n  DrawNumber = \"drawnumber\",\n  ModifierNumber = \"modifiernumber\",\n}\n\nenum DrawMode {\n  FaceUp = \"faceup\",\n  FaceDown = \"facedown\",\n}\n\ninterface IProps {\n  selectedCardStacks: ICardStack[];\n  currentGameType: GameType | null;\n  position: Vector2d | null;\n  hideRadialMenu: () => void;\n  flipCards: () => void;\n  exhaustCard: (id?: string) => void;\n  shuffleStack: (id?: string) => void;\n  toggleToken: (payload: {\n    id?: string;\n    tokenType: StatusTokenType;\n    value?: boolean;\n  }) => void;\n  adjustCounterToken: (payload: {\n    id?: string;\n    tokenType: CounterTokenType;\n    delta?: number;\n    value?: number;\n  }) => void;\n  clearCardTokens: (id?: string) => void;\n  drawCardsOutOfCardStack: (payload: DrawCardsOutOfCardStackPayload) => void;\n  adjustModifier: (payload: {\n    id?: string;\n    modifierId: string;\n    delta?: number;\n    value?: number;\n  }) => void;\n}\nconst RadialMenu = (props: IProps) => {\n  const [visibleMenu, setVisibleMenu] = useState(MenuType.TopLevelActions);\n  const [currentDrawMode, setCurrentDrawMode] = useState(DrawMode.FaceDown);\n  const [currentModifier, setCurrentModifier] = useState(\"\");\n\n  if (!props.position && visibleMenu !== MenuType.TopLevelActions) {\n    setVisibleMenu(MenuType.TopLevelActions);\n  }\n\n  return !!props.position ? (\n    <TopLayer\n      trasparentBackground={true}\n      offsetContent={false}\n      position={{\n        x: Math.max(props.position.x - 128, 0),\n        y: Math.max(props.position.y - 128, 0),\n      }}\n      completed={() => {\n        props.hideRadialMenu();\n      }}\n    >\n      <div\n        onClick={(event) => {\n          event.stopPropagation();\n          event.preventDefault();\n        }}\n      >\n        <PieMenu radius=\"156px\" centerRadius=\"30px\">\n          {renderMenuSlices(\n            visibleMenu,\n            setVisibleMenu,\n            currentDrawMode,\n            setCurrentDrawMode,\n            currentModifier,\n            setCurrentModifier,\n            props\n          )}\n        </PieMenu>\n      </div>\n    </TopLayer>\n  ) : null;\n};\n\nconst renderMenuSlices = (\n  visibleMenu: MenuType,\n  setVisibleMenu: (type: MenuType) => void,\n  currentDrawMode: DrawMode,\n  setCurrentDrawMode: (mode: DrawMode) => void,\n  currentModifier: string,\n  setCurrentModifer: (mod: string) => void,\n  props: IProps\n) => {\n  let slices: JSX.Element[] | null = null;\n  let backMenu: MenuType | null = null;\n\n  switch (visibleMenu) {\n    case MenuType.StatusTokenActions:\n      slices = renderStatusTokensMenu(props);\n      backMenu = MenuType.TopLevelActions;\n      break;\n    case MenuType.CounterTokenActions:\n      slices = renderCounterTokensMenu(props);\n      backMenu = MenuType.TopLevelActions;\n      break;\n    case MenuType.DrawActions:\n      slices = renderDrawMenu(props, setVisibleMenu, setCurrentDrawMode);\n      backMenu = MenuType.TopLevelActions;\n      break;\n    case MenuType.DrawNumber:\n      slices = renderDrawNumberMenu(props, currentDrawMode);\n      backMenu = MenuType.DrawActions;\n      break;\n    case MenuType.ModifierActions:\n      slices = renderModifierMenu(props, setVisibleMenu, setCurrentModifer);\n      backMenu = MenuType.TopLevelActions;\n      break;\n    case MenuType.ModifierNumber:\n      slices = renderModifierNumberMenu(props, currentModifier);\n      backMenu = MenuType.ModifierActions;\n      break;\n    case MenuType.TopLevelActions:\n    default:\n      slices = renderTopLevelMenu(props, setVisibleMenu);\n  }\n  if (!!backMenu) {\n    slices = renderMenuWithBackButton(slices, backMenu, setVisibleMenu);\n  }\n\n  return slices;\n};\n\nconst renderMenuWithBackButton = (\n  slices: JSX.Element[] | null,\n  backMenu: MenuType,\n  setVisibleMenu: (type: MenuType) => void\n): JSX.Element[] | null => {\n  if (!slices) return null;\n\n  const back = (\n    <Slice\n      key={\"back-slice\"}\n      onSelect={() => {\n        setVisibleMenu(backMenu);\n      }}\n    >\n      Back\n    </Slice>\n  );\n\n  return [back].concat(slices);\n};\n\nconst renderTopLevelMenu = (\n  props: IProps,\n  setVisibleMenu: (type: MenuType) => void\n) => {\n  if (!props.currentGameType) return null;\n\n  const modifiers = GamePropertiesMap[props.currentGameType].modifiers;\n\n  const slices = [\n    <Slice\n      key={\"flip-slice\"}\n      onSelect={() => {\n        props.flipCards();\n      }}\n    >\n      <div>\n        {/* <FlipIcon /> */}\n        <div>Flip</div>\n      </div>\n    </Slice>,\n    <Slice\n      key={\"exhaust-slice\"}\n      onSelect={() => {\n        props.exhaustCard();\n      }}\n    >\n      <div>\n        {/* <AutorenewIcon /> */}\n        <div>Exhaust</div>\n      </div>\n    </Slice>,\n    <Slice\n      key={\"shuffle-slice\"}\n      onSelect={() => {\n        props.shuffleStack();\n      }}\n    >\n      <div>\n        {/* <ShuffleIcon /> */}\n        <div>Shuffle</div>\n      </div>\n    </Slice>,\n    <Slice\n      key={\"statuses-slice\"}\n      onSelect={() => {\n        setVisibleMenu(MenuType.StatusTokenActions);\n      }}\n    >\n      <div>Statuses</div>\n    </Slice>,\n    <Slice\n      key={\"tokens-slice\"}\n      onSelect={() => {\n        setVisibleMenu(MenuType.CounterTokenActions);\n      }}\n    >\n      <div>Tokens</div>\n    </Slice>,\n    <Slice\n      key={\"clear-slice\"}\n      onSelect={() => {\n        props.clearCardTokens();\n      }}\n    >\n      <div>Clear</div>\n    </Slice>,\n    <Slice\n      key={\"draw-menu-slice\"}\n      onSelect={() => {\n        setVisibleMenu(MenuType.DrawActions);\n      }}\n    >\n      <div>Draw</div>\n    </Slice>,\n  ];\n\n  if (modifiers.length > 0) {\n    slices.push(\n      <Slice\n        key={\"modifiers-menu-slice\"}\n        onSelect={() => {\n          setVisibleMenu(MenuType.ModifierActions);\n        }}\n      >\n        <div>Modifiers</div>\n      </Slice>\n    );\n  }\n\n  return slices;\n};\n\nconst renderStatusTokensMenu = (props: IProps) => {\n  if (!props.currentGameType) {\n    return [<Slice></Slice>, <Slice></Slice>, <Slice></Slice>];\n  }\n\n  let slices = Object.values(GamePropertiesMap[props.currentGameType].tokens)\n    .filter(\n      (tokenInfo): tokenInfo is TokenInfo =>\n        !!tokenInfo && !(tokenInfo as NumericTokenInfo).isNumeric\n    )\n    .map((tokenInfo) => {\n      const action = () => {\n        props.toggleToken({\n          tokenType: tokenInfo.tokenType,\n          value: !anyCardStackHasStatus(\n            tokenInfo.tokenType,\n            props.selectedCardStacks\n          ),\n        });\n      };\n\n      let key = `touch-menu-slice-${tokenInfo.menuText\n        .replace(/\\s/g, \"\")\n        .toLocaleLowerCase()}`;\n\n      // key =\n      //   key + (tokenInfo.touchMenuLetter?.indexOf(\"+\") !== -1 ? \"-plus\" : \"\");\n      return (\n        <Slice key={key} onSelect={action}>\n          <div>\n            {!!tokenInfo.touchMenuIcon ? tokenInfo.touchMenuIcon : null}\n            <div>{tokenInfo.menuText}</div>\n          </div>\n        </Slice>\n      );\n    });\n\n  while (slices.length < 3) {\n    slices = slices.concat([\n      <Slice key={`extra-slice-${Math.random()}`}></Slice>,\n    ]);\n  }\n\n  return slices;\n};\n\nconst renderCounterTokensMenu = (props: IProps) => {\n  if (!props.currentGameType) {\n    return [<Slice></Slice>, <Slice></Slice>, <Slice></Slice>];\n  }\n  let slices = Object.values(GamePropertiesMap[props.currentGameType].tokens)\n    .filter(\n      (tokenInfo): tokenInfo is NumericTokenInfo =>\n        !!tokenInfo && (tokenInfo as NumericTokenInfo).isNumeric\n    )\n    .flatMap((tokenInfo) => {\n      const addTokenInfo = {\n        ...tokenInfo,\n        touchMenuLetter: `${tokenInfo.touchMenuLetter} +`,\n      };\n      const removeTokenInfo = {\n        ...tokenInfo,\n        touchMenuLetter: `${tokenInfo.touchMenuLetter} -`,\n      };\n      return [addTokenInfo, removeTokenInfo];\n    })\n    .map((tokenInfo) => {\n      const action = () => {\n        props.adjustCounterToken({\n          tokenType: tokenInfo.counterTokenType,\n          delta: tokenInfo.touchMenuLetter?.indexOf(\"+\") !== -1 ? 1 : -1,\n        });\n      };\n\n      let key = `touch-menu-slice-${tokenInfo.menuText\n        .replace(/\\s/g, \"\")\n        .toLocaleLowerCase()}`;\n\n      key =\n        key + (tokenInfo.touchMenuLetter?.indexOf(\"+\") !== -1 ? \"-plus\" : \"\");\n      return (\n        <Slice key={key} onSelect={action}>\n          <div>\n            {!!tokenInfo.touchMenuIcon ? tokenInfo.touchMenuIcon : null}\n            <div>{tokenInfo.touchMenuLetter}</div>\n          </div>\n        </Slice>\n      );\n    });\n\n  while (slices.length < 3) {\n    slices = slices.concat([\n      <Slice key={`extra-slice-${Math.random()}`}></Slice>,\n    ]);\n  }\n\n  return slices;\n};\n\nconst renderDrawMenu = (\n  props: IProps,\n  setVisibleMenu: (type: MenuType) => void,\n  setCurrentDrawMode: (mode: DrawMode) => void\n) => {\n  return [\n    <Slice\n      key={\"draw-one-faceup-slice\"}\n      onSelect={() => {\n        if (props.selectedCardStacks.length === 1) {\n          props.drawCardsOutOfCardStack({\n            cardStackId: props.selectedCardStacks[0].id,\n            numberToDraw: 1,\n            facedown: false,\n          });\n        }\n      }}\n    >\n      1 faceup\n    </Slice>,\n    <Slice\n      key={\"draw-one-facedown-slice\"}\n      onSelect={() => {\n        if (props.selectedCardStacks.length === 1) {\n          props.drawCardsOutOfCardStack({\n            cardStackId: props.selectedCardStacks[0].id,\n            numberToDraw: 1,\n            facedown: true,\n          });\n        }\n      }}\n    >\n      1 facedown\n    </Slice>,\n    <Slice\n      key={\"draw-x-faceup-slice\"}\n      onSelect={() => {\n        setCurrentDrawMode(DrawMode.FaceUp);\n        setVisibleMenu(MenuType.DrawNumber);\n      }}\n    >\n      X faceup\n    </Slice>,\n    <Slice\n      key={\"draw-x-facedown-slice\"}\n      onSelect={() => {\n        setCurrentDrawMode(DrawMode.FaceDown);\n        setVisibleMenu(MenuType.DrawNumber);\n      }}\n    >\n      X facedown\n    </Slice>,\n  ];\n};\n\nconst renderDrawNumberMenu = (props: IProps, currentDrawMode: DrawMode) => {\n  return Array.from({ length: 10 }, (_, i) => i + 1).map((num) => {\n    return (\n      <Slice\n        key={`draw-${num}-cards-slice`}\n        onSelect={() => {\n          if (props.selectedCardStacks.length === 1) {\n            props.drawCardsOutOfCardStack({\n              cardStackId: props.selectedCardStacks[0].id,\n              numberToDraw: num,\n              facedown: currentDrawMode === DrawMode.FaceDown,\n            });\n          }\n        }}\n      >\n        {num}\n      </Slice>\n    );\n  });\n};\n\nconst renderModifierMenu = (\n  props: IProps,\n  setVisibleMenu: (type: MenuType) => void,\n  setCurrentModifier: (mod: string) => void\n) => {\n  if (!props.currentGameType) return null;\n  return GamePropertiesMap[props.currentGameType].modifiers.map((m) => {\n    return (\n      <Slice\n        key={\"modifier-slice\"}\n        onSelect={() => {\n          setCurrentModifier(m.attributeId);\n          setVisibleMenu(MenuType.ModifierNumber);\n        }}\n      >\n        {m.attributeName}\n      </Slice>\n    );\n  });\n};\n\nconst renderModifierNumberMenu = (props: IProps, currentModifier: string) => {\n  const basicNums = [\n    <Slice\n      key={`modifier-plus-one-slice`}\n      onSelect={() => {\n        props.adjustModifier({ modifierId: currentModifier, delta: 1 });\n      }}\n    >\n      Add 1\n    </Slice>,\n    <Slice\n      key={`modifier-minus-one-slice`}\n      onSelect={() => {\n        props.adjustModifier({ modifierId: currentModifier, delta: -1 });\n      }}\n    >\n      Remove 1\n    </Slice>,\n    <Slice\n      key={`modifier-zero-slice`}\n      onSelect={() => {\n        props.adjustModifier({ modifierId: currentModifier, value: 0 });\n      }}\n    >\n      0\n    </Slice>,\n  ];\n\n  const allNums = basicNums\n    .concat(\n      Array.from({ length: 3 }, (_, i) => i + 1).map((num) => {\n        return (\n          <Slice\n            key={`modifier-pos-${num}-cards-slice`}\n            onSelect={() => {\n              props.adjustModifier({ modifierId: currentModifier, value: num });\n            }}\n          >\n            {num}\n          </Slice>\n        );\n      })\n    )\n    .concat(\n      Array.from({ length: 3 }, (_, i) => i + 1).map((num) => {\n        return (\n          <Slice\n            key={`modifier-neg-${num}-cards-slice`}\n            onSelect={() => {\n              props.adjustModifier({\n                modifierId: currentModifier,\n                value: num * -1,\n              });\n            }}\n          >\n            {num * -1}\n          </Slice>\n        );\n      })\n    );\n\n  return allNums;\n};\n\nexport default RadialMenu;\n","import { Component } from \"react\";\nimport * as React from \"react\";\nimport { ICardStack } from \"./features/cards/initialState\";\nimport { Rect, Text } from \"react-konva\";\nimport { cardConstants } from \"./constants/card-constants\";\nimport { GameType } from \"./constants/app-constants\";\nimport { GamePropertiesMap } from \"./constants/game-type-properties-mapping\";\ninterface IProps {\n  currentGameType: GameType;\n  x: number;\n  y: number;\n  card: ICardStack | undefined;\n}\n\ninterface IState {\n  imagesLoaded: {\n    damage: boolean;\n    threat: boolean;\n    generic: boolean;\n  };\n}\n\nconst desiredWidth = 47;\nconst desiredHeight = 47;\n\nclass CardTokens extends Component<IProps, IState> {\n  private damageImg: HTMLImageElement;\n  private threatImg: HTMLImageElement;\n  private genericImg: HTMLImageElement;\n  private unmounted: boolean;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.unmounted = true;\n\n    this.state = {\n      imagesLoaded: {\n        damage: false,\n        threat: false,\n        generic: false,\n      },\n    };\n\n    this.damageImg = new Image();\n    this.threatImg = new Image();\n    this.genericImg = new Image();\n\n    const tokenInfo = GamePropertiesMap[this.props.currentGameType].tokens;\n\n    // DAMAGE\n    this.damageImg.onload = () => {\n      if (!this.unmounted) {\n        this.setState({\n          imagesLoaded: {\n            damage: true,\n            threat: this.state.imagesLoaded.threat,\n            generic: this.state.imagesLoaded.generic,\n          },\n        });\n      }\n    };\n\n    if (!!this.props.card?.counterTokens.damage && !!tokenInfo.damage) {\n      this.damageImg.src = tokenInfo.damage.imagePath;\n    }\n\n    // THREAT\n    this.threatImg.onload = () => {\n      if (!this.unmounted) {\n        this.setState({\n          imagesLoaded: {\n            damage: this.state.imagesLoaded.damage,\n            threat: true,\n            generic: this.state.imagesLoaded.generic,\n          },\n        });\n      }\n    };\n\n    if (!!this.props.card?.counterTokens.threat && !!tokenInfo.threat) {\n      this.threatImg.src = tokenInfo.threat.imagePath;\n    }\n\n    // GENERIC\n    this.genericImg.onload = () => {\n      if (!this.unmounted) {\n        this.setState({\n          imagesLoaded: {\n            damage: this.state.imagesLoaded.damage,\n            threat: this.state.imagesLoaded.threat,\n            generic: true,\n          },\n        });\n      }\n    };\n\n    if (!!this.props.card?.counterTokens.generic && !!tokenInfo.generic) {\n      this.genericImg.src = tokenInfo.generic.imagePath;\n    }\n  }\n\n  public componentDidUpdate(prevProps: IProps, prevState: IState) {\n    const tokenInfo = GamePropertiesMap[this.props.currentGameType].tokens;\n\n    // DAMAGE\n    if (\n      !this.state.imagesLoaded.damage &&\n      !prevProps.card?.counterTokens.damage &&\n      !!this.props.card?.counterTokens.damage &&\n      !!tokenInfo.damage\n    ) {\n      this.damageImg.src = tokenInfo.damage.imagePath;\n    }\n\n    // THREAT\n    if (\n      !this.state.imagesLoaded.threat &&\n      !prevProps.card?.counterTokens.threat &&\n      !!this.props.card?.counterTokens.threat &&\n      !!tokenInfo.threat\n    ) {\n      this.threatImg.src = tokenInfo.threat.imagePath;\n    }\n\n    // GENERIC\n    if (\n      !this.state.imagesLoaded.generic &&\n      !prevProps.card?.counterTokens.generic &&\n      !!this.props.card?.counterTokens.generic &&\n      !!tokenInfo.generic\n    ) {\n      this.genericImg.src = tokenInfo.generic.imagePath;\n    }\n  }\n\n  public componentDidMount() {\n    this.unmounted = false;\n  }\n\n  public componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  render() {\n    if (!this.props.card) return null;\n\n    const damageX = this.props.x - desiredWidth / 2;\n    const damageY = this.props.y - cardConstants.CARD_HEIGHT / 2 + 20;\n    const showDamage =\n      this.state.imagesLoaded.damage && !!this.props.card.counterTokens.damage;\n\n    const damageToken = showDamage ? (\n      <Rect\n        key={`${this.props.card.id}-damageToken`}\n        x={damageX}\n        y={damageY}\n        scale={{\n          x: desiredWidth / this.damageImg.naturalWidth,\n          y: desiredHeight / this.damageImg.naturalHeight,\n        }}\n        width={this.damageImg.naturalWidth}\n        height={this.damageImg.naturalHeight}\n        fillPatternImage={this.damageImg}\n      ></Rect>\n    ) : null;\n\n    const damageText = showDamage ? (\n      <Text\n        key={`${this.props.card.id}-damageText`}\n        x={damageX}\n        y={damageY}\n        width={\n          this.damageImg.naturalWidth *\n          (desiredWidth / this.damageImg.naturalWidth)\n        }\n        height={\n          this.damageImg.naturalHeight *\n          (desiredHeight / this.damageImg.naturalHeight)\n        }\n        text={`${this.props.card.counterTokens.damage}`}\n        fill=\"white\"\n        align=\"center\"\n        verticalAlign=\"middle\"\n        fontSize={24}\n      ></Text>\n    ) : null;\n\n    const threatX = this.props.x - desiredWidth / 2;\n    const threatY = damageY + desiredHeight + 5;\n    const showThreat =\n      this.state.imagesLoaded.threat && !!this.props.card.counterTokens.threat;\n\n    const threatToken = showThreat ? (\n      <Rect\n        key={`${this.props.card.id}-threatToken`}\n        x={threatX}\n        y={threatY}\n        scale={{\n          x: desiredWidth / this.threatImg.naturalWidth,\n          y: desiredHeight / this.threatImg.naturalHeight,\n        }}\n        width={this.threatImg.naturalWidth}\n        height={this.threatImg.naturalHeight}\n        fillPatternImage={this.threatImg}\n      ></Rect>\n    ) : null;\n\n    const threatText = showThreat ? (\n      <Text\n        key={`${this.props.card.id}-threatText`}\n        x={threatX}\n        y={threatY}\n        width={\n          this.threatImg.naturalWidth *\n          (desiredWidth / this.threatImg.naturalWidth)\n        }\n        height={\n          this.threatImg.naturalHeight *\n          (desiredHeight / this.threatImg.naturalHeight)\n        }\n        text={`${this.props.card.counterTokens.threat}`}\n        fill=\"white\"\n        align=\"center\"\n        verticalAlign=\"middle\"\n        fontSize={24}\n      ></Text>\n    ) : null;\n\n    const genericX = this.props.x - desiredWidth / 2;\n    const genericY = threatY + desiredHeight + 5;\n    const showGeneric =\n      this.state.imagesLoaded.generic &&\n      !!this.props.card.counterTokens.generic;\n\n    const genericToken = showGeneric ? (\n      <Rect\n        key={`${this.props.card.id}-genericToken`}\n        x={genericX}\n        y={genericY}\n        scale={{\n          x: desiredWidth / this.genericImg.naturalWidth,\n          y: desiredHeight / this.genericImg.naturalHeight,\n        }}\n        width={this.genericImg.naturalWidth}\n        height={this.genericImg.naturalHeight}\n        fillPatternImage={this.genericImg}\n      ></Rect>\n    ) : null;\n\n    const genericText = showGeneric ? (\n      <Text\n        key={`${this.props.card.id}-genericText`}\n        x={genericX}\n        y={genericY}\n        width={\n          this.genericImg.naturalWidth *\n          (desiredWidth / this.genericImg.naturalWidth)\n        }\n        height={\n          this.genericImg.naturalHeight *\n          (desiredHeight / this.genericImg.naturalHeight)\n        }\n        text={`${this.props.card.counterTokens.generic}`}\n        fill=\"white\"\n        align=\"center\"\n        verticalAlign=\"middle\"\n        fontSize={24}\n      ></Text>\n    ) : null;\n\n    return [\n      damageToken,\n      damageText,\n      threatToken,\n      threatText,\n      genericToken,\n      genericText,\n    ];\n  }\n}\n\nexport default CardTokens;\n","import { connect } from \"react-redux\";\n\nimport { RootState } from \"./store/rootReducer\";\nimport CardTokens from \"./CardTokens\";\nimport { getCardMapById } from \"./features/cards/cards.selectors\";\n\nexport interface IProps {\n  id: string;\n}\n\nconst mapStateToProps = (state: RootState, props: IProps) => {\n  return {\n    card: getCardMapById(state)[props.id],\n  };\n};\n\nconst CardTokensContainer = connect(mapStateToProps, {})(CardTokens);\n\nexport default CardTokensContainer;\n","export const CARD_ALREADY_ROTATED_MAP: { [key: string]: boolean } = {\n  \"05026\": true,\n};\n\nexport const MISSING_CARD_IMAGE_MAP: { [key: string]: string } = {\n  \"02001a\":\n    process.env.PUBLIC_URL +\n    \"/images/cards/\" +\n    \"8665869b-fae4-494e-91d1-1e8c308220c2\" +\n    \".jpg\",\n\n  \"02001b\":\n    process.env.PUBLIC_URL +\n    \"/images/cards/\" +\n    \"8665869b-fae4-494e-91d1-1e8c308220c2\" +\n    \".b.jpg\",\n\n  \"02002a\":\n    process.env.PUBLIC_URL +\n    \"/images/cards/\" +\n    \"cfd051be-4ade-4cf8-b575-4b673cfa9a92\" +\n    \".jpg\",\n\n  \"02002b\":\n    process.env.PUBLIC_URL +\n    \"/images/cards/\" +\n    \"cfd051be-4ade-4cf8-b575-4b673cfa9a92\" +\n    \".b.jpg\",\n\n  \"02003a\":\n    process.env.PUBLIC_URL +\n    \"/images/cards/\" +\n    \"b16187a4-3f29-4a4b-8b66-6e8c7524c402\" +\n    \".jpg\",\n\n  \"02003b\":\n    process.env.PUBLIC_URL +\n    \"/images/cards/\" +\n    \"b16187a4-3f29-4a4b-8b66-6e8c7524c402\" +\n    \".b.jpg\",\n\n  \"02004\":\n    process.env.PUBLIC_URL +\n    \"/images/cards/\" +\n    \"b35084d9-3a2b-418c-b1a4-e4929de16a2c\" +\n    \".jpg\",\n\n  \"02004_double_sided_back\":\n    process.env.PUBLIC_URL +\n    \"/images/cards/\" +\n    \"b35084d9-3a2b-418c-b1a4-e4929de16a2c\" +\n    \".b.jpg\",\n\n  \"02005\":\n    process.env.PUBLIC_URL +\n    \"/images/cards/\" +\n    \"1eae757a-25b2-4b29-a8e7-f43b12c531b0\" +\n    \".jpg\",\n\n  \"02005_double_sided_back\":\n    process.env.PUBLIC_URL +\n    \"/images/cards/\" +\n    \"1eae757a-25b2-4b29-a8e7-f43b12c531b0\" +\n    \".b.jpg\",\n\n  \"02006a\":\n    process.env.PUBLIC_URL +\n    \"/images/cards/\" +\n    \"0a59161d-7db6-4328-9eeb-1906ce8715a5\" +\n    \".jpg\",\n\n  \"02006b\":\n    process.env.PUBLIC_URL +\n    \"/images/cards/\" +\n    \"0a59161d-7db6-4328-9eeb-1906ce8715a5\" +\n    \".b.jpg\",\n\n  \"12020\": \"https://lcgcdn.s3.amazonaws.com/mc/MC13en_20.jpg\",\n\n  // Scarlet Witch Cards\n  \"15001a\": \"https://marvelcdb.com/bundles/cards/15001a.png\",\n  \"15001b\": \"https://marvelcdb.com/bundles/cards/15001b.png\",\n  \"15002\": \"https://hallofheroeshome.files.wordpress.com/2021/03/s1.jpg\",\n  \"15003\": \"https://hallofheroeshome.files.wordpress.com/2021/03/s2.jpg\",\n  \"15004\": \"https://hallofheroeshome.files.wordpress.com/2021/03/s6.jpg\",\n  \"15005\": \"https://hallofheroeshome.files.wordpress.com/2021/03/s7.jpg\",\n  \"15006\": \"https://hallofheroeshome.files.wordpress.com/2021/03/s10.jpg\",\n  \"15007\": \"https://hallofheroeshome.files.wordpress.com/2021/03/s11.jpg\",\n  \"15008\": \"https://hallofheroeshome.files.wordpress.com/2021/03/s12.jpg\",\n  \"15009\": \"https://hallofheroeshome.files.wordpress.com/2021/03/s15.jpg\",\n  \"15010\": \"https://hallofheroeshome.files.wordpress.com/2021/03/w1.jpg\",\n  \"15011\": \"https://hallofheroeshome.files.wordpress.com/2021/03/w2.jpg\",\n  \"15012\": \"https://hallofheroeshome.files.wordpress.com/2021/03/w3.jpg\",\n  \"15013\": \"https://hallofheroeshome.files.wordpress.com/2021/03/w4.jpg\",\n  \"15014\": \"https://hallofheroeshome.files.wordpress.com/2021/03/w5.jpg\",\n  \"15015\": \"https://hallofheroeshome.files.wordpress.com/2021/03/w6.jpg\",\n  \"15019\": \"https://hallofheroeshome.files.wordpress.com/2021/03/w10.jpg\",\n  \"15023\": \"https://hallofheroeshome.files.wordpress.com/2021/03/n2.jpg\",\n  \"15024\": \"https://hallofheroeshome.files.wordpress.com/2021/03/n3.jpg\",\n  \"15025\": \"https://hallofheroeshome.files.wordpress.com/2021/03/n4.jpg\",\n  \"15026\": \"https://hallofheroeshome.files.wordpress.com/2021/03/n5.jpg\",\n  \"15027\": \"https://hallofheroeshome.files.wordpress.com/2021/03/n6.jpg\",\n  \"15028\": \"https://hallofheroeshome.files.wordpress.com/2021/03/z1.jpg\",\n  \"15029\": \"https://hallofheroeshome.files.wordpress.com/2021/03/z2.jpg\",\n  \"15030\": \"https://hallofheroeshome.files.wordpress.com/2021/03/z3.jpg\",\n  \"15031\": \"https://hallofheroeshome.files.wordpress.com/2021/03/z4.jpg\",\n\n  // Groot Cards\n  \"16001a\": \"https://marvelcdb.com/bundles/cards/16001a.png\",\n  \"16001b\": \"https://marvelcdb.com/bundles/cards/16001b.png\",\n  \"16002\": \"https://hallofheroeshome.files.wordpress.com/2021/04/g1.jpg\",\n  \"16003\": \"https://hallofheroeshome.files.wordpress.com/2021/04/g3.jpg\",\n  \"16004\": \"https://hallofheroeshome.files.wordpress.com/2021/04/g5.jpg\",\n  \"16005\": \"https://hallofheroeshome.files.wordpress.com/2021/04/g7.jpg\",\n  \"16006\": \"https://hallofheroeshome.files.wordpress.com/2021/04/g10.jpg\",\n  \"16007\": \"https://hallofheroeshome.files.wordpress.com/2021/04/g11.jpg\",\n  \"16008\": \"https://hallofheroeshome.files.wordpress.com/2021/04/g12.jpg\",\n  \"16009\": \"https://hallofheroeshome.files.wordpress.com/2021/04/g13.jpg\",\n  \"16010\": \"https://hallofheroeshome.files.wordpress.com/2021/04/g14.jpg\",\n  \"16011\": \"https://hallofheroeshome.files.wordpress.com/2021/04/g15.jpg\",\n  \"16012\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z1.jpg\",\n  \"16014\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z3.jpg\",\n  \"16016\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z5.jpg\",\n  \"16017\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z6.jpg\",\n  \"16019\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z8.jpg\",\n  \"16020\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z9.jpg\",\n  \"16024\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z13.jpg\",\n  \"16025\": \"https://hallofheroeshome.files.wordpress.com/2021/04/n1.jpg\",\n  \"16026\": \"https://hallofheroeshome.files.wordpress.com/2021/04/n2.jpg\",\n  \"16027\": \"https://hallofheroeshome.files.wordpress.com/2021/04/n3.jpg\",\n  \"16028\": \"https://hallofheroeshome.files.wordpress.com/2021/04/n4.jpg\",\n\n  // Rocket Cards\n  \"16029a\": \"https://marvelcdb.com/bundles/cards/16029a.png\",\n  \"16029b\": \"https://hallofheroeshome.files.wordpress.com/2021/04/r0a.jpg\",\n  \"16030\": \"https://hallofheroeshome.files.wordpress.com/2021/04/r1.jpg\",\n  \"16031\": \"https://hallofheroeshome.files.wordpress.com/2021/04/r3.jpg\",\n  \"16032\": \"https://hallofheroeshome.files.wordpress.com/2021/04/r5.jpg\",\n  \"16033\": \"https://hallofheroeshome.files.wordpress.com/2021/04/r6.jpg\",\n  \"16034\": \"https://hallofheroeshome.files.wordpress.com/2021/04/r8.jpg\",\n  \"16035\": \"https://hallofheroeshome.files.wordpress.com/2021/04/r10.jpg\",\n  \"16036\": \"https://hallofheroeshome.files.wordpress.com/2021/04/r11.jpg\",\n  \"16037\": \"https://hallofheroeshome.files.wordpress.com/2021/04/r12.jpg\",\n  \"16038\": \"https://hallofheroeshome.files.wordpress.com/2021/04/r13.jpg\",\n  \"16039\": \"https://hallofheroeshome.files.wordpress.com/2021/04/r15.jpg\",\n  \"16040\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z1-1.jpg\",\n  \"16043\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z4-1.jpg\",\n  \"16045\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z6-1.jpg\",\n  \"16046\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z7-1.jpg\",\n  \"16047\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z8-1.jpg\",\n  \"16048\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z9-1.jpg\",\n  \"16052\": \"https://hallofheroeshome.files.wordpress.com/2021/04/z13-1.jpg\",\n  \"16053\": \"https://hallofheroeshome.files.wordpress.com/2021/04/n0.jpg\",\n  \"16054\": \"https://hallofheroeshome.files.wordpress.com/2021/04/n1-1.jpg\",\n  \"16055\": \"https://hallofheroeshome.files.wordpress.com/2021/04/n2-1.jpg\",\n  \"16056\": \"https://hallofheroeshome.files.wordpress.com/2021/04/n3-1.jpg\",\n  \"16057\": \"https://hallofheroeshome.files.wordpress.com/2021/04/n4-1.jpg\",\n\n  // Brotherhood of Badoon\n  \"16058\": \"https://hallofheroeshome.files.wordpress.com/2021/04/d1.jpg\",\n  \"16059\": \"https://hallofheroeshome.files.wordpress.com/2021/04/d2.jpg\",\n  \"16060\": \"https://hallofheroeshome.files.wordpress.com/2021/04/d3.jpg\",\n  \"16061\": \"https://hallofheroeshome.files.wordpress.com/2021/04/d4a.jpg\",\n  \"16061_double_sided_back\":\n    \"https://hallofheroeshome.files.wordpress.com/2021/04/d4b.jpg\",\n  \"16062\": \"https://hallofheroeshome.files.wordpress.com/2021/04/d5a.jpg\",\n  \"16062_double_sided_back\":\n    \"https://hallofheroeshome.files.wordpress.com/2021/04/d5b.jpg\",\n  \"16063\": \"https://hallofheroeshome.files.wordpress.com/2021/04/d6.jpg\",\n  \"16064\": \"https://hallofheroeshome.files.wordpress.com/2021/04/d7.jpg\",\n  \"16065\": \"https://hallofheroeshome.files.wordpress.com/2021/04/d8.jpg\",\n  \"16066\": \"https://hallofheroeshome.files.wordpress.com/2021/04/d10.jpg\",\n  \"16067\": \"https://hallofheroeshome.files.wordpress.com/2021/04/d11.jpg\",\n  \"16068\": \"https://hallofheroeshome.files.wordpress.com/2021/04/d12.jpg\",\n  \"16069\": \"https://hallofheroeshome.files.wordpress.com/2021/04/d13.jpg\",\n\n  // Band of Badoon\n  \"16117\": \"https://hallofheroeshome.files.wordpress.com/2021/04/bb1.jpg\",\n  \"16118\": \"https://hallofheroeshome.files.wordpress.com/2021/04/bb3.jpg\",\n  \"16119\": \"https://hallofheroeshome.files.wordpress.com/2021/04/bb6.jpg\",\n  \"16120\": \"https://hallofheroeshome.files.wordpress.com/2021/04/bb7.jpg\",\n  \"16121\": \"https://hallofheroeshome.files.wordpress.com/2021/04/bb9.jpg\",\n\n  // Ship Command\n  \"16142\": \"https://hallofheroeshome.files.wordpress.com/2021/04/sc1.jpg\",\n  \"16143\": \"https://hallofheroeshome.files.wordpress.com/2021/04/sc2.jpg\",\n  \"16144\": \"https://hallofheroeshome.files.wordpress.com/2021/04/sc3.jpg\",\n  \"16145\": \"https://hallofheroeshome.files.wordpress.com/2021/04/sc4.jpg\",\n  \"16146\": \"https://hallofheroeshome.files.wordpress.com/2021/04/sc5.jpg\",\n  \"16147\": \"https://hallofheroeshome.files.wordpress.com/2021/04/sc6.jpg\",\n  \"16148\": \"https://hallofheroeshome.files.wordpress.com/2021/04/sc7.jpg\",\n\n  // Star-Lord\n  \"17001a\": \"https://marvelcdb.com/bundles/cards/17001a.png\",\n  \"17001b\": \"https://marvelcdb.com/bundles/cards/17001b.png\",\n  \"17002\": \"https://hallofheroeshome.files.wordpress.com/2021/05/1-1.jpg\",\n  \"17003\": \"https://hallofheroeshome.files.wordpress.com/2021/05/2-1.jpg\",\n  \"17004\": \"https://hallofheroeshome.files.wordpress.com/2021/05/5.jpg\",\n  \"17005\": \"https://hallofheroeshome.files.wordpress.com/2021/05/7.jpg\",\n  \"17006\": \"https://hallofheroeshome.files.wordpress.com/2021/05/10.jpg\",\n  \"17007\": \"https://hallofheroeshome.files.wordpress.com/2021/05/11.jpg\",\n  \"17008\": \"https://hallofheroeshome.files.wordpress.com/2021/05/13.jpg\",\n  \"17009\": \"https://hallofheroeshome.files.wordpress.com/2021/05/14.jpg\",\n  \"17010\": \"https://hallofheroeshome.files.wordpress.com/2021/05/15.jpg\",\n  \"17011\": \"https://hallofheroeshome.files.wordpress.com/2021/05/a1.jpg\",\n  \"17012\": \"https://hallofheroeshome.files.wordpress.com/2021/05/a2.jpg\",\n  \"17013\": \"https://hallofheroeshome.files.wordpress.com/2021/05/a3.jpg\",\n  \"17014\": \"https://hallofheroeshome.files.wordpress.com/2021/05/a4.jpg\",\n  \"17015\": \"https://hallofheroeshome.files.wordpress.com/2021/05/a5.jpg\",\n  \"17017\": \"https://hallofheroeshome.files.wordpress.com/2021/05/a7.jpg\",\n  \"17019\": \"https://hallofheroeshome.files.wordpress.com/2021/05/a9.jpg\",\n  \"17020\": \"https://hallofheroeshome.files.wordpress.com/2021/05/a10.jpg\",\n  \"17021\": \"https://hallofheroeshome.files.wordpress.com/2021/05/a11.jpg\",\n  \"17022\": \"https://hallofheroeshome.files.wordpress.com/2021/05/a12.jpg\",\n  \"17023\": \"https://hallofheroeshome.files.wordpress.com/2021/05/a13.jpg\",\n  \"17024\": \"https://hallofheroeshome.files.wordpress.com/2021/05/o0.jpg\",\n  \"17025\": \"https://hallofheroeshome.files.wordpress.com/2021/05/o1.jpg\",\n  \"17026\": \"https://hallofheroeshome.files.wordpress.com/2021/05/o2.jpg\",\n  \"17027\": \"https://hallofheroeshome.files.wordpress.com/2021/05/o3.jpg\",\n  \"17028\": \"https://hallofheroeshome.files.wordpress.com/2021/05/bb1.jpg\",\n  \"17029\": \"https://hallofheroeshome.files.wordpress.com/2021/05/bb2.jpg\",\n  \"17030\": \"https://hallofheroeshome.files.wordpress.com/2021/05/bb3.jpg\",\n\n  // Gamora\n  \"18001a\": \"https://marvelcdb.com/bundles/cards/18001a.png\",\n  \"18001b\": \"https://marvelcdb.com/bundles/cards/18001b.png\",\n  \"18002\": \"https://hallofheroeshome.files.wordpress.com/2021/05/g1-1.jpg\",\n  \"18003\": \"https://hallofheroeshome.files.wordpress.com/2021/05/g2-1.jpg\",\n  \"18004\": \"https://hallofheroeshome.files.wordpress.com/2021/05/g4-1.jpg\",\n  \"18005\": \"https://hallofheroeshome.files.wordpress.com/2021/05/g6-1.jpg\",\n  \"18006\": \"https://hallofheroeshome.files.wordpress.com/2021/05/g8-1.jpg\",\n  \"18007\": \"https://hallofheroeshome.files.wordpress.com/2021/05/g10-1.jpg\",\n  \"18008\": \"https://hallofheroeshome.files.wordpress.com/2021/05/g12-1.jpg\",\n  \"18009\": \"https://hallofheroeshome.files.wordpress.com/2021/05/g13-1.jpg\",\n  \"18010\": \"https://hallofheroeshome.files.wordpress.com/2021/05/g15-1.jpg\",\n  \"18011\": \"https://hallofheroeshome.files.wordpress.com/2021/05/z0.png\",\n  \"18012\": \"https://hallofheroeshome.files.wordpress.com/2021/05/c1.jpg\",\n  \"18013\": \"https://hallofheroeshome.files.wordpress.com/2021/05/d1.jpg\",\n  \"18015\": \"https://hallofheroeshome.files.wordpress.com/2021/05/f1.jpg\",\n  \"18016\": \"https://hallofheroeshome.files.wordpress.com/2021/05/i111.jpg\",\n  \"18018\": \"https://hallofheroeshome.files.wordpress.com/2021/05/aaa1.jpg\",\n  \"18019\":\n    \"https://hallofheroeshome.files.wordpress.com/2021/05/gamora-spoilers-41024_1.jpg\",\n  \"18020\": \"https://hallofheroeshome.files.wordpress.com/2021/05/h1.jpg\",\n  \"18024\": \"https://hallofheroeshome.files.wordpress.com/2021/05/n1.jpg\",\n  \"18025\": \"https://hallofheroeshome.files.wordpress.com/2021/05/s1.jpg\",\n  \"18026\": \"https://hallofheroeshome.files.wordpress.com/2021/05/n3.jpg\",\n  \"18027\": \"https://hallofheroeshome.files.wordpress.com/2021/05/n4.jpg\",\n  \"18028\": \"https://hallofheroeshome.files.wordpress.com/2021/05/n5.jpg\",\n  \"18029\": \"https://hallofheroeshome.files.wordpress.com/2021/05/zzz1.jpg\",\n  \"18030\": \"https://hallofheroeshome.files.wordpress.com/2021/05/zzz2.jpg\",\n  \"18031\": \"https://hallofheroeshome.files.wordpress.com/2021/05/zzz3.jpg\",\n\n  // Drax\n  \"19001a\": \"https://marvelcdb.com/bundles/cards/19001a.png\",\n  \"19001b\": \"https://marvelcdb.com/bundles/cards/19001b.png\",\n  \"19002\": \"https://hallofheroeshome.files.wordpress.com/2021/06/d1.jpg\",\n  \"19003\": \"https://hallofheroeshome.files.wordpress.com/2021/06/d2.jpg\",\n  \"19004\": \"https://hallofheroeshome.files.wordpress.com/2021/06/d4.jpg\",\n  \"19005\": \"https://hallofheroeshome.files.wordpress.com/2021/06/d6.jpg\",\n  \"19006\": \"https://hallofheroeshome.files.wordpress.com/2021/06/d8.jpg\",\n  \"19007\": \"https://hallofheroeshome.files.wordpress.com/2021/06/d10.jpg\",\n  \"19008\": \"https://hallofheroeshome.files.wordpress.com/2021/06/d12.jpg\",\n  \"19009\": \"https://hallofheroeshome.files.wordpress.com/2021/06/d13.jpg\",\n  \"19010\": \"https://hallofheroeshome.files.wordpress.com/2021/06/d14.jpg\",\n  \"19011\": \"https://hallofheroeshome.files.wordpress.com/2021/06/d15.jpg\",\n  \"19012\": \"https://hallofheroeshome.files.wordpress.com/2021/06/z1.jpg\",\n  \"19013\": \"https://hallofheroeshome.files.wordpress.com/2021/06/z2.jpg\",\n  \"19015\": \"https://hallofheroeshome.files.wordpress.com/2021/06/z4.jpg\",\n  \"19016\": \"https://hallofheroeshome.files.wordpress.com/2021/06/z5.jpg\",\n  \"19017\": \"https://hallofheroeshome.files.wordpress.com/2021/06/z6.jpg\",\n  \"19018\": \"https://hallofheroeshome.files.wordpress.com/2021/06/z7.jpg\",\n  \"19020\": \"https://hallofheroeshome.files.wordpress.com/2021/06/z9.jpg\",\n  \"19025\": \"https://hallofheroeshome.files.wordpress.com/2021/06/n1.jpg\",\n  \"19026\": \"https://hallofheroeshome.files.wordpress.com/2021/06/n2.jpg\",\n  \"19027\": \"https://hallofheroeshome.files.wordpress.com/2021/06/n3.jpg\",\n  \"19028\": \"https://hallofheroeshome.files.wordpress.com/2021/06/n4.jpg\",\n  \"19029\": \"https://hallofheroeshome.files.wordpress.com/2021/06/n5.jpg\",\n  \"19030\": \"https://hallofheroeshome.files.wordpress.com/2021/06/zz1.jpg\",\n  \"19031\": \"https://hallofheroeshome.files.wordpress.com/2021/06/zz2.jpg\",\n  \"19032\": \"https://hallofheroeshome.files.wordpress.com/2021/06/zz3.jpg\",\n\n  // Venom\n  \"20001a\": \"https://marvelcdb.com/bundles/cards/20001a.png\",\n  \"20001b\": \"https://marvelcdb.com/bundles/cards/20001b.png\",\n  \"20002\": \"https://hallofheroeshome.files.wordpress.com/2021/07/v1.jpg\",\n  \"20003\": \"https://hallofheroeshome.files.wordpress.com/2021/07/v3.jpg\",\n  \"20004\": \"https://hallofheroeshome.files.wordpress.com/2021/07/v5.jpg\",\n  \"20005\": \"https://hallofheroeshome.files.wordpress.com/2021/07/v6.jpg\",\n  \"20006\": \"https://hallofheroeshome.files.wordpress.com/2021/07/v9.jpg\",\n  \"20007\": \"https://hallofheroeshome.files.wordpress.com/2021/07/v11.jpg\",\n  \"20008\": \"https://hallofheroeshome.files.wordpress.com/2021/07/v12.jpg\",\n  \"20009\": \"https://hallofheroeshome.files.wordpress.com/2021/07/v13.jpg\",\n  \"20010\": \"https://hallofheroeshome.files.wordpress.com/2021/07/v14.jpg\",\n  \"20011\": \"https://hallofheroeshome.files.wordpress.com/2021/07/j1.jpg\",\n  \"20012\": \"https://hallofheroeshome.files.wordpress.com/2021/07/j2.jpg\",\n  \"20013\": \"https://hallofheroeshome.files.wordpress.com/2021/07/j3.jpg\",\n  \"20014\": \"https://hallofheroeshome.files.wordpress.com/2021/07/j4.jpg\",\n  \"20015\": \"https://hallofheroeshome.files.wordpress.com/2021/07/j5.jpg\",\n  \"20016\": \"https://hallofheroeshome.files.wordpress.com/2021/07/j6.jpg\",\n  \"20017\": \"https://hallofheroeshome.files.wordpress.com/2021/07/j7.jpg\",\n  \"20018\": \"https://hallofheroeshome.files.wordpress.com/2021/07/j8.jpg\",\n  \"20019\": \"https://hallofheroeshome.files.wordpress.com/2021/07/j9.jpg\",\n  \"20020\": \"https://hallofheroeshome.files.wordpress.com/2021/07/j10.jpg\",\n  \"20021\": \"https://hallofheroeshome.files.wordpress.com/2021/07/j11.jpg\",\n  \"20022\": \"https://hallofheroeshome.files.wordpress.com/2021/07/j12.jpg\",\n  \"20023\": \"https://hallofheroeshome.files.wordpress.com/2021/07/n0.jpg\",\n  \"20024\": \"https://hallofheroeshome.files.wordpress.com/2021/07/n1.jpg\",\n  \"20025\": \"https://hallofheroeshome.files.wordpress.com/2021/07/n2.jpg\",\n  \"20026\": \"https://hallofheroeshome.files.wordpress.com/2021/07/z1.jpg\",\n  \"20027\": \"https://hallofheroeshome.files.wordpress.com/2021/07/z2.jpg\",\n  \"20028\": \"https://hallofheroeshome.files.wordpress.com/2021/07/z3.jpg\",\n  \"20029\": \"https://hallofheroeshome.files.wordpress.com/2021/07/z4.jpg\",\n};\n","import { Component } from \"react\";\nimport * as React from \"react\";\nimport { ICardStack } from \"./features/cards/initialState\";\nimport { Group, Rect, Text } from \"react-konva\";\nimport { cardConstants } from \"./constants/card-constants\";\nimport { GameType } from \"./constants/app-constants\";\nimport { GamePropertiesMap } from \"./constants/game-type-properties-mapping\";\nimport cloneDeep from \"lodash.clonedeep\";\n\ninterface IProps {\n  currentGameType: GameType;\n  x: number;\n  y: number;\n  card: ICardStack | undefined;\n  cardHeight: number | undefined;\n  cardWidth: number | undefined;\n  isPreview: boolean;\n}\n\ninterface IState {\n  imagesLoaded: {\n    [K: string]: boolean;\n  };\n}\n\nconst desiredWidth = 36;\nconst desiredHeight = 36;\n\nconst textWidth = 40;\n\nclass CardModifiers extends Component<IProps, IState> {\n  private imgs: { [K: string]: HTMLImageElement };\n  private unmounted: boolean;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.unmounted = true;\n\n    this.imgs = {};\n\n    const modifiersInfo =\n      GamePropertiesMap[this.props.currentGameType].modifiers;\n\n    const newImagesLoaded: {\n      [K: string]: boolean;\n    } = {};\n\n    modifiersInfo.forEach((m) => {\n      this.imgs[m.attributeId] = new Image();\n      newImagesLoaded[m.attributeId] = false;\n    });\n\n    this.state = {\n      imagesLoaded: newImagesLoaded,\n    };\n\n    // set up onload\n    modifiersInfo.forEach((m) => {\n      this.imgs[m.attributeId].onload = () => {\n        if (!this.unmounted) {\n          const updatedImagesLoaded = cloneDeep(this.state.imagesLoaded);\n          updatedImagesLoaded[m.attributeId] = true;\n          this.setState({\n            imagesLoaded: updatedImagesLoaded,\n          });\n        }\n      };\n    });\n\n    // set up the img src values\n    modifiersInfo.forEach((m) => {\n      if (!!this.props.card?.modifiers[m.attributeId]) {\n        this.imgs[m.attributeId].src = m.icon;\n      }\n    });\n  }\n\n  public componentDidUpdate(prevProps: IProps, prevState: IState) {\n    const modifiersInfo =\n      GamePropertiesMap[this.props.currentGameType].modifiers;\n\n    // handle change\n    modifiersInfo.forEach((m) => {\n      if (\n        !this.state.imagesLoaded[m.attributeId] &&\n        !prevProps.card?.modifiers[m.attributeId] &&\n        !!this.props.card?.modifiers[m.attributeId]\n      ) {\n        this.imgs[m.attributeId].src = m.icon;\n      }\n    });\n  }\n\n  public componentDidMount() {\n    this.unmounted = false;\n  }\n\n  public componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  render() {\n    if (!this.props.card) return null;\n    if (!this.props.card?.modifiers) return null;\n\n    const modifiersInfo =\n      GamePropertiesMap[this.props.currentGameType].modifiers;\n\n    const nodesToRender: JSX.Element[] = [];\n\n    modifiersInfo.forEach((m) => {\n      const modifierX = this.props.isPreview\n        ? this.props.x +\n          (this.props.cardWidth || 0) / 2 -\n          desiredWidth -\n          textWidth\n        : this.props.x + cardConstants.CARD_WIDTH / 2 - desiredWidth / 2;\n      const modifierTextX = modifierX + desiredWidth - 2;\n      const modifierY =\n        this.props.y -\n        cardConstants.CARD_HEIGHT / 2 +\n        10 * (m.slot - 1) +\n        desiredHeight * (m.slot - 1);\n      const showModifier =\n        this.state.imagesLoaded[m.attributeId] &&\n        !!this.props.card?.modifiers[m.attributeId];\n\n      const img = this.imgs[m.attributeId];\n\n      const modifierValue = this.props.card?.modifiers[m.attributeId];\n\n      const modifierToken = showModifier ? (\n        <Rect\n          key={`${this.props.card?.id}-${m.attributeId}-modifier-token`}\n          x={modifierX}\n          y={modifierY}\n          scale={{\n            x: desiredWidth / img.naturalWidth,\n            y: desiredHeight / img.naturalHeight,\n          }}\n          width={img.naturalWidth}\n          height={img.naturalHeight}\n          fillPatternImage={img}\n        ></Rect>\n      ) : null;\n\n      const modifierText = showModifier ? (\n        <Group\n          key={`${this.props.card?.id}-${m.attributeId}-modifier-text`}\n          x={modifierTextX}\n          y={modifierY}\n          width={textWidth}\n          height={desiredHeight}\n        >\n          <Rect width={textWidth} height={desiredHeight} fill=\"white\"></Rect>\n          <Text\n            width={textWidth}\n            height={desiredHeight}\n            text={`${modifierValue && modifierValue > 0 ? \"+\" : \"\"}${\n              modifierValue ?? \"?\"\n            }`}\n            fill=\"black\"\n            background=\"white\"\n            align=\"center\"\n            verticalAlign=\"middle\"\n            fontSize={24}\n          ></Text>\n        </Group>\n      ) : null;\n\n      if (!!modifierToken) {\n        nodesToRender.push(modifierToken);\n      }\n      if (!!modifierText) {\n        nodesToRender.push(modifierText);\n      }\n    });\n\n    return nodesToRender;\n  }\n}\n\nexport default CardModifiers;\n","import { connect } from \"react-redux\";\n\nimport { RootState } from \"./store/rootReducer\";\nimport { getCardMapById } from \"./features/cards/cards.selectors\";\nimport CardModifiers from \"./CardModifiers\";\n\nexport interface IProps {\n  id: string;\n}\n\nconst mapStateToProps = (state: RootState, props: IProps) => {\n  return {\n    card: getCardMapById(state)[props.id],\n  };\n};\n\nconst CardModifiersContainer = connect(mapStateToProps, {})(CardModifiers);\n\nexport default CardModifiersContainer;\n","// tslint:disable:no-console\nimport { KonvaEventObject } from \"konva/lib/Node\";\nimport { Rect as RectRef } from \"konva/lib/shapes/Rect\";\nimport { Vector2d } from \"konva/lib/types\";\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport { Rect, Text } from \"react-konva\";\nimport { animated, Spring } from \"@react-spring/konva\";\nimport CardTokensContainer from \"./CardTokensContainer\";\nimport { GameType, myPeerRef, PlayerColor } from \"./constants/app-constants\";\nimport { cardConstants } from \"./constants/card-constants\";\nimport { CARD_ALREADY_ROTATED_MAP } from \"./constants/card-missing-image-map\";\nimport { GamePropertiesMap } from \"./constants/game-type-properties-mapping\";\nimport CardModifiersContainer from \"./CardModifiersContainer\";\n\nexport const HORIZONTAL_TYPE_CODES = [\n  \"main_scheme\",\n  \"side_scheme\",\n  \"quest\",\n  \"player_side_quest\",\n];\n\nexport interface CardTokens {\n  damage: number;\n  threat: number;\n  generic: number;\n}\n\nexport interface CardUIState {\n  stunned: boolean;\n  confused: boolean;\n  tough: boolean;\n  tokens: CardTokens;\n}\n\ninterface IProps {\n  currentGameType: GameType;\n  name: string;\n  code: string;\n  selectedColor: PlayerColor;\n  controlledBy: string;\n  dragging: boolean;\n  shuffling: boolean;\n  exhausted: boolean;\n  cardState?: CardUIState;\n  fill: string;\n  handleClick?: (\n    id: string,\n    event: KonvaEventObject<MouseEvent>,\n    wasTouch: boolean\n  ) => void;\n  handleDoubleClick?: (id: string, event: KonvaEventObject<MouseEvent>) => void;\n  handleDoubleTap?: (id: string, event: KonvaEventObject<TouchEvent>) => void;\n  handleDragStart?: (id: string, event: KonvaEventObject<DragEvent>) => void;\n  handleDragMove?: (info: { id: string; dx: number; dy: number }) => void;\n  handleDragEnd?: (id: string) => void;\n  handleHover?: (id: string) => void;\n  handleHoverLeave?: (id: string) => void;\n  id: string;\n  selected: boolean;\n  dropTargetColor?: string;\n  x: number;\n  y: number;\n  width?: number;\n  height?: number;\n  imgUrls: string[];\n  isGhost?: boolean;\n  isPreview?: boolean;\n  numCardsInStack?: number;\n  typeCode?: string;\n  faceup: boolean;\n  handleContextMenu?: (\n    id: string,\n    event: KonvaEventObject<PointerEvent>\n  ) => void;\n}\n\ninterface IState {\n  imageLoaded: boolean;\n  imageLoadFailed: number;\n  prevImgUrls: string[];\n  tokenImagesLoaded: {\n    stunned: boolean;\n    confused: boolean;\n    tough: boolean;\n  };\n}\n\nconst stringArraysEqual = (array1: string[], array2: string[]) => {\n  return (\n    array1.length === array2.length &&\n    array1.every((value, index) => {\n      return value === array2[index];\n    })\n  );\n};\n\nclass Card extends Component<IProps, IState> {\n  // tslint:disable-next-line:member-access\n  static getDerivedStateFromProps(props: IProps, state: IState): IState | null {\n    if (!stringArraysEqual(props.imgUrls, state.prevImgUrls ?? [])) {\n      return {\n        imageLoaded: false,\n        imageLoadFailed: 0,\n        prevImgUrls: props.imgUrls,\n        tokenImagesLoaded: {\n          stunned: state.tokenImagesLoaded.stunned,\n          confused: state.tokenImagesLoaded.confused,\n          tough: state.tokenImagesLoaded.tough,\n        },\n      };\n    }\n    // No state update necessary\n    return null;\n  }\n\n  private imgs: HTMLImageElement[] = [];\n  private stunnedImg: HTMLImageElement;\n  private confusedImg: HTMLImageElement;\n  private toughImg: HTMLImageElement;\n  private unmounted: boolean;\n  private touchTimer: any = null;\n  private rect: RectRef | null = null;\n  private shuffleToggle = false;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.unmounted = true;\n\n    this.state = {\n      imageLoaded: false,\n      imageLoadFailed: 0,\n      prevImgUrls: this.props.imgUrls,\n      tokenImagesLoaded: {\n        stunned: false,\n        confused: false,\n        tough: false,\n      },\n    };\n\n    this.initCardImages(props);\n\n    this.stunnedImg = new Image();\n    this.confusedImg = new Image();\n    this.toughImg = new Image();\n\n    // STUNNED\n    this.stunnedImg.onload = () => {\n      if (!this.unmounted) {\n        this.setState({\n          tokenImagesLoaded: {\n            stunned: true,\n            confused: this.state.tokenImagesLoaded.confused,\n            tough: this.state.tokenImagesLoaded.tough,\n          },\n        });\n      }\n    };\n\n    const tokenInfo = GamePropertiesMap[props.currentGameType].tokens;\n\n    if (!!props.cardState?.stunned && !!tokenInfo.stunned) {\n      this.stunnedImg.src = tokenInfo.stunned.imagePath;\n    }\n\n    // CONFUSED\n    this.confusedImg.onload = () => {\n      if (!this.unmounted) {\n        this.setState({\n          tokenImagesLoaded: {\n            stunned: this.state.tokenImagesLoaded.stunned,\n            confused: true,\n            tough: this.state.tokenImagesLoaded.tough,\n          },\n        });\n      }\n    };\n\n    if (!!props.cardState?.confused && !!tokenInfo.confused) {\n      this.confusedImg.src = tokenInfo.confused.imagePath;\n    }\n\n    // TOUGH\n    this.toughImg.onload = () => {\n      if (!this.unmounted) {\n        this.setState({\n          tokenImagesLoaded: {\n            stunned: this.state.tokenImagesLoaded.stunned,\n            confused: this.state.tokenImagesLoaded.confused,\n            tough: true,\n          },\n        });\n      }\n    };\n\n    if (!!props.cardState?.tough && !!tokenInfo.tough) {\n      this.toughImg.src = tokenInfo.tough.imagePath;\n    }\n  }\n\n  public componentDidUpdate(prevProps: IProps, prevState: IState) {\n    // if we just went from not shuffling -> shuffling, animate\n    if (!prevProps.shuffling && this.props.shuffling) {\n      if (!!this.rect) {\n        this.shuffleToggle = !this.shuffleToggle;\n        this.rect.to({\n          rotation: this.currentRotation + (this.shuffleToggle ? 360 : -360),\n          duration: 0.2,\n        });\n      }\n    }\n\n    if (\n      !this.state.imageLoaded &&\n      !stringArraysEqual(prevProps.imgUrls, this.props.imgUrls)\n    ) {\n      this.setState({\n        imageLoaded: false,\n        imageLoadFailed: 0,\n      });\n      this.initCardImages(this.props);\n    }\n\n    const tokenInfo = GamePropertiesMap[this.props.currentGameType].tokens;\n\n    // STUNNED\n    if (\n      !this.state.tokenImagesLoaded.stunned &&\n      !prevProps.cardState?.stunned &&\n      !!this.props.cardState?.stunned &&\n      !!tokenInfo.stunned\n    ) {\n      this.stunnedImg.src = tokenInfo.stunned.imagePath;\n    }\n\n    // CONFUSED\n    if (\n      !this.state.tokenImagesLoaded.confused &&\n      !prevProps.cardState?.confused &&\n      !!this.props.cardState?.confused &&\n      !!tokenInfo.confused\n    ) {\n      this.confusedImg.src = tokenInfo.confused.imagePath;\n    }\n\n    // TOUGH\n    if (\n      !this.state.tokenImagesLoaded.tough &&\n      !prevProps.cardState?.tough &&\n      !!this.props.cardState?.tough &&\n      !!tokenInfo.tough\n    ) {\n      this.toughImg.src = tokenInfo.tough.imagePath;\n    }\n  }\n\n  private initCardImages = (props: IProps) => {\n    this.imgs = props.imgUrls.map(() => new Image());\n\n    // When the image loads, set a flag in the state\n    this.imgs.forEach(\n      (img) =>\n        (img.onload = () => {\n          if (!this.unmounted) {\n            this.setState({\n              imageLoaded: true,\n            });\n          }\n        })\n    );\n\n    this.imgs.forEach(\n      (img) =>\n        (img.onerror = () => {\n          if (!this.unmounted) {\n            this.setState({\n              imageLoadFailed: this.state.imageLoadFailed + 1,\n            });\n          }\n        })\n    );\n\n    props.imgUrls.forEach((imgUrl, index) => (this.imgs[index].src = imgUrl));\n  };\n\n  public componentDidMount() {\n    this.unmounted = false;\n  }\n\n  public componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  public render() {\n    return this.renderCard(this.state.imageLoaded);\n  }\n\n  private renderCard(imageLoaded: boolean) {\n    const heightToUse = this.props.height || cardConstants.CARD_HEIGHT;\n    const widthToUse = this.props.width || cardConstants.CARD_WIDTH;\n\n    return this.renderUnanimatedCard(heightToUse, widthToUse, imageLoaded);\n  }\n\n  // Unfortunately, if you try to use shadow / blur to indicate selection\n  // (which I did at first and looks better, imo) the performance in horrible,\n  // even with some reccommended settings (shadowForStrokeEnabled = false and\n  // hitStrokeWidth = 0). So we'll just use stroke / border for everything\n  private getStrokeColor = () => {\n    if (!!this.props.dropTargetColor) {\n      return this.props.dropTargetColor;\n    }\n\n    if (this.props.selected) {\n      return this.props.selectedColor;\n    }\n\n    return \"\";\n  };\n\n  private renderUnanimatedCard = (\n    heightToUse: number,\n    widthToUse: number,\n    imageLoaded: boolean\n  ) => {\n    const imgToUse = imageLoaded\n      ? this.imgs.find((i) => i.complete && i.naturalHeight !== 0)\n      : undefined;\n\n    const scale = this.getScale(imgToUse, widthToUse, heightToUse);\n    const offset = {\n      x: widthToUse / 2,\n      y: heightToUse / 2,\n    };\n\n    const card = (\n      <Spring\n        key={`${this.props.id}-card`}\n        to={{\n          rotation: this.props.exhausted ? 90 : 0,\n        }}\n      >\n        {(animatedProps: any) => (\n          <animated.Rect\n            {...animatedProps}\n            ref={(node) => {\n              if (!!node) {\n                this.rect = node;\n              }\n            }}\n            cornerRadius={9}\n            x={this.props.x}\n            y={this.props.y}\n            width={widthToUse}\n            height={heightToUse}\n            offset={offset}\n            stroke={this.getStrokeColor()}\n            strokeWidth={!!this.getStrokeColor() ? 4 : 0}\n            fillPatternRotation={\n              !imageLoaded ||\n              this.shouldRenderImageHorizontal(\n                this.props.code,\n                this.props.typeCode || \"\",\n                HORIZONTAL_TYPE_CODES\n              )\n                ? 270\n                : 0\n            }\n            fillPatternImage={imgToUse}\n            fillPatternScaleX={scale.width}\n            fillPatternScaleY={scale.height}\n            fill={imageLoaded ? undefined : \"gray\"}\n            shadowForStrokeEnabled={false}\n            hitStrokeWidth={0}\n            opacity={this.props.isGhost ? 0.5 : 1}\n            draggable={\n              this.props.controlledBy === \"\" ||\n              this.props.controlledBy === myPeerRef\n            }\n            onDragStart={this.handleDragStart}\n            onDragMove={this.handleDragMove}\n            onDragEnd={this.handleDragEnd}\n            onDblClick={this.handleDoubleClick}\n            onDblTap={this.handleDoubleTap}\n            onClick={this.handleClick}\n            onTap={this.handleTap}\n            onMouseDown={this.handleMouseDown}\n            onTouchStart={this.handleTouchStart}\n            onTouchMove={this.handleTouchMove}\n            onTouchEnd={this.handleTouchEnd}\n            onMouseOver={this.handleMouseOver}\n            onMouseOut={this.handleMouseOut}\n            onContextMenu={this.handleContextMenu}\n          />\n        )}\n      </Spring>\n    );\n\n    const cardStackOffset = {\n      x: offset.x + 4,\n      y: offset.y - 4,\n    };\n\n    const cardStack =\n      (this.props.numCardsInStack || 1) > 1 ? (\n        <Spring\n          key={`${this.props.id}-cardStack`}\n          to={{\n            rotation: this.props.exhausted ? 90 : 0,\n          }}\n        >\n          {(animatedProps: any) => (\n            <animated.Rect\n              {...animatedProps}\n              cornerRadius={[9, 9, 9, 9]}\n              x={this.props.x}\n              y={this.props.y}\n              width={widthToUse}\n              height={heightToUse}\n              offset={cardStackOffset}\n              opacity={this.props.isGhost ? 0.5 : 1}\n              fill={\"gray\"}\n              shadowForStrokeEnabled={false}\n              hitStrokeWidth={0}\n            />\n          )}\n        </Spring>\n      ) : null;\n\n    const shouldRenderStunned =\n      !!this.props.cardState?.stunned && this.state.tokenImagesLoaded.stunned;\n\n    const stunnedToken = this.getTokenInSlot(\n      shouldRenderStunned,\n      this.stunnedImg,\n      offset,\n      0\n    );\n    const confusedToken = this.getTokenInSlot(\n      !!this.props.cardState?.confused && this.state.tokenImagesLoaded.confused,\n      this.confusedImg,\n      offset,\n      1\n    );\n    const toughToken = this.getTokenInSlot(\n      !!this.props.cardState?.tough && this.state.tokenImagesLoaded.tough,\n      this.toughImg,\n      offset,\n      2\n    );\n\n    const cardTokens =\n      this.props.dragging || this.props.isGhost ? null : (\n        <CardTokensContainer\n          currentGameType={this.props.currentGameType}\n          key={`${this.props.id}-cardTokens`}\n          id={this.props.id}\n          x={this.props.x}\n          y={this.props.y}\n        ></CardTokensContainer>\n      );\n\n    const cardModifiers =\n      this.props.dragging || this.props.isGhost ? null : (\n        <CardModifiersContainer\n          currentGameType={this.props.currentGameType}\n          key={`${this.props.id}-cardModifiers`}\n          id={this.props.id}\n          x={this.props.x}\n          y={this.props.y}\n          cardHeight={this.props.height}\n          cardWidth={this.props.width}\n          isPreview={!!this.props.isPreview}\n        ></CardModifiersContainer>\n      );\n\n    const noImageCardNameText = this.renderCardName(\n      offset,\n      widthToUse,\n      heightToUse\n    );\n\n    return [\n      cardStack,\n      card,\n      noImageCardNameText,\n      stunnedToken,\n      confusedToken,\n      toughToken,\n      cardTokens,\n      cardModifiers,\n    ];\n  };\n\n  private renderCardName(\n    offset: Vector2d,\n    cardWidth: number,\n    cardHeight: number\n  ) {\n    const textOffset = { x: offset.x - 10, y: offset.y - 20 };\n    const textItem =\n      this.state.imageLoadFailed === this.props.imgUrls.length &&\n      this.state.imageLoadFailed !== 0 ? (\n        <Text\n          key={`${this.props.id}-cardnametext`}\n          offset={textOffset}\n          x={this.props.x}\n          y={this.props.y}\n          width={cardWidth - 10}\n          height={cardHeight - 20}\n          fontSize={24}\n          text={`${this.props.name} ${this.props.code}`}\n          draggable={\n            this.props.controlledBy === \"\" ||\n            this.props.controlledBy === myPeerRef\n          }\n          onDragStart={this.handleDragStart}\n          onDragMove={this.handleDragMove}\n          onDragEnd={this.handleDragEnd}\n          onDblClick={this.handleDoubleClick}\n          onDblTap={this.handleDoubleClick}\n          onClick={this.handleClick}\n          onTap={this.handleClick}\n          onMouseDown={this.handleMouseDown}\n          onTouchStart={this.handleMouseDown}\n          onMouseOver={this.handleMouseOver}\n          onMouseOut={this.handleMouseOut}\n          onContextMenu={this.handleContextMenu}\n        ></Text>\n      ) : null;\n\n    return textItem;\n  }\n\n  private getTokenInSlot(\n    shouldRender: boolean,\n    img: HTMLImageElement,\n    offset: { x: number; y: number },\n    slot: 0 | 1 | 2\n  ) {\n    const dimensions = {\n      width: img.naturalWidth / 2,\n      height: img.naturalHeight / 2,\n    };\n\n    const stunnedOffset = {\n      x: offset.x - cardConstants.CARD_WIDTH + dimensions.width / 2,\n      y: offset.y - dimensions.height * slot - 5 * (slot + 1) - 10,\n    };\n\n    return shouldRender ? (\n      <Rect\n        key={`${this.props.id}-status${slot}`}\n        native={true}\n        cornerRadius={8}\n        x={this.props.x}\n        y={this.props.y}\n        width={dimensions.width}\n        height={dimensions.height}\n        fillPatternScaleX={0.5}\n        fillPatternScaleY={0.5}\n        offset={stunnedOffset}\n        fillPatternImage={img}\n      />\n    ) : null;\n  }\n\n  private shouldRenderImageHorizontal(\n    code: string,\n    type: string,\n    typeCodes: string[]\n  ): boolean {\n    const shouldRotateByType =\n      typeCodes.includes(type.toLocaleLowerCase()) && !this.plainCardBack;\n    return shouldRotateByType && !CARD_ALREADY_ROTATED_MAP[code];\n  }\n\n  private get plainCardBack() {\n    return (\n      this.props.imgUrls.some((i) => i.includes(\"standard\")) &&\n      this.props.imgUrls.some((i) => i.includes(\"_back\"))\n    );\n  }\n\n  private get currentRotation() {\n    return this.props.exhausted ? 90 : 0;\n  }\n\n  private getScale(\n    img: HTMLImageElement | undefined,\n    widthToUse: number,\n    heightToUse: number\n  ) {\n    const width = !!img ? widthToUse / img.naturalWidth : widthToUse;\n\n    const widthHorizontal = !!img ? heightToUse / img.naturalWidth : widthToUse;\n\n    const height = !!img ? heightToUse / img.naturalHeight : heightToUse;\n\n    const heightHorizontal = !!img\n      ? widthToUse / img.naturalHeight\n      : heightToUse;\n\n    return this.shouldRenderImageHorizontal(\n      this.props.code,\n      this.props.typeCode || \"\",\n      HORIZONTAL_TYPE_CODES\n    )\n      ? { width: widthHorizontal, height: heightHorizontal }\n      : { width, height };\n  }\n\n  private handleContextMenu = (event: KonvaEventObject<PointerEvent>): void => {\n    if (!!this.props.handleContextMenu) {\n      this.props.handleContextMenu(this.props.id, event);\n    }\n  };\n\n  private handleDoubleClick = (event: KonvaEventObject<MouseEvent>) => {\n    if (this.props.handleDoubleClick) {\n      this.props.handleDoubleClick(this.props.id, event);\n    }\n  };\n\n  private handleDoubleTap = (event: KonvaEventObject<TouchEvent>) => {\n    if (this.props.handleDoubleTap) {\n      this.props.handleDoubleTap(this.props.id, event);\n    }\n  };\n\n  private handleDragStart = (event: KonvaEventObject<DragEvent>) => {\n    if (this.props.handleDragStart) {\n      this.props.handleDragStart(this.props.id, event);\n    }\n  };\n\n  private handleDragMove = (event: any) => {\n    if (this.props.handleDragMove) {\n      this.props.handleDragMove({\n        id: this.props.id,\n        dx: event.target.x() - this.props.x,\n        dy: event.target.y() - this.props.y,\n      });\n    }\n  };\n\n  private handleDragEnd = () => {\n    if (this.props.handleDragEnd && this.props.dragging) {\n      this.props.handleDragEnd(this.props.id);\n    }\n  };\n\n  private handleTap = (event: KonvaEventObject<MouseEvent>) => {\n    this.handleTapOrClick(event, true);\n  };\n\n  private handleClick = (event: KonvaEventObject<MouseEvent>) => {\n    this.handleTapOrClick(event, false);\n  };\n\n  private handleTapOrClick = (\n    event: KonvaEventObject<MouseEvent>,\n    wasTouch: boolean\n  ) => {\n    if (this.props.handleClick) {\n      this.props.handleClick(this.props.id, event, wasTouch);\n      event.cancelBubble = true;\n    }\n  };\n\n  private handleMouseDown = (event: any) => {\n    event.cancelBubble = true;\n  };\n\n  private handleTouchStart = (event: KonvaEventObject<TouchEvent>) => {\n    event.cancelBubble = true;\n    if (!!this.touchTimer) {\n      clearTimeout(this.touchTimer);\n      this.touchTimer = null;\n    }\n\n    this.touchTimer = setTimeout(() => {\n      this.handleContextMenu(\n        event as unknown as KonvaEventObject<PointerEvent>\n      );\n    }, 750);\n  };\n\n  private handleTouchMove = (event: KonvaEventObject<TouchEvent>) => {\n    if (!!this.touchTimer) {\n      clearTimeout(this.touchTimer);\n      this.touchTimer = null;\n    }\n  };\n\n  private handleTouchEnd = (event: KonvaEventObject<TouchEvent>) => {\n    if (!!this.touchTimer) {\n      clearTimeout(this.touchTimer);\n      this.touchTimer = null;\n    }\n  };\n\n  private handleMouseOver = () => {\n    if (this.props.handleHover) {\n      this.props.handleHover(this.props.id);\n    }\n  };\n\n  private handleMouseOut = () => {\n    if (this.props.handleHoverLeave) {\n      this.props.handleHoverLeave(this.props.id);\n    }\n  };\n}\n\nexport default Card;\n","import { Component } from \"react\";\nimport * as React from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { CardData } from \"./external-api/common-card-data\";\nimport { ICardData } from \"./features/cards-data/initialState\";\nimport { ICardStack } from \"./features/cards/initialState\";\nimport { AutocompleteHighlightChangeReason } from \"@material-ui/lab/useAutocomplete\";\ninterface IProps {\n  cardsDataEntities: ICardData;\n  card: ICardStack;\n  cardSelected: (jsonId: string) => void;\n  preview: (jsonId: string) => void;\n  clearPreview: () => void;\n}\n\nclass CardStackCardSelector extends Component<IProps> {\n  private cardsDataInStack: CardData[] = [];\n\n  constructor(props: IProps) {\n    super(props);\n    this.cardsDataInStack = props.card.cardStack.map((c) => {\n      return this.props.cardsDataEntities[c.jsonId];\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.clearPreview();\n  }\n\n  render() {\n    return (\n      <div onClick={this.cancelBubble} onKeyPress={this.cancelBubble}>\n        <Autocomplete\n          id=\"cardstack-card-selector-combobox\"\n          options={this.cardsDataInStack}\n          getOptionLabel={(option) => option.name || \"Unknown Card Name\"}\n          style={{ width: 300 }}\n          onChange={this.handleSelected}\n          onHighlightChange={this.handleHighlightChange}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Find Card...\" variant=\"outlined\" />\n          )}\n        />\n      </div>\n    );\n  }\n\n  private handleHighlightChange = (\n    _event: any,\n    option: CardData | null,\n    reason: AutocompleteHighlightChangeReason\n  ) => {\n    if (!option) {\n      this.props.clearPreview();\n    } else {\n      this.props.preview(option.code);\n    }\n  };\n\n  private handleSelected = (_event: any, value: CardData | null) => {\n    this.props.clearPreview();\n    if (!!value && !!this.props.cardSelected) {\n      this.props.cardSelected(value.code);\n    }\n  };\n\n  private cancelBubble = (event: React.SyntheticEvent) => {\n    event.stopPropagation();\n  };\n}\n\nexport default CardStackCardSelector;\n","import { connect } from \"react-redux\";\nimport CardStackCardSelector from \"./CardStackCardSelector\";\nimport { getCardsDataEntities } from \"./features/cards-data/cards-data.selectors\";\nimport {\n  clearMenuPreviewCardJsonId,\n  setMenuPreviewCardJsonId,\n} from \"./features/game/game.slice\";\n\nimport { RootState } from \"./store/rootReducer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    cardsDataEntities: getCardsDataEntities(state),\n  };\n};\n\nconst CardStackCardSelectorContainer = connect(mapStateToProps, {\n  preview: setMenuPreviewCardJsonId,\n  clearPreview: clearMenuPreviewCardJsonId,\n})(CardStackCardSelector);\n\nexport default CardStackCardSelectorContainer;\n","import MenuItem from \"@material-ui/core/MenuItem\";\nimport React from \"react\";\n\ninterface IProps {\n  label: string;\n  key?: string;\n  handleFile: (file: File) => void;\n}\n\nconst FileUploader = (props: IProps) => {\n  // Create a reference to the hidden file input element\n  const hiddenFileInput = React.useRef<HTMLInputElement>(null);\n\n  // Programatically click the hidden file input element\n  // when the Button component is clicked\n  const handleClick = (event: React.MouseEvent) => {\n    if (!!hiddenFileInput?.current) {\n      var evt = document.createEvent(\"MouseEvents\");\n      evt.initEvent(\"click\", true, false);\n      hiddenFileInput.current.dispatchEvent(evt);\n    }\n    event.stopPropagation();\n  };\n  // Call a function (passed as a prop from the parent component)\n  // to handle the user-selected file\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!!event.target.files && event.target.files.length > 0) {\n      const fileUploaded = event.target.files[0];\n      props.handleFile(fileUploaded);\n    }\n  };\n  return (\n    <>\n      <MenuItem onClick={handleClick}>{props.label}</MenuItem>\n      <input\n        type=\"file\"\n        ref={hiddenFileInput}\n        onChange={handleChange}\n        style={{ display: \"none\" }}\n      />\n    </>\n  );\n};\n\nexport default FileUploader;\n","import { Vector2d } from \"konva/lib/types\";\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport FileUploader from \"./FileUploader\";\n\nexport interface ContextMenuItem {\n  label: string;\n  action?: () => void;\n  fileLoadedAction?: (fileContents: string) => void;\n  children?: ContextMenuItem[];\n  fileUploader?: boolean;\n}\n\ninterface IProps {\n  position: Vector2d;\n  items: ContextMenuItem[];\n  contextItemClicked?: (item: ContextMenuItem) => void;\n  hideContextMenu: () => void;\n}\n\ninterface IState {\n  menuOpen: boolean;\n}\n\nconst isTargetFileInput = (target: EventTarget) => {\n  const targetAsInput = target as HTMLInputElement;\n  return !!targetAsInput?.files;\n};\n\nclass ContextMenu extends Component<IProps, IState> {\n  private nestedRef: any;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      menuOpen: true,\n    };\n  }\n\n  render() {\n    return (\n      <div\n        id=\"context-menu-layer\"\n        onContextMenu={this.preventDefault}\n        onClick={(event) => {\n          if (!isTargetFileInput(event.target)) {\n            this.props.hideContextMenu();\n          }\n        }}\n      >\n        <Menu\n          keepMounted\n          open={this.state.menuOpen}\n          onClose={this.handleMenuClosed}\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            top: this.props.position.y + 8,\n            left: this.props.position.x + 8,\n          }}\n        >\n          {this.props.items.map((i, index) => this.renderMenuItem(i, index))}\n        </Menu>\n      </div>\n    );\n  }\n\n  private renderMenuItem = (i: ContextMenuItem, index: number) => {\n    if (!!i.children) {\n      return (\n        <NestedMenuItem\n          ref={(val) => {\n            this.nestedRef = val;\n          }}\n          key={`contextMenu-item-${index}`}\n          parentMenuOpen={this.state.menuOpen}\n          label={i.label}\n          onClick={(event) => {\n            if (!!this.nestedRef) {\n              event.stopPropagation();\n              // This is a hack to force the nested menu to open on touch devices.\n              // the `NestedMenuItem` library doesn't correctly support touch events, only hover\n              this.nestedRef.parentElement.focus();\n            }\n          }}\n        >\n          {i.children.map((nestedI, nestedIndex) => {\n            return this.renderMenuItem(nestedI, index * 1000 + nestedIndex);\n          })}\n        </NestedMenuItem>\n      );\n    } else if (!!i.fileUploader) {\n      return (\n        <FileUploader\n          label={i.label}\n          key={`contextMenu-item-${index}`}\n          handleFile={(file) => {\n            // setting up the reader\n            const reader = new FileReader();\n            reader.readAsText(file, \"UTF-8\");\n\n            // here we tell the reader what to do when it's done reading...\n            reader.onload = (readerEvent) => {\n              const content: string = readerEvent.target?.result as string; // this is the content!\n              if (!!i.fileLoadedAction) {\n                i.fileLoadedAction(content);\n              }\n              this.props.hideContextMenu();\n            };\n          }}\n        ></FileUploader>\n      );\n    } else {\n      return (\n        <MenuItem\n          key={`contextMenu-item-${index}`}\n          onClick={this.handleContextItemClicked(i)}\n        >\n          {i.label}\n        </MenuItem>\n      );\n    }\n  };\n\n  private handleMenuClosed = () => {\n    this.setState({\n      menuOpen: false,\n    });\n    this.props.hideContextMenu();\n  };\n  private preventDefault = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n  };\n\n  private handleContextItemClicked = (item: ContextMenuItem) => () => {\n    if (!!item.action) {\n      item.action();\n    }\n    if (!!this.props.contextItemClicked) {\n      this.props.contextItemClicked(this.props.items[0]);\n    }\n    if (!!item.action) {\n      if (!!this.nestedRef) {\n        this.nestedRef.blur();\n      }\n      this.props.hideContextMenu();\n    }\n  };\n}\n\nexport default ContextMenu;\n","import { Component } from \"react\";\nimport * as React from \"react\";\nimport { Vector2d } from \"konva/lib/types\";\nimport { Group, Rect, Text } from \"react-konva\";\nimport { KonvaEventObject } from \"konva/lib/Node\";\nimport { PlayerColor } from \"./constants/app-constants\";\n\ninterface IProps {\n  id: string;\n  pos: Vector2d;\n  value: number;\n  color: PlayerColor;\n  updateCounterValueBy: (amount: number) => void;\n  handleContextMenu: (event: KonvaEventObject<PointerEvent>) => void;\n  onDragEnd: (event: KonvaEventObject<DragEvent>) => void;\n}\n\nclass Counter extends Component<IProps> {\n  private touchTimer: any = null;\n\n  render() {\n    return (\n      <Group\n        x={this.props.pos.x}\n        y={this.props.pos.y}\n        draggable={true}\n        onClick={this.cancelBubble}\n        onContextMenu={this.props.handleContextMenu}\n        onDragEnd={this.props.onDragEnd}\n        onTouchStart={this.handleTouchStart}\n        onMouseDown={this.cancelBubble}\n        onTouchMove={this.handleTouchMove}\n        onTouchEnd={this.handleTouchEnd}\n      >\n        <Rect\n          cornerRadius={30}\n          width={200}\n          height={100}\n          fill={this.props.color}\n        ></Rect>\n        <Text\n          width={200}\n          height={100}\n          fontSize={36}\n          text={`${this.props.value}`}\n          align={\"center\"}\n          verticalAlign={\"middle\"}\n        ></Text>\n        <Text\n          x={10}\n          y={25}\n          width={50}\n          height={50}\n          fontSize={36}\n          text={`-`}\n          align={\"center\"}\n          verticalAlign={\"middle\"}\n          onClick={this.handleDecrement}\n          onTap={this.handleDecrement}\n        ></Text>\n        <Text\n          x={140}\n          y={25}\n          width={50}\n          height={50}\n          fontSize={36}\n          text={`+`}\n          align={\"center\"}\n          verticalAlign={\"middle\"}\n          onClick={this.handleIncrement}\n          onTap={this.handleIncrement}\n        ></Text>\n      </Group>\n    );\n  }\n\n  private cancelBubble = (event: KonvaEventObject<MouseEvent>) => {\n    event.cancelBubble = true;\n  };\n\n  private handleDecrement = () => {\n    this.props.updateCounterValueBy(-1);\n  };\n\n  private handleIncrement = () => {\n    this.props.updateCounterValueBy(1);\n  };\n\n  private handleTouchStart = (event: KonvaEventObject<TouchEvent>) => {\n    event.cancelBubble = true;\n    if (!!this.touchTimer) {\n      clearTimeout(this.touchTimer);\n      this.touchTimer = null;\n    }\n\n    this.touchTimer = setTimeout(() => {\n      this.props.handleContextMenu(\n        event as unknown as KonvaEventObject<PointerEvent>\n      );\n    }, 750);\n  };\n\n  private handleTouchMove = (event: KonvaEventObject<TouchEvent>) => {\n    if (!!this.touchTimer) {\n      clearTimeout(this.touchTimer);\n      this.touchTimer = null;\n    }\n  };\n\n  private handleTouchEnd = (event: KonvaEventObject<TouchEvent>) => {\n    if (!!this.touchTimer) {\n      clearTimeout(this.touchTimer);\n      this.touchTimer = null;\n    }\n  };\n}\n\nexport default Counter;\n","import { Component } from \"react\";\nimport * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\ninterface IProps {\n  loadDeckId: (id: number) => void;\n}\n\nclass DeckLoader extends Component<IProps> {\n  inputValue: string = \"\";\n\n  private focusInputField = (input: any) => {\n    if (input) {\n      setTimeout(() => {\n        input.querySelector(\"input\").focus();\n      }, 100);\n    }\n  };\n\n  render() {\n    return (\n      <div\n        onClick={this.cancelBubble}\n        onKeyPress={this.cancelBubble}\n        className=\"token-field-row\"\n      >\n        <TextField\n          ref={this.focusInputField}\n          onKeyPress={this.handleKeyPress}\n          onClick={this.cancelBubble}\n          onChange={(event) => {\n            this.inputValue = event.target.value;\n          }}\n          type=\"number\"\n          variant=\"outlined\"\n        ></TextField>{\" \"}\n      </div>\n    );\n  }\n\n  private cancelBubble = (event: React.SyntheticEvent) => {\n    event.stopPropagation();\n  };\n\n  private handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key.toLocaleLowerCase() === \"enter\") {\n      this.props.loadDeckId(+this.inputValue);\n    }\n  };\n}\n\nexport default DeckLoader;\n","import { Component } from \"react\";\nimport * as React from \"react\";\nimport { IEncounterEntity } from \"./features/cards-data/cards-data.selectors\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { GamePropertiesMap } from \"./constants/game-type-properties-mapping\";\nimport { GameType } from \"./constants/app-constants\";\ninterface IProps {\n  currentGameType: GameType;\n  encounterData: IEncounterEntity[];\n  loadCards: (cards: string[][]) => void;\n}\n\nclass EncounterLoader extends Component<IProps> {\n  render() {\n    return (\n      <div onClick={this.cancelBubble} onKeyPress={this.cancelBubble}>\n        <Autocomplete\n          id=\"encounter-loader-combobox\"\n          options={this.props.encounterData || []}\n          getOptionLabel={(option) => option.setData.name}\n          style={{ width: 300 }}\n          onChange={this.handleSelected}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label={\n                GamePropertiesMap[this.props.currentGameType].encounterUiName\n              }\n              variant=\"outlined\"\n            />\n          )}\n        />\n      </div>\n    );\n  }\n\n  private handleSelected = (_event: any, value: IEncounterEntity | null) => {\n    if (!!value) {\n      let questCards: string[] = [];\n      let encounterCards: string[] = [];\n      const filteredCards = value.cards\n        // We don't want cards that show up as another card's 'back_link' to be loaded as separate cards\n        .filter((c) => !value.cards.some((oc) => oc.backLink === c.code));\n\n      filteredCards\n        .filter((c) => c.typeCode.toLocaleLowerCase() === \"quest\")\n        .forEach((c) => {\n          questCards = questCards.concat(\n            Array.from({ length: c.quantity }).map((_i) => c.code)\n          );\n        });\n\n      filteredCards\n        .filter((c) => c.typeCode.toLocaleLowerCase() !== \"quest\")\n        .forEach((c) => {\n          encounterCards = encounterCards.concat(\n            Array.from({ length: c.quantity }).map((_i) => c.code)\n          );\n        });\n      let totalCards = [encounterCards];\n      if (questCards.length > 0) {\n        totalCards = [questCards].concat(totalCards);\n      }\n\n      this.props.loadCards(totalCards);\n    }\n  };\n\n  private cancelBubble = (event: React.SyntheticEvent) => {\n    event.stopPropagation();\n  };\n}\n\nexport default EncounterLoader;\n","import { connect } from \"react-redux\";\nimport { GameType } from \"./constants/app-constants\";\nimport EncounterLoader from \"./EncounterLoader\";\nimport {\n  getCardsDataEncounterEntitiesBySetCode,\n  getCardsDataSetDataAsEncounterEntities,\n} from \"./features/cards-data/cards-data.selectors\";\n\nimport { RootState } from \"./store/rootReducer\";\n\ninterface IProps {\n  currentGameType: GameType;\n}\n\nconst mapStateToProps = (state: RootState, ownProps: IProps) => {\n  return {\n    encounterData:\n      ownProps.currentGameType === GameType.LordOfTheRingsLivingCardGame\n        ? getCardsDataSetDataAsEncounterEntities(state)\n        : getCardsDataEncounterEntitiesBySetCode(state),\n  };\n};\n\nconst EncounterLoaderContainer = connect(mapStateToProps, {})(EncounterLoader);\n\nexport default EncounterLoaderContainer;\n","import { Component } from \"react\";\nimport * as React from \"react\";\nimport { Rect } from \"react-konva\";\nimport { Vector2d } from \"konva/lib/types\";\nimport { KonvaEventObject } from \"konva/lib/Node\";\nimport { GameType } from \"./constants/app-constants\";\n\ninterface IProps {\n  currentGameType: GameType;\n  pos: Vector2d;\n  updatePos: (newPos: Vector2d) => void;\n}\n\ninterface IState {\n  img: HTMLImageElement | null;\n}\n\nclass FirstPlayerToken extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      img: null,\n    };\n  }\n\n  public componentDidMount() {\n    const image = new Image();\n    image.onload = () => {\n      this.setState({\n        img: image,\n      });\n    };\n    image.src =\n      process.env.PUBLIC_URL +\n      \"/images/table/first_player_token_\" +\n      this.props.currentGameType +\n      \".png\";\n  }\n\n  render() {\n    return (\n      <Rect\n        x={this.props.pos.x}\n        y={this.props.pos.y}\n        draggable={true}\n        onTouchStart={this.cancelBubble}\n        onMouseDown={this.cancelBubble}\n        onDragEnd={this.handleDragEnd}\n        scale={{\n          x: 160 / (this.state.img?.naturalWidth ?? 1),\n          y: 160 / (this.state.img?.naturalWidth ?? 1),\n        }}\n        width={this.state.img?.naturalWidth ?? 0}\n        height={this.state.img?.naturalHeight ?? 0}\n        fillPatternImage={this.state.img ?? undefined}\n      ></Rect>\n    );\n  }\n\n  private cancelBubble = (\n    e: KonvaEventObject<MouseEvent> | KonvaEventObject<TouchEvent>\n  ) => {\n    e.cancelBubble = true;\n  };\n\n  private handleDragEnd = (event: KonvaEventObject<DragEvent>) => {\n    this.props.updatePos({\n      x: event.target.x(),\n      y: event.target.y(),\n    });\n  };\n}\n\nexport default FirstPlayerToken;\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../store/rootReducer\";\n\nexport const getCounters = (state: RootState) =>\n  state.liveState.present.counters;\n\nexport const getCurrentCounters = createSelector(getCounters, (counters) => {\n  return counters.counters;\n});\n\nexport const getFirstPlayerTokenPos = createSelector(\n  getCounters,\n  (counters) => counters.firstPlayerCounterPosition\n);\n","import { connect } from \"react-redux\";\nimport FirstPlayerToken from \"./FirstPlayerToken\";\nimport { moveFirstPlayerCounter } from \"./features/counters/counters.slice\";\nimport { RootState } from \"./store/rootReducer\";\nimport { getFirstPlayerTokenPos } from \"./features/counters/counters.selectors\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    pos: getFirstPlayerTokenPos(state),\n  };\n};\n\nconst FirstPlayerTokenContainer = connect(mapStateToProps, {\n  updatePos: moveFirstPlayerCounter,\n})(FirstPlayerToken);\n\nexport default FirstPlayerTokenContainer;\n","import { Component } from \"react\";\nimport * as React from \"react\";\ninterface IProps {\n  connect: (peerId: string) => void;\n}\n\nclass PeerConnector extends Component<IProps> {\n  public inputRef: HTMLInputElement | null = null;\n\n  render() {\n    return (\n      <div onClick={this.cancelBubble} onKeyPress={this.cancelBubble}>\n        <input\n          ref={(ref) => {\n            if (!ref) return;\n            this.inputRef = ref;\n          }}\n        ></input>\n        <button onClick={this.connect}>Connect</button>\n      </div>\n    );\n  }\n\n  private connect = (_event: any) => {\n    console.log(\"connecting with peer id \" + this.inputRef?.value);\n\n    this.props.connect(this.inputRef?.value || \"\");\n  };\n\n  private cancelBubble = (event: React.SyntheticEvent) => {\n    event.stopPropagation();\n  };\n}\n\nexport default PeerConnector;\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../store/rootReducer\";\nimport { ICardStack } from \"../cards/initialState\";\n\nexport const getGame = (state: RootState) => state.game;\n\nexport const getCurrentZoom = createSelector(getGame, (game) => {\n  return game.stageZoom;\n});\n\nexport const getPlayerColors = createSelector(getGame, (game) => {\n  return game.playerColors;\n});\n\nexport const getPeerId = createSelector(getGame, (game) => game.peerId);\n\nexport const getActiveGameType = createSelector(\n  getGame,\n  (game) => game.activeGameType\n);\n\nexport const getRadialMenuPosition = createSelector(\n  getGame,\n  (game) => game.radialMenuPosition\n);\n\nexport const getPreviewCard = createSelector(\n  getGame,\n  (game) => game.previewCard\n);\n\nexport const getMenuPreviewCard = createSelector(getGame, (game) => {\n  if (!game.menuPreviewCardJsonId) return null;\n\n  const menuPreviewCard: ICardStack = {\n    id: \"menu-preview-card\",\n    controlledBy: \"\",\n    exhausted: false,\n    faceup: true,\n    fill: \"gray\",\n    x: 0,\n    y: 0,\n    statusTokens: {\n      stunned: false,\n      confused: false,\n      tough: false,\n    },\n    counterTokens: {\n      damage: 0,\n      threat: 0,\n      generic: 0,\n    },\n    selected: false,\n    dragging: false,\n    shuffling: false,\n    cardStack: [{ jsonId: game.menuPreviewCardJsonId }],\n    modifiers: {},\n  };\n\n  return menuPreviewCard;\n});\n","import { Vector2d } from \"konva/lib/types\";\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport \"./TopLayer.scss\";\n\ninterface IProps {\n  trasparentBackground?: boolean;\n  offsetContent?: boolean;\n  position: Vector2d;\n  completed: () => void;\n}\n\nclass TopLayer extends Component<IProps> {\n  render() {\n    const offset = this.props.offsetContent ? 8 : 0;\n    const containerStyle: React.CSSProperties = {\n      top: `${this.props.position.y + offset}px`,\n      left: `${this.props.position.x + offset}px`,\n    };\n\n    if (!this.props.trasparentBackground) {\n      containerStyle.backgroundColor = \"white\";\n    }\n\n    return (\n      <div\n        id=\"top-layer\"\n        onClick={this.props.completed}\n        onContextMenu={this.preventDefault}\n      >\n        <div\n          className=\"top-layer-content-wrapper\"\n          style={containerStyle}\n          onContextMenu={this.preventDefault}\n          onClick={this.handleClick}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n\n  private handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation();\n    this.props.completed();\n  };\n\n  private preventDefault = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n  };\n}\n\nexport default TopLayer;\n","import { myPeerRef } from \"../constants/app-constants\";\nimport { StatusTokenType } from \"../constants/card-constants\";\nimport { ICardStack } from \"../features/cards/initialState\";\n\nexport const anyCardStackHasStatus = (\n  status: StatusTokenType,\n  stacks: ICardStack[]\n) => {\n  return stacks.length > 0 && stacks.some((s) => s.statusTokens[status]);\n};\n\nexport const getMySelectedCards = (stacks: ICardStack[]) => {\n  return stacks.filter((c) => c.selected && c.controlledBy === myPeerRef);\n};\n","import { connect } from \"react-redux\";\nimport { myPeerRef } from \"./constants/app-constants\";\nimport { cardsSelectedWithPeerRef } from \"./features/cards/cards.selectors\";\nimport {\n  exhaustCard,\n  flipCards,\n  toggleToken,\n  adjustCounterToken,\n  clearCardTokens,\n  adjustModifier,\n} from \"./features/cards/cards.slice\";\nimport {\n  shuffleStack,\n  drawCardsOutOfCardStack,\n} from \"./features/cards/cards.thunks\";\nimport { getGame, getRadialMenuPosition } from \"./features/game/game.selectors\";\nimport { hideRadialMenu } from \"./features/game/game.slice\";\nimport RadialMenu from \"./RadialMenu\";\nimport { RootState } from \"./store/rootReducer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    selectedCardStacks: cardsSelectedWithPeerRef(myPeerRef)(state),\n    currentGameType: getGame(state).activeGameType,\n    position: getRadialMenuPosition(state),\n  };\n};\n\nconst RadialMenuContainer = connect(mapStateToProps, {\n  flipCards,\n  exhaustCard,\n  toggleToken,\n  shuffleStack,\n  adjustCounterToken,\n  hideRadialMenu,\n  clearCardTokens,\n  drawCardsOutOfCardStack,\n  adjustModifier,\n})(RadialMenu);\n\nexport default RadialMenuContainer;\n","import * as React from \"react\";\nimport { Component } from \"react\";\nimport { CounterTokenType } from \"./constants/card-constants\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\ninterface IProps {\n  id: string;\n  tokenType: CounterTokenType;\n  updated: (payload: {\n    id: string;\n    tokenType: CounterTokenType;\n    value: number;\n  }) => void;\n}\n\nclass TokenValueModifier extends Component<IProps> {\n  inputValue: string = \"0\";\n\n  private focusInputField = (input: any) => {\n    if (input) {\n      setTimeout(() => {\n        input.querySelector(\"input\").focus();\n      }, 100);\n    }\n  };\n\n  render() {\n    return (\n      <div\n        onClick={this.cancelBubble}\n        onKeyPress={this.cancelBubble}\n        className=\"token-field-row\"\n      >\n        <TextField\n          ref={this.focusInputField}\n          onKeyPress={this.handleKeyPress}\n          variant=\"outlined\"\n          type=\"number\"\n          onChange={(event) => {\n            this.inputValue = event.target.value;\n          }}\n        ></TextField>\n        <Button\n          onClick={this.handleClick}\n          style={{ height: \"56px\", marginLeft: \"5px\" }}\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          Set\n        </Button>\n      </div>\n    );\n  }\n\n  private handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const code = event.key.toLocaleLowerCase();\n    if (code === \"enter\") {\n      this.complete(+this.inputValue);\n    }\n  };\n\n  private handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    this.complete(+this.inputValue);\n  };\n\n  private complete = (newValue: number) => {\n    this.props.updated({\n      id: this.props.id,\n      tokenType: this.props.tokenType,\n      value: newValue,\n    });\n  };\n\n  // private preventDefault = (\n  //   event: React.MouseEvent<HTMLElement, MouseEvent>\n  // ) => {\n  //   event.preventDefault();\n  // };\n\n  private cancelBubble = (event: React.SyntheticEvent) => {\n    event.stopPropagation();\n  };\n}\n\nexport default TokenValueModifier;\n","import IconButton from \"@material-ui/core/IconButton\";\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport \"./TouchMenu.scss\";\n//Icons\nimport OpenWithIcon from \"@material-ui/icons/OpenWith\";\nimport SelectAllIcon from \"@material-ui/icons/SelectAll\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\n\nimport { GameType } from \"./constants/app-constants\";\nimport { CounterTokenType, StatusTokenType } from \"./constants/card-constants\";\nimport { Vector2d } from \"konva/lib/types\";\n\ninterface IProps {\n  anyCardsSelected: boolean;\n  currentGameType: GameType | null;\n  panMode: boolean;\n  multiselectMode: boolean;\n  togglePanMode: () => void;\n  toggleMultiselectMode: () => void;\n  flipCards: () => void;\n  exhaustCard: (id?: string) => void;\n  toggleToken: (payload: {\n    id?: string;\n    tokenType: StatusTokenType;\n    value?: boolean;\n  }) => void;\n  shuffleStack: (id?: string) => void;\n  adjustCounterToken: (payload: {\n    id?: string;\n    tokenType: CounterTokenType;\n    delta?: number;\n    value?: number;\n  }) => void;\n  showRadialMenuAtPosition: (payload: Vector2d) => void;\n  undo: () => void;\n  redo: () => void;\n}\nclass TouchMenu extends Component<IProps> {\n  render() {\n    return (\n      <div className=\"touch-menu\">\n        <IconButton\n          className={this.props.panMode ? \"toggle-on\" : \"\"}\n          onClick={() => {\n            this.props.togglePanMode();\n          }}\n        >\n          <OpenWithIcon fontSize=\"large\" />\n        </IconButton>\n        <IconButton\n          className={this.props.multiselectMode ? \"toggle-on\" : \"\"}\n          onClick={() => {\n            this.props.toggleMultiselectMode();\n          }}\n        >\n          <SelectAllIcon fontSize=\"large\" />\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            if (this.props.anyCardsSelected) {\n              this.props.showRadialMenuAtPosition({ x: 0, y: 0 });\n            }\n          }}\n        >\n          <InfoIcon fontSize=\"large\" />\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            if (this.props.undo) {\n              this.props.undo();\n            }\n          }}\n        >\n          <UndoIcon fontSize=\"large\" />\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            if (this.props.redo) {\n              this.props.redo();\n            }\n          }}\n        >\n          <RedoIcon fontSize=\"large\" />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default TouchMenu;\n","import { connect } from \"react-redux\";\nimport {\n  anyCardsSelectedWithPeerRef,\n  getMultiselectMode,\n  getPanMode,\n} from \"./features/cards/cards.selectors\";\nimport {\n  exhaustCard,\n  flipCards,\n  togglePanMode,\n  toggleMultiselectMode,\n  toggleToken,\n  adjustCounterToken,\n} from \"./features/cards/cards.slice\";\nimport { shuffleStack } from \"./features/cards/cards.thunks\";\nimport { getGame } from \"./features/game/game.selectors\";\nimport { RootState } from \"./store/rootReducer\";\nimport TouchMenu from \"./TouchMenu\";\nimport { showRadialMenuAtPosition } from \"./features/game/game.slice\";\nimport { myPeerRef } from \"./constants/app-constants\";\nimport { ActionCreators } from \"redux-undo\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    anyCardsSelected: anyCardsSelectedWithPeerRef(myPeerRef)(state),\n    currentGameType: getGame(state).activeGameType,\n    panMode: getPanMode(state),\n    multiselectMode: getMultiselectMode(state),\n  };\n};\n\nconst TouchMenuContainer = connect(mapStateToProps, {\n  togglePanMode,\n  toggleMultiselectMode,\n  flipCards,\n  exhaustCard,\n  toggleToken,\n  shuffleStack,\n  adjustCounterToken,\n  showRadialMenuAtPosition,\n  undo: ActionCreators.undo,\n  redo: ActionCreators.redo,\n})(TouchMenu);\n\nexport default TouchMenuContainer;\n","export const copyToClipboard = (text: string) => {\n  navigator.clipboard.writeText(text);\n};\n\nexport const getBaseUrl = (): string => {\n  return `${window.location.origin}${window.location.pathname}`;\n};\n\nexport const generateRemoteGameUrl = (peerId: string) => {\n  return `${window.location.origin}${window.location.pathname}?remote=${peerId}`;\n};\n","import * as Intersects from \"intersects\";\nimport Konva from \"konva\";\nimport { KonvaEventObject } from \"konva/lib/Node\";\nimport { Vector2d } from \"konva/lib/types\";\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport { Layer, Rect, Stage } from \"react-konva\";\nimport { Provider, ReactReduxContext } from \"react-redux\";\nimport Card, { HORIZONTAL_TYPE_CODES } from \"./Card\";\nimport CardStackCardSelectorContainer from \"./CardStackCardSelectorContainer\";\nimport {\n  GameType,\n  myPeerRef,\n  PlayerColor,\n  possibleColors,\n} from \"./constants/app-constants\";\nimport {\n  CounterTokenType,\n  StatusTokenType,\n  cardConstants,\n} from \"./constants/card-constants\";\nimport { MISSING_CARD_IMAGE_MAP } from \"./constants/card-missing-image-map\";\nimport { CARD_PACK_REMAPPING } from \"./constants/card-pack-mapping\";\nimport { GamePropertiesMap } from \"./constants/game-type-properties-mapping\";\nimport ContextMenu, { ContextMenuItem } from \"./ContextMenu\";\nimport Counter from \"./Counter\";\nimport DeckLoader from \"./DeckLoader\";\nimport EncounterLoaderContainer from \"./EncounterLoaderContainer\";\nimport { CardData } from \"./external-api/common-card-data\";\nimport { ICardData } from \"./features/cards-data/initialState\";\nimport { DrawCardsOutOfCardStackPayload } from \"./features/cards/cards.thunks\";\nimport { ICardsState, ICardStack } from \"./features/cards/initialState\";\nimport { ICounter } from \"./features/counters/initialState\";\nimport { IGameState } from \"./features/game/initialState\";\nimport FirstPlayerTokenContainer from \"./FirstPlayerTokenContainer\";\nimport \"./Game.scss\";\nimport PeerConnector from \"./PeerConnector\";\nimport RadialMenuContainer from \"./RadialMenuContainer\";\nimport TokenValueModifier from \"./TokenValueModifier\";\nimport TopLayer from \"./TopLayer\";\nimport TouchMenuContainer from \"./TouchMenuContainer\";\nimport {\n  anyCardStackHasStatus,\n  getMySelectedCards,\n} from \"./utilities/card-utils\";\nimport { getCenter, getDistance } from \"./utilities/geo\";\nimport { copyToClipboard, generateRemoteGameUrl } from \"./utilities/text-utils\";\n\nconst SCALE_BY = 1.02;\n\ninterface IProps {\n  currentGameType: GameType;\n  cards: ICardsState;\n  cardsData: ICardData;\n  gameState: IGameState;\n  panMode: boolean;\n  multiselectMode: boolean;\n  playerColors: { [key: string]: PlayerColor };\n  menuPreviewCard: ICardStack | null;\n  cardMove: (info: { id: string; dx: number; dy: number }) => void;\n  endCardMove: (id: string) => void;\n  exhaustCard: (id?: string) => void;\n  selectCard: (payload: { id: string; unselectOtherCards: boolean }) => void;\n  unselectCard: (id: string) => void;\n  toggleSelectCard: (id: string) => void;\n  startCardMove: (payload: { id: string; splitTopCard: boolean }) => void;\n  unselectAllCards: (payload?: any) => void;\n  selectMultipleCards: (cards: {\n    ids: string[];\n    unselectOtherCards?: boolean;\n  }) => void;\n  setPreviewCardId: (id: string) => void;\n  clearPreviewCard: () => void;\n  togglePanMode: () => void;\n  flipCards: () => void;\n  loadCardsData: () => void;\n  allJsonData: (payload: any) => void;\n  shuffleStack: (id?: string) => void;\n  fetchDecklistById: (payload: {\n    gameType: GameType;\n    decklistId: number;\n    position: Vector2d;\n  }) => void;\n  updateZoom: (zoom: Vector2d) => void;\n  updatePosition: (pos: Vector2d) => void;\n  resetApp: () => void;\n  addCardStack: (payload: {\n    cardJsonIds: string[];\n    position: Vector2d;\n  }) => void;\n  toggleToken: (payload: {\n    id?: string;\n    tokenType: StatusTokenType;\n    value?: boolean;\n  }) => void;\n  adjustCounterToken: (payload: {\n    id?: string;\n    tokenType: CounterTokenType;\n    delta?: number;\n    value?: number;\n  }) => void;\n  pullCardOutOfCardStack: (payload: {\n    cardStackId: string;\n    jsonId: string;\n    pos: Vector2d;\n  }) => void;\n  addNewCounter: (pos: Vector2d) => void;\n  updateCounterValue: (payload: { id: string; delta: number }) => void;\n  removeCounter: (id: string) => void;\n  moveCounter: (payload: { id: string; newPos: Vector2d }) => void;\n  connectToRemoteGame: (peerId: string) => void;\n  undo: () => void;\n  redo: () => void;\n  counters: ICounter[];\n  requestResync: () => void;\n  peerId: string;\n  dropTargetCardsById: {\n    [key: string]: { ownerRef: string; card: ICardStack | null };\n  };\n  drawCardsOutOfCardStack: (payload: DrawCardsOutOfCardStackPayload) => void;\n  quitGame: () => void;\n  updateCounterColor: (payload: { id: string; newColor: PlayerColor }) => void;\n  createDeckFromTxt: (payload: {\n    gameType: GameType;\n    position: Vector2d;\n    txtContents: string;\n  }) => void;\n  generateGameStateUrl: () => void;\n  showRadialMenuAtPosition: (payload: Vector2d) => void;\n  adjustModifier: (payload: {\n    id?: string;\n    modifierId: string;\n    delta?: number;\n    value?: number;\n  }) => void;\n  clearAllModifiers: (payload: { id?: string }) => void;\n}\n\ninterface IState {\n  drewASelectionRect: boolean;\n  selectRect: {\n    height: number;\n    width: number;\n  };\n  selectStartPos: {\n    x: number;\n    y: number;\n  };\n  selecting: boolean;\n  showContextMenu: boolean;\n  contextMenuPosition: Vector2d | null;\n  contextMenuItems: ContextMenuItem[];\n  showDeckImporter: boolean;\n  deckImporterPosition: Vector2d | null;\n  showEncounterImporter: boolean;\n  encounterImporterPosition: Vector2d | null;\n  showCardSearch: boolean;\n  cardSearchPosition: Vector2d | null;\n  cardStackForSearching: ICardStack | null;\n  showPeerConnector: boolean;\n  peerConnectorPosition: Vector2d | null;\n  showTokenValueModifier: boolean;\n  tokenValueModifierProps: { id: string; tokenType: CounterTokenType } | null;\n  tokenValueModifierPosition: Vector2d | null;\n  playmatImage: HTMLImageElement | null;\n  playmatImageLoaded: boolean;\n  previewCardModal: boolean;\n  stageWidth: number;\n  stageHeight: number;\n}\nclass Game extends Component<IProps, IState> {\n  public stage: Konva.Stage | null = null;\n\n  private touchTimer: any = null;\n  private doubleTapTimer: any = null;\n\n  private lastCenter: Vector2d | null = null;\n  private lastDist: number = 0;\n\n  constructor(props: IProps) {\n    super(props);\n\n    if (!!Konva) {\n      Konva.hitOnDragEnabled = true;\n    }\n\n    this.state = {\n      drewASelectionRect: false,\n      selectRect: {\n        height: 0,\n        width: 0,\n      },\n      selectStartPos: {\n        x: 0,\n        y: 0,\n      },\n      selecting: false,\n      showContextMenu: false,\n      contextMenuPosition: null,\n      contextMenuItems: [],\n      showDeckImporter: false,\n      deckImporterPosition: null,\n      showEncounterImporter: false,\n      encounterImporterPosition: null,\n      showCardSearch: false,\n      cardSearchPosition: null,\n      cardStackForSearching: null,\n      showPeerConnector: false,\n      peerConnectorPosition: null,\n      showTokenValueModifier: false,\n      tokenValueModifierProps: null,\n      tokenValueModifierPosition: null,\n      playmatImage: null,\n      playmatImageLoaded: false,\n      previewCardModal: false,\n      stageWidth: window.innerWidth,\n      stageHeight: window.innerHeight,\n    };\n  }\n\n  public componentDidMount() {\n    const image = new Image();\n    image.onload = () => {\n      this.setState({\n        playmatImage: image,\n        playmatImageLoaded: true,\n      });\n    };\n\n    image.onerror = (e) => {\n      console.error(e);\n    };\n    image.src =\n      GamePropertiesMap[this.props.currentGameType].backgroundImageLocation;\n    this.props.loadCardsData();\n    this.props.allJsonData(\"\");\n\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  public componentWillUnmount = () => {\n    window.removeEventListener(\"resize\", this.handleResize);\n  };\n\n  public render() {\n    // TODO: This feels like a bad hack. I bet all the\n    //       swallowing of click events is keeping\n    //       focus from behaving 'normally' and doing\n    //       the expected thing with focus. But there are\n    //       a lot of things that don't work quite right\n    //       if the body has focus, so we're going to\n    //       force the game area to have focus if it\n    //       lost it\n    if (document.activeElement === document.body) {\n      // setTimeout so we don't manually change the dom while rendering\n      setTimeout(() => {\n        const el = document.querySelector(\".play-area\") as HTMLElement;\n        el?.focus();\n      }, 0);\n    }\n    // END HACK\n\n    const staticCards = this.props.cards.cards\n      .filter((card) => !card.dragging)\n      .map((card) => {\n        return (\n          <Card\n            currentGameType={this.props.currentGameType}\n            code={this.getCardCode(card)}\n            name={this.getCardName(card)}\n            selectedColor={\n              this.props.playerColors[card.controlledBy] ?? \"black\"\n            }\n            controlledBy={card.controlledBy}\n            key={card.id}\n            id={card.id}\n            x={card.x}\n            y={card.y}\n            exhausted={card.exhausted}\n            fill={card.fill}\n            selected={card.selected}\n            dropTargetColor={\n              this.props.playerColors[\n                this.props.dropTargetCardsById[card.id]?.ownerRef\n              ] ?? \"\"\n            }\n            dragging={card.dragging}\n            shuffling={card.shuffling}\n            handleDragStart={this.handleCardDragStart}\n            handleDragMove={this.props.cardMove}\n            handleDragEnd={this.props.endCardMove}\n            handleDoubleClick={this.handleSelectAndExhaust}\n            handleDoubleTap={this.showOrToggleModalPreviewCard}\n            handleClick={this.handleCardClick(card)}\n            handleHover={this.props.setPreviewCardId}\n            handleHoverLeave={this.props.clearPreviewCard}\n            handleContextMenu={this.handleCardContextMenu}\n            imgUrls={this.getImgUrls(card)}\n            typeCode={this.getCardType(card)}\n            faceup={card.faceup}\n            numCardsInStack={card.cardStack.length}\n            cardState={{\n              stunned: card.statusTokens.stunned,\n              confused: card.statusTokens.confused,\n              tough: card.statusTokens.tough,\n              tokens: { damage: 0, threat: 0, generic: 0 },\n            }}\n          />\n        );\n      });\n\n    const ghostCards = this.props.cards.ghostCards.map((card) => {\n      return (\n        <Card\n          currentGameType={this.props.currentGameType}\n          name={this.getCardName(card)}\n          code={this.getCardCode(card)}\n          selectedColor={this.props.playerColors[card.controlledBy] ?? \"black\"}\n          controlledBy={card.controlledBy}\n          key={`ghost${card.id}`}\n          id={card.id}\n          x={card.x}\n          y={card.y}\n          exhausted={card.exhausted}\n          fill={card.fill}\n          selected={false}\n          dragging={false}\n          shuffling={false}\n          imgUrls={this.getImgUrls(card)}\n          typeCode={this.getCardType(card)}\n          faceup={card.faceup}\n          isGhost={true}\n        />\n      );\n    });\n\n    const movingCards = this.props.cards.cards\n      .filter((card) => card.dragging)\n      .map((card) => {\n        return (\n          <Card\n            currentGameType={this.props.currentGameType}\n            name={this.getCardName(card)}\n            code={this.getCardCode(card)}\n            selectedColor={\n              this.props.playerColors[card.controlledBy] ?? \"black\"\n            }\n            controlledBy={card.controlledBy}\n            key={card.id}\n            id={card.id}\n            x={card.x}\n            y={card.y}\n            exhausted={card.exhausted}\n            fill={card.fill}\n            selected={card.selected}\n            dragging={card.dragging}\n            shuffling={card.shuffling}\n            handleDragStart={this.handleCardDragStart}\n            handleDragMove={this.props.cardMove}\n            handleDragEnd={this.props.endCardMove}\n            imgUrls={this.getImgUrls(card)}\n            typeCode={this.getCardType(card)}\n            faceup={card.faceup}\n            numCardsInStack={card.cardStack.length}\n          />\n        );\n      });\n\n    const iAmDragging = this.props.cards.cards.some(\n      (c) => c.dragging && c.controlledBy === myPeerRef\n    );\n\n    const possiblePreviewCards = !!this.props.menuPreviewCard\n      ? [this.props.menuPreviewCard]\n      : this.props.cards.cards.filter(\n          (card) =>\n            !!this.props.gameState.previewCard &&\n            card.id === this.props.gameState.previewCard.id\n        );\n\n    const previewCards = this.stage\n      ? possiblePreviewCards\n          .filter((_card) => !this.state.selecting && !iAmDragging)\n          .map((card) => {\n            const isHorizontal = HORIZONTAL_TYPE_CODES.includes(\n              this.getCardType(card)\n            );\n            const imgUrls = this.getImgUrls(card);\n            const rawPos = this.getRawPreviewCardPosition(isHorizontal);\n            const previewPos = this.getRelativePositionFromTarget(\n              this.stage,\n              rawPos\n            );\n\n            let previewCardHeight = cardConstants.CARD_PREVIEW_HEIGHT;\n            let previewCardWidth = cardConstants.CARD_PREVIEW_WIDTH;\n\n            // Note that we only adjust the height, because the card will\n            // be rotated if it supposed to be displayed horizontally\n            previewCardHeight = Math.min(\n              cardConstants.CARD_PREVIEW_HEIGHT,\n              isHorizontal ? window.innerWidth : window.innerHeight\n            );\n            const previewCardRatio =\n              previewCardHeight / cardConstants.CARD_PREVIEW_HEIGHT;\n            previewCardWidth *= previewCardRatio;\n\n            return imgUrls.some(\n              (url) => url.indexOf(\"card_back\") !== -1\n            ) ? null : (\n              <Card\n                currentGameType={this.props.currentGameType}\n                name={this.getCardName(card)}\n                code={this.getCardCode(card)}\n                selectedColor={\n                  this.props.playerColors[card.controlledBy] ?? \"black\"\n                }\n                controlledBy={card.controlledBy}\n                key={`preview${card.id}`}\n                id={card.id}\n                x={previewPos.x}\n                y={previewPos.y}\n                exhausted={isHorizontal}\n                fill={card.fill}\n                selected={false}\n                dragging={false}\n                shuffling={false}\n                imgUrls={imgUrls}\n                typeCode={this.getCardType(card)}\n                faceup={card.faceup}\n                height={previewCardHeight / this.props.gameState.stageZoom.y}\n                width={previewCardWidth / this.props.gameState.stageZoom.x}\n                isPreview={true}\n              />\n            );\n          })\n          .filter((c): c is JSX.Element => c !== null)\n      : [];\n\n    const playmatScale =\n      this.state.playmatImageLoaded && !!this.state.playmatImage?.naturalWidth\n        ? 2880 / this.state.playmatImage?.naturalWidth\n        : 1;\n\n    return (\n      <div\n        className=\"play-area\"\n        tabIndex={1}\n        onKeyDown={this.handleKeyDown}\n        onKeyPress={this.handleKeyPress}\n      >\n        <RadialMenuContainer></RadialMenuContainer>\n        {this.renderEmptyMessage()}\n        {this.renderContextMenu()}\n        {this.renderPreviewCardModal()}\n        {this.renderTouchMenu()}\n        {this.renderDeckImporter()}\n        {this.renderEncounterImporter()}\n        {this.renderCardSearch()}\n        {this.renderPeerConnector()}\n        {this.renderTokenModifier()}\n\n        <ReactReduxContext.Consumer>\n          {({ store }) => (\n            <Stage\n              ref={(ref) => {\n                if (!ref) return;\n\n                this.stage = ref;\n              }}\n              x={this.props.gameState.stagePosition.x}\n              y={this.props.gameState.stagePosition.y}\n              width={this.state.stageWidth}\n              height={this.state.stageHeight}\n              onClick={this.handleStageClickOrTap}\n              onTap={this.handleStageClickOrTap}\n              onMouseDown={\n                this.props.panMode ? this.noOp : this.handleMouseDown\n              }\n              onMouseUp={this.props.panMode ? this.noOp : this.handleMouseUp}\n              onMouseMove={\n                this.props.panMode ? this.noOp : this.handleMouseMove\n              }\n              onTouchStart={this.handleTouchStart}\n              onTouchMove={this.handleTouchMove}\n              onTouchEnd={this.handleTouchEnd}\n              onContextMenu={this.handleContextMenu}\n              scale={this.props.gameState.stageZoom}\n              onWheel={this.handleWheel}\n              draggable={this.props.panMode}\n              onDragMove={this.noOp}\n              onDragEnd={this.noOp}\n              preventDefault={true}\n            >\n              <Provider store={store}>\n                <Layer>\n                  <Rect\n                    fill={\n                      this.state.playmatImageLoaded ? undefined : \"lightgray\"\n                    }\n                    scale={{\n                      x: playmatScale,\n                      y: playmatScale,\n                    }}\n                    width={\n                      this.state.playmatImageLoaded\n                        ? this.state.playmatImage?.naturalWidth\n                        : 2880\n                    }\n                    height={\n                      this.state.playmatImageLoaded\n                        ? this.state.playmatImage?.naturalHeight\n                        : 1440\n                    }\n                    fillPatternImage={\n                      this.state.playmatImageLoaded && !!this.state.playmatImage\n                        ? this.state.playmatImage\n                        : undefined\n                    }\n                  ></Rect>\n                </Layer>\n                <Layer>\n                  {this.props.counters.map((counter) => (\n                    <Counter\n                      key={`${counter.id}-counter`}\n                      id={counter.id}\n                      pos={counter.position}\n                      value={counter.value}\n                      color={counter.color}\n                      updateCounterValueBy={this.handleCounterValueUpdate(\n                        counter.id\n                      )}\n                      handleContextMenu={this.handleCounterContextMenu(\n                        counter.id\n                      )}\n                      onDragEnd={this.handleCounterDrag(counter.id)}\n                    ></Counter>\n                  ))}\n                </Layer>\n                <Layer preventDefault={true}>\n                  {ghostCards.concat(staticCards).concat(movingCards)}\n\n                  <FirstPlayerTokenContainer\n                    currentGameType={this.props.currentGameType}\n                  ></FirstPlayerTokenContainer>\n\n                  {previewCards}\n                </Layer>\n                <Layer>\n                  <Rect\n                    x={this.state.selectStartPos.x}\n                    y={this.state.selectStartPos.y}\n                    width={this.state.selectRect.width}\n                    height={this.state.selectRect.height}\n                    stroke=\"yellow\"\n                    strokeWidth={4}\n                  />\n                </Layer>\n              </Provider>\n            </Stage>\n          )}\n        </ReactReduxContext.Consumer>\n      </div>\n    );\n  }\n\n  private handleCounterValueUpdate = (id: string) => (delta: number) => {\n    this.props.updateCounterValue({ id, delta });\n  };\n\n  private handleCounterDrag =\n    (id: string) => (event: KonvaEventObject<DragEvent>) => {\n      this.props.moveCounter({\n        id,\n        newPos: {\n          x: event.target.x(),\n          y: event.target.y(),\n        },\n      });\n    };\n\n  private noOp = () => {};\n\n  private renderEmptyMessage = () => {\n    if (this.props.cards.cards.length > 0) return null;\n\n    return (\n      <div>\n        <span>\n          Right click and select 'Load Deck ID' to load a deck from{\" \"}\n          {GamePropertiesMap[this.props.currentGameType].deckSite}\n        </span>\n      </div>\n    );\n  };\n\n  private renderContextMenu = () => {\n    if (!this.state.showContextMenu) return null;\n\n    const containerRect = this.stage?.container().getBoundingClientRect();\n    const pointerPosition = this.state.contextMenuPosition;\n    if (!containerRect || !pointerPosition) {\n      throw new Error(\"Problem computing context menu position\");\n    }\n\n    return (\n      <ContextMenu\n        position={{\n          x: containerRect.left + pointerPosition.x,\n          y: containerRect.top + pointerPosition.y,\n        }}\n        items={this.state.contextMenuItems}\n        hideContextMenu={() => this.clearContextMenu()}\n      ></ContextMenu>\n    );\n  };\n\n  private renderPreviewCardModal = () => {\n    if (!this.state.previewCardModal) return null;\n    return (\n      <TopLayer\n        position={{ x: 0, y: 0 }}\n        completed={() => {\n          this.props.clearPreviewCard();\n          this.setState({\n            previewCardModal: false,\n          });\n        }}\n      ></TopLayer>\n    );\n  };\n\n  private renderTouchMenu = () => {\n    if (this.props.cards.cards.length === 0) return null;\n    return <TouchMenuContainer></TouchMenuContainer>;\n  };\n\n  private renderDeckImporter = () => {\n    if (!this.state.showDeckImporter) return null;\n\n    const containerRect = this.stage?.container().getBoundingClientRect();\n    const pointerPosition = this.state.deckImporterPosition;\n    if (!containerRect || !pointerPosition) {\n      throw new Error(\"Problem computing deck importer position\");\n    }\n\n    return (\n      <TopLayer\n        position={{\n          x: containerRect.left + pointerPosition.x,\n          y: containerRect.top + pointerPosition.y,\n        }}\n        completed={this.clearDeckImporter}\n      >\n        <DeckLoader\n          loadDeckId={this.handleImportDeck(\n            this.getRelativePositionFromTarget(this.stage)\n          )}\n        />\n      </TopLayer>\n    );\n  };\n\n  private renderEncounterImporter = () => {\n    if (!this.state.showEncounterImporter) return null;\n\n    const containerRect = this.stage?.container().getBoundingClientRect();\n    const pointerPosition = this.state.encounterImporterPosition;\n    if (!containerRect || !pointerPosition) {\n      throw new Error(\"Problem computing deck importer position\");\n    }\n\n    const pos = {\n      x: containerRect.left + pointerPosition.x,\n      y: containerRect.top + pointerPosition.y,\n    };\n\n    return (\n      <TopLayer position={pos} completed={this.clearEncounterImporter}>\n        <EncounterLoaderContainer\n          currentGameType={this.props.currentGameType}\n          loadCards={this.handleLoadEncounter(\n            this.getRelativePositionFromTarget(this.stage)\n          )}\n        />\n      </TopLayer>\n    );\n  };\n\n  private renderCardSearch = () => {\n    if (!this.state.showCardSearch) return null;\n\n    const containerRect = this.stage?.container().getBoundingClientRect();\n    const pointerPosition = this.state.cardSearchPosition;\n    if (!containerRect || !pointerPosition) {\n      throw new Error(\"Problem computing card search position\");\n    }\n\n    const pos = {\n      x: containerRect.left + pointerPosition.x,\n      y: containerRect.top + pointerPosition.y,\n    };\n\n    return !!this.state.cardStackForSearching ? (\n      <TopLayer position={pos} completed={this.clearCardSearch}>\n        <CardStackCardSelectorContainer\n          card={this.state.cardStackForSearching}\n          cardSelected={this.handleCardSelectedFromCardStack(\n            this.state.cardStackForSearching.id,\n            pos\n          )}\n        />\n      </TopLayer>\n    ) : null;\n  };\n\n  private renderPeerConnector = () => {\n    if (!this.state.showPeerConnector) return null;\n\n    const containerRect = this.stage?.container().getBoundingClientRect();\n    const pointerPosition = this.state.peerConnectorPosition;\n    if (!containerRect || !pointerPosition) {\n      throw new Error(\"Problem computing peer connector position\");\n    }\n\n    const pos = {\n      x: containerRect.left + pointerPosition.x,\n      y: containerRect.top + pointerPosition.y,\n    };\n\n    return !!this.state.showPeerConnector ? (\n      <TopLayer position={pos} completed={this.clearPeerConnector}>\n        <PeerConnector connect={this.handlePeerConnect}></PeerConnector>\n      </TopLayer>\n    ) : null;\n  };\n\n  private renderTokenModifier = () => {\n    if (!this.state.showTokenValueModifier) return null;\n\n    const containerRect = this.stage?.container().getBoundingClientRect();\n    const pointerPosition = this.state.tokenValueModifierPosition;\n    if (!containerRect || !pointerPosition) {\n      throw new Error(\"Problem computing token Modifier position\");\n    }\n\n    const pos = {\n      x: containerRect.left + pointerPosition.x,\n      y: containerRect.top + pointerPosition.y,\n    };\n\n    return !!this.state.showTokenValueModifier &&\n      !!this.state.tokenValueModifierProps ? (\n      <TopLayer position={pos} completed={this.clearTokenValueModifier}>\n        <TokenValueModifier\n          id={this.state.tokenValueModifierProps.id}\n          tokenType={this.state.tokenValueModifierProps.tokenType}\n          updated={(payload) => {\n            this.props.adjustCounterToken(payload);\n            this.clearTokenValueModifier();\n          }}\n        ></TokenValueModifier>\n      </TopLayer>\n    ) : null;\n  };\n\n  private handleLoadEncounter = (position: Vector2d) => (cards: string[][]) => {\n    this.clearEncounterImporter();\n    cards.forEach((c, index) => {\n      this.props.addCardStack({\n        position: {\n          x: position.x + (cardConstants.CARD_WIDTH + 10) * index,\n          y: position.y,\n        },\n        cardJsonIds: c,\n      });\n    });\n  };\n\n  private handleImportDeck = (position: Vector2d) => (id: number) => {\n    this.clearDeckImporter();\n    this.props.fetchDecklistById({\n      gameType: this.props.currentGameType,\n      decklistId: id,\n      position,\n    });\n  };\n\n  private handlePeerConnect = (peerId: string) => {\n    this.clearPeerConnector();\n    this.props.connectToRemoteGame(peerId);\n  };\n\n  private handleCardSelectedFromCardStack =\n    (cardStackId: string, pos: Vector2d) => (jsonId: string) => {\n      this.clearCardSearch();\n      this.props.pullCardOutOfCardStack({ cardStackId, jsonId, pos });\n    };\n\n  private clearContextMenu = () => {\n    this.setState({\n      showContextMenu: false,\n      contextMenuPosition: null,\n      contextMenuItems: [],\n    });\n  };\n\n  private clearDeckImporter = () => {\n    this.setState({\n      showDeckImporter: false,\n      deckImporterPosition: null,\n    });\n  };\n\n  private clearTokenValueModifier = () => {\n    this.setState({\n      showTokenValueModifier: false,\n      tokenValueModifierProps: null,\n      tokenValueModifierPosition: null,\n    });\n  };\n\n  private clearEncounterImporter = () => {\n    this.setState({\n      showEncounterImporter: false,\n      encounterImporterPosition: null,\n    });\n  };\n\n  private clearCardSearch = () => {\n    this.setState({\n      showCardSearch: false,\n      cardSearchPosition: null,\n      cardStackForSearching: null,\n    });\n  };\n\n  private clearPeerConnector = () => {\n    this.setState({\n      showPeerConnector: false,\n      peerConnectorPosition: null,\n    });\n  };\n\n  private handleStageClickOrTap = (event: KonvaEventObject<MouseEvent>) => {\n    if (this.state.showContextMenu) {\n      return;\n    }\n    const mousePos = this.getRelativePositionFromTarget(this.stage);\n    if (\n      this.props.panMode ||\n      getDistance(this.state.selectStartPos, mousePos) < 30\n    ) {\n      this.props.unselectAllCards();\n    }\n  };\n\n  private handleWheel = (event: KonvaEventObject<WheelEvent>) => {\n    event.evt.preventDefault();\n\n    if (!this.stage) return;\n\n    var oldScale = this.props.gameState.stageZoom.x;\n\n    const pointer = this.stage.getPointerPosition() ?? { x: 0, y: 0 };\n\n    const mousePointTo = {\n      x: (pointer.x - this.stage.x()) / oldScale,\n      y: (pointer.y - this.stage.y()) / oldScale,\n    };\n\n    const newScale =\n      event.evt.deltaY < 0 ? oldScale * SCALE_BY : oldScale / SCALE_BY;\n\n    this.props.updateZoom({ x: newScale, y: newScale });\n\n    const newPos = {\n      x: pointer.x - mousePointTo.x * newScale,\n      y: pointer.y - mousePointTo.y * newScale,\n    };\n\n    this.props.updatePosition(newPos);\n  };\n\n  private handleCounterContextMenu =\n    (counterId: string) => (event: KonvaEventObject<PointerEvent>) => {\n      event.evt.preventDefault();\n      event.cancelBubble = true;\n\n      const counter = this.props.counters.find((c) => c.id === counterId);\n\n      const menuItems: ContextMenuItem[] = [\n        {\n          label: \"Remove\",\n          action: () => {\n            this.props.removeCounter(counterId);\n          },\n        },\n        {\n          label: \"Reset\",\n          action: () => {\n            this.props.updateCounterValue({\n              id: counterId,\n              delta: (counter?.value ?? 0) * -1,\n            });\n          },\n        },\n        {\n          label: \"Set Color\",\n          children: possibleColors.map((color) => {\n            return {\n              label: color,\n              action: () => {\n                this.props.updateCounterColor({\n                  id: counterId,\n                  newColor: color,\n                });\n              },\n            };\n          }),\n        },\n      ];\n\n      this.setState({\n        showContextMenu: true,\n        contextMenuPosition: this.stage?.getPointerPosition() ?? null,\n        contextMenuItems: menuItems,\n      });\n    };\n\n  private handleCardContextMenu = (\n    cardId: string,\n    event: KonvaEventObject<PointerEvent>\n  ) => {\n    event.evt.preventDefault();\n    event.cancelBubble = true;\n\n    // We want to unselect all the other cards if the card isn't actively selected\n    const cardStack = this.props.cards.cards.find((c) => c.id === cardId);\n\n    // Next, select the card that was right-clicked\n    this.props.selectCard({\n      id: cardId,\n      unselectOtherCards: !!cardStack ? !cardStack.selected : true,\n    });\n\n    const card = this.props.cards.cards.find((c) => c.id === cardId);\n    const numCardsInStack = card?.cardStack?.length || 0;\n\n    const mySelectedCards = getMySelectedCards(this.props.cards.cards);\n\n    const menuItems: ContextMenuItem[] = [\n      {\n        label: \"Flip\",\n        action: () => {\n          this.props.flipCards();\n        },\n      },\n    ];\n\n    if (numCardsInStack > 1) {\n      menuItems.push({\n        label: \"Shuffle\",\n        action: () => {\n          this.props.shuffleStack();\n        },\n      });\n\n      menuItems.push({\n        label: \"Find Specific Card\",\n        action: () => {\n          if (!!card) {\n            this.setState({\n              showCardSearch: true,\n              cardSearchPosition: this.stage?.getPointerPosition() ?? null,\n              cardStackForSearching: card,\n            });\n          }\n        },\n      });\n    }\n\n    const tokenInfoForGameType =\n      GamePropertiesMap[this.props.currentGameType].tokens;\n\n    if (!!tokenInfoForGameType.stunned) {\n      menuItems.push({\n        label: anyCardStackHasStatus(StatusTokenType.Stunned, mySelectedCards)\n          ? tokenInfoForGameType.stunned.menuRemoveText\n          : tokenInfoForGameType.stunned.menuText,\n        action: () => {\n          this.props.toggleToken({\n            id: card?.id || \"\",\n            tokenType: StatusTokenType.Stunned,\n            value: !anyCardStackHasStatus(\n              StatusTokenType.Stunned,\n              mySelectedCards\n            ),\n          });\n        },\n      });\n    }\n\n    if (!!tokenInfoForGameType.confused) {\n      menuItems.push({\n        label: anyCardStackHasStatus(StatusTokenType.Confused, mySelectedCards)\n          ? tokenInfoForGameType.confused.menuRemoveText\n          : tokenInfoForGameType.confused.menuText,\n        action: () => {\n          this.props.toggleToken({\n            id: card?.id || \"\",\n            tokenType: StatusTokenType.Confused,\n            value: !anyCardStackHasStatus(\n              StatusTokenType.Confused,\n              mySelectedCards\n            ),\n          });\n        },\n      });\n    }\n\n    if (!!tokenInfoForGameType.tough) {\n      menuItems.push({\n        label: anyCardStackHasStatus(StatusTokenType.Tough, mySelectedCards)\n          ? tokenInfoForGameType.tough.menuRemoveText\n          : tokenInfoForGameType.tough.menuText,\n        action: () => {\n          this.props.toggleToken({\n            id: card?.id || \"\",\n            tokenType: StatusTokenType.Tough,\n            value: !anyCardStackHasStatus(\n              StatusTokenType.Tough,\n              mySelectedCards\n            ),\n          });\n        },\n      });\n    }\n\n    if (!!tokenInfoForGameType.damage) {\n      menuItems.push({\n        label: tokenInfoForGameType.damage.menuText,\n        action: () => {\n          this.setState({\n            showContextMenu: false,\n            contextMenuItems: [],\n            contextMenuPosition: null,\n\n            showTokenValueModifier: true,\n            tokenValueModifierProps: {\n              id: card?.id || \"\",\n              tokenType: CounterTokenType.Damage,\n            },\n            tokenValueModifierPosition:\n              this.stage?.getPointerPosition() ?? null,\n          });\n        },\n      });\n    }\n\n    if (!!tokenInfoForGameType.threat) {\n      menuItems.push({\n        label: tokenInfoForGameType.threat.menuText,\n        action: () => {\n          this.setState({\n            showContextMenu: false,\n            contextMenuItems: [],\n            contextMenuPosition: null,\n\n            showTokenValueModifier: true,\n            tokenValueModifierProps: {\n              id: card?.id || \"\",\n              tokenType: CounterTokenType.Threat,\n            },\n            tokenValueModifierPosition:\n              this.stage?.getPointerPosition() ?? null,\n          });\n        },\n      });\n    }\n\n    if (!!tokenInfoForGameType.generic) {\n      menuItems.push({\n        label: tokenInfoForGameType.generic.menuText,\n        action: () => {\n          this.setState({\n            showContextMenu: false,\n            contextMenuItems: [],\n            contextMenuPosition: null,\n\n            showTokenValueModifier: true,\n            tokenValueModifierProps: {\n              id: card?.id || \"\",\n              tokenType: CounterTokenType.Generic,\n            },\n            tokenValueModifierPosition:\n              this.stage?.getPointerPosition() ?? null,\n          });\n        },\n      });\n    }\n\n    menuItems.push({\n      label: \"Remove All Tokens\",\n      action: () => {\n        this.props.adjustCounterToken({\n          id: card?.id || \"\",\n          tokenType: CounterTokenType.Damage,\n          value: 0,\n        });\n\n        this.props.adjustCounterToken({\n          id: card?.id || \"\",\n          tokenType: CounterTokenType.Threat,\n          value: 0,\n        });\n\n        this.props.adjustCounterToken({\n          id: card?.id || \"\",\n          tokenType: CounterTokenType.Generic,\n          value: 0,\n        });\n      },\n    });\n\n    const modifiersForGameType =\n      GamePropertiesMap[this.props.currentGameType].modifiers;\n\n    if (modifiersForGameType.length > 0) {\n      menuItems.push({\n        label: \"Modifiers\",\n        children: modifiersForGameType\n          .map((m) => {\n            return {\n              label: m.attributeName,\n              children: [\n                {\n                  label: \"Add 1\",\n                  action: () => {\n                    this.props.adjustModifier({\n                      id: card?.id || \"\",\n                      modifierId: m.attributeId,\n                      delta: 1,\n                    });\n                  },\n                },\n                {\n                  label: \"Remove 1\",\n                  action: () => {\n                    this.props.adjustModifier({\n                      id: card?.id || \"\",\n                      modifierId: m.attributeId,\n                      delta: -1,\n                    });\n                  },\n                },\n                {\n                  label: \"-3\",\n                  action: () => {\n                    this.props.adjustModifier({\n                      id: card?.id || \"\",\n                      modifierId: m.attributeId,\n                      value: -3,\n                    });\n                  },\n                },\n                {\n                  label: \"-2\",\n                  action: () => {\n                    this.props.adjustModifier({\n                      id: card?.id || \"\",\n                      modifierId: m.attributeId,\n                      value: -2,\n                    });\n                  },\n                },\n                {\n                  label: \"-1\",\n                  action: () => {\n                    this.props.adjustModifier({\n                      id: card?.id || \"\",\n                      modifierId: m.attributeId,\n                      value: -1,\n                    });\n                  },\n                },\n                {\n                  label: \"0\",\n                  action: () => {\n                    this.props.adjustModifier({\n                      id: card?.id || \"\",\n                      modifierId: m.attributeId,\n                      value: 0,\n                    });\n                  },\n                },\n                {\n                  label: \"1\",\n                  action: () => {\n                    this.props.adjustModifier({\n                      id: card?.id || \"\",\n                      modifierId: m.attributeId,\n                      value: 1,\n                    });\n                  },\n                },\n                {\n                  label: \"2\",\n                  action: () => {\n                    this.props.adjustModifier({\n                      id: card?.id || \"\",\n                      modifierId: m.attributeId,\n                      value: 2,\n                    });\n                  },\n                },\n                {\n                  label: \"3\",\n                  action: () => {\n                    this.props.adjustModifier({\n                      id: card?.id || \"\",\n                      modifierId: m.attributeId,\n                      value: 3,\n                    });\n                  },\n                },\n              ],\n            } as ContextMenuItem;\n          })\n          .concat([\n            {\n              label: \"Clear all modifiers\",\n              action: () => {\n                this.props.clearAllModifiers({ id: card?.id || \"\" });\n              },\n            },\n          ]),\n      });\n    }\n\n    this.setState({\n      showContextMenu: true,\n      contextMenuPosition: this.stage?.getPointerPosition() ?? null,\n      contextMenuItems: menuItems,\n    });\n  };\n\n  private handleCardClick =\n    (card: ICardStack) =>\n    (\n      cardId: string,\n      event: KonvaEventObject<MouseEvent>,\n      wasTouch: boolean\n    ) => {\n      // Here check if modifier held down\n      const modifierKeyHeld =\n        event.evt.shiftKey || event.evt.metaKey || event.evt.ctrlKey;\n\n      if (card.selected && (modifierKeyHeld || this.props.multiselectMode)) {\n        this.props.toggleSelectCard(cardId);\n      } else {\n        this.props.selectCard({\n          id: cardId,\n          unselectOtherCards: !modifierKeyHeld && !this.props.multiselectMode,\n        });\n\n        if (\n          wasTouch &&\n          !modifierKeyHeld &&\n          !this.props.multiselectMode &&\n          !this.doubleTapTimer &&\n          !this.state.showContextMenu\n        ) {\n          this.doubleTapTimer = setTimeout(() => {\n            this.props.showRadialMenuAtPosition(\n              this.stage?.getPointerPosition() || { x: 0, y: 0 }\n            );\n            this.doubleTapTimer = null;\n          }, 200);\n        }\n      }\n    };\n\n  private handleSelectAndExhaust = (\n    cardId: string,\n    event: KonvaEventObject<MouseEvent>\n  ) => {\n    // Here check if modifier held down\n    const modifierKeyHeld =\n      event.evt.shiftKey || event.evt.metaKey || event.evt.ctrlKey;\n    this.props.selectCard({ id: cardId, unselectOtherCards: !modifierKeyHeld });\n    this.props.exhaustCard(cardId);\n  };\n\n  private showOrToggleModalPreviewCard = (\n    cardId: string,\n    _event: KonvaEventObject<TouchEvent>\n  ) => {\n    // Clear the timer if we were waiting\n    if (!!this.doubleTapTimer) {\n      clearTimeout(this.doubleTapTimer);\n      this.doubleTapTimer = null;\n    }\n\n    if (\n      !!this.props.gameState.previewCard &&\n      this.props.gameState.previewCard.id === cardId\n    ) {\n      this.props.clearPreviewCard();\n    } else {\n      this.setState({\n        previewCardModal: true,\n      });\n      this.props.setPreviewCardId(cardId);\n    }\n  };\n\n  private handleCardDragStart = (\n    cardId: string,\n    event: KonvaEventObject<DragEvent>\n  ) => {\n    let splitTopCard = false;\n    // If multiple things are selected, you can't pull something off the top of a stack,\n    // so just do a normal drag\n    const multipleSelected =\n      this.props.cards.cards.filter(\n        (c) => c.selected && c.controlledBy === myPeerRef\n      ).length > 1;\n\n    if (!multipleSelected) {\n      const draggingCard = this.props.cards.cards.find((c) => c.id === cardId);\n      const hasStack = (draggingCard?.cardStack || []).length > 1;\n      if (!!draggingCard && hasStack) {\n        // Check if we're dragging in the upper right corner of the card\n        const upperRightPoint = {\n          x:\n            draggingCard.x +\n            (draggingCard.exhausted\n              ? cardConstants.CARD_HEIGHT\n              : cardConstants.CARD_WIDTH) /\n              2,\n          y:\n            draggingCard.y -\n            (draggingCard.exhausted\n              ? cardConstants.CARD_WIDTH\n              : cardConstants.CARD_HEIGHT) /\n              2,\n        };\n        const distance = getDistance(\n          upperRightPoint,\n          this.getRelativePositionFromTarget(this.stage)\n        );\n        if (distance < 50) {\n          splitTopCard = true;\n        }\n      }\n    }\n\n    this.props.startCardMove({ id: cardId, splitTopCard });\n  };\n\n  private handleKeyPress = (event: React.KeyboardEvent<HTMLElement>) => {\n    const modifier: boolean = event.ctrlKey || event.metaKey;\n    const code = event.key.toLocaleLowerCase();\n    const intCode = parseInt(code);\n    if (code === \"p\") {\n      this.props.togglePanMode();\n    } else if (code === \"f\") {\n      this.props.flipCards();\n    } else if (code === \"e\") {\n      this.props.exhaustCard();\n    } else if (code === \"s\") {\n      this.props.shuffleStack();\n    } else if (!Number.isNaN(intCode)) {\n      // if a ctrl / cmd key was held, we're\n      // adding tokens\n      if (modifier) {\n      } else {\n        // First, get the selected card stack\n        const mySelectedCards = getMySelectedCards(this.props.cards.cards);\n        if (mySelectedCards.length !== 1) {\n          console.log(\n            \"will not be drawing any cards because the number of selected stacks is \" +\n              mySelectedCards.length\n          );\n        } else {\n          this.props.drawCardsOutOfCardStack({\n            cardStackId: mySelectedCards[0].id,\n            numberToDraw: intCode,\n          });\n        }\n      }\n    }\n  };\n\n  private handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    const code = event.key.toLocaleLowerCase();\n    const intCode = parseInt(code);\n\n    if ((event.ctrlKey || event.metaKey) && !Number.isNaN(intCode)) {\n      const tokenInfoForGameType =\n        GamePropertiesMap[this.props.currentGameType].tokens;\n      switch (intCode) {\n        case 1:\n          if (!!tokenInfoForGameType.damage) {\n            this.props.adjustCounterToken({\n              tokenType: CounterTokenType.Damage,\n              delta: 1,\n            });\n          }\n          break;\n        case 2:\n          if (!!tokenInfoForGameType.threat) {\n            this.props.adjustCounterToken({\n              tokenType: CounterTokenType.Threat,\n              delta: 1,\n            });\n          }\n          break;\n\n        case 3:\n          if (!!tokenInfoForGameType.generic) {\n            this.props.adjustCounterToken({\n              tokenType: CounterTokenType.Generic,\n              delta: 1,\n            });\n          }\n          break;\n        case 4:\n          if (!!tokenInfoForGameType.damage) {\n            this.props.adjustCounterToken({\n              tokenType: CounterTokenType.Damage,\n              delta: -1,\n            });\n          }\n          break;\n        case 5:\n          if (!!tokenInfoForGameType.threat) {\n            this.props.adjustCounterToken({\n              tokenType: CounterTokenType.Threat,\n              delta: -1,\n            });\n          }\n          break;\n\n        case 6:\n          if (!!tokenInfoForGameType.generic) {\n            this.props.adjustCounterToken({\n              tokenType: CounterTokenType.Generic,\n              delta: -1,\n            });\n          }\n          break;\n      }\n      event.preventDefault();\n    }\n\n    if (\n      event.shiftKey &&\n      (event.ctrlKey || event.metaKey) &&\n      event.key === \"z\"\n    ) {\n      this.props.redo();\n    } else if ((event.ctrlKey || event.metaKey) && event.key === \"z\") {\n      event.preventDefault();\n      this.props.undo();\n    }\n  };\n\n  private getRawPreviewCardPosition = (horizontal: boolean): Vector2d => {\n    const pointerPos = this.stage?.getPointerPosition() ?? { x: 0, y: 0 };\n    const screenMidPointX = window.innerWidth / 2;\n    const screenMidPointY = window.innerHeight / 2;\n\n    const widthToUse = horizontal\n      ? cardConstants.CARD_PREVIEW_HEIGHT\n      : cardConstants.CARD_PREVIEW_WIDTH;\n    const heightToUse = horizontal\n      ? cardConstants.CARD_PREVIEW_WIDTH\n      : cardConstants.CARD_PREVIEW_HEIGHT;\n\n    if (this.state.previewCardModal) {\n      return {\n        x: screenMidPointX,\n        y: screenMidPointY,\n      };\n    }\n\n    return pointerPos.x < screenMidPointX\n      ? {\n          x: window.innerWidth - widthToUse / 2,\n          y: heightToUse / 2,\n        }\n      : {\n          x: widthToUse / 2,\n          y: heightToUse / 2,\n        };\n  };\n\n  private getRelativePositionFromTarget = (\n    target: any,\n    posParam?: Vector2d\n  ) => {\n    const transform = target.getAbsoluteTransform().copy();\n    transform.invert();\n    let pos = posParam || target.getPointerPosition();\n    return transform.point(pos) as Vector2d;\n  };\n\n  private handleMouseDown = (\n    event: KonvaEventObject<MouseEvent> | KonvaEventObject<TouchEvent>\n  ) => {\n    if (\n      (event.evt instanceof MouseEvent && event.evt.button === 0) ||\n      event.evt instanceof TouchEvent\n    ) {\n      // Only do something if it's the primary button (not a right-click)\n      const pos = this.getRelativePositionFromTarget(this.stage);\n\n      this.setState({\n        selectStartPos: {\n          x: pos.x,\n          y: pos.y,\n        },\n        selecting: true,\n      });\n    }\n\n    return false;\n  };\n\n  private getSelectionRectInfo = () => {\n    const selectStartPos = this.state.selectStartPos;\n    const selectRect = this.state.selectRect;\n    return {\n      height: Math.abs(selectRect.height),\n      width: Math.abs(selectRect.width),\n      x:\n        selectRect.width < 0\n          ? selectStartPos.x + selectRect.width\n          : selectStartPos.x,\n      y:\n        selectRect.height < 0\n          ? selectStartPos.y + selectRect.height\n          : selectStartPos.y,\n    };\n  };\n\n  private handleMouseUp = (\n    event: KonvaEventObject<MouseEvent> | KonvaEventObject<TouchEvent>\n  ) => {\n    // if we were selecting, check for intersection\n    if (this.state.drewASelectionRect) {\n      const selectRect = this.getSelectionRectInfo();\n      const selectedCards: any[] = this.props.cards.cards.reduce<ICardStack[]>(\n        (currSelectedCards, card) => {\n          const intersects = Intersects.boxBox(\n            selectRect.x,\n            selectRect.y,\n            selectRect.width,\n            selectRect.height,\n            card.x - 50,\n            card.y - 75,\n            cardConstants.CARD_WIDTH,\n            cardConstants.CARD_HEIGHT\n          );\n\n          if (intersects) {\n            currSelectedCards.push(card);\n          }\n\n          return currSelectedCards;\n        },\n        []\n      );\n\n      // Here check if modifier held down\n      const modifierKeyHeld =\n        event.evt.shiftKey || event.evt.metaKey || event.evt.ctrlKey;\n\n      this.props.selectMultipleCards({\n        ids: selectedCards.map((card) => card.id),\n        unselectOtherCards: !modifierKeyHeld,\n      });\n    }\n\n    this.setState({\n      drewASelectionRect: false,\n      selectRect: {\n        height: 0,\n        width: 0,\n      },\n      selecting: false,\n    });\n\n    return false;\n  };\n\n  private handleTouchStart = (event: KonvaEventObject<TouchEvent>) => {\n    if (!!this.touchTimer) {\n      clearTimeout(this.touchTimer);\n      this.touchTimer = null;\n    }\n\n    this.touchTimer = setTimeout(() => {\n      this.handleContextMenu(event);\n    }, 750);\n\n    if (!this.props.panMode) {\n      this.handleMouseDown(event);\n    }\n  };\n\n  private handleTouchMove = (e: any) => {\n    e.evt.preventDefault();\n\n    var touch1 = e.evt.touches[0];\n    var touch2 = e.evt.touches[1];\n\n    if (!!this.touchTimer) {\n      clearTimeout(this.touchTimer);\n      this.touchTimer = null;\n    }\n\n    if (touch1 && touch2) {\n      this.handleMultiTouch(touch1, touch2);\n    } else {\n      this.handleMouseMove(e);\n    }\n  };\n\n  private handleMultiTouch = (touch1: any, touch2: any) => {\n    if (!this.stage) {\n      return;\n    }\n    // if the stage was under Konva's drag&drop\n    // we need to stop it, and implement our own pan logic with two pointers\n    if (this.stage.isDragging()) {\n      this.stage.stopDrag();\n    }\n\n    const p1 = {\n      x: touch1.clientX,\n      y: touch1.clientY,\n    };\n    const p2 = {\n      x: touch2.clientX,\n      y: touch2.clientY,\n    };\n\n    if (!this.lastCenter) {\n      this.lastCenter = getCenter(p1, p2);\n      return;\n    }\n    const newCenter = getCenter(p1, p2);\n\n    const dist = getDistance(p1, p2);\n\n    if (!this.lastDist) {\n      this.lastDist = dist;\n    }\n\n    // local coordinates of center point\n    const pointTo = {\n      x: (newCenter.x - this.stage.x()) / this.props.gameState.stageZoom.x,\n      y: (newCenter.y - this.stage.y()) / this.props.gameState.stageZoom.y,\n    };\n\n    const scale = this.props.gameState.stageZoom.x * (dist / this.lastDist);\n    this.props.updateZoom({ x: scale, y: scale });\n\n    // calculate new position of the stage\n    const dx = newCenter.x - this.lastCenter.x;\n    const dy = newCenter.y - this.lastCenter.y;\n\n    const newPos = {\n      x: newCenter.x - pointTo.x * scale + dx,\n      y: newCenter.y - pointTo.y * scale + dy,\n    };\n\n    this.props.updatePosition(newPos);\n\n    this.lastDist = dist;\n    this.lastCenter = newCenter;\n  };\n\n  private handleTouchEnd = (event: KonvaEventObject<TouchEvent>) => {\n    this.lastDist = 0;\n    this.lastCenter = null;\n    if (!!this.touchTimer) {\n      clearTimeout(this.touchTimer);\n      this.touchTimer = null;\n    }\n\n    if (!this.props.panMode) {\n      this.handleMouseUp(event);\n    }\n  };\n\n  private handleMouseMove = (event: any) => {\n    if (this.state.selecting) {\n      const pos = this.getRelativePositionFromTarget(event.currentTarget);\n      this.setState({\n        drewASelectionRect: true,\n        selectRect: {\n          height: pos.y - this.state.selectStartPos.y,\n          width: pos.x - this.state.selectStartPos.x,\n        },\n      });\n    }\n    event.cancelBubble = true;\n  };\n\n  private handleContextMenu = (\n    event: KonvaEventObject<PointerEvent> | KonvaEventObject<TouchEvent>\n  ): void => {\n    if (!!this.touchTimer) {\n      clearTimeout(this.touchTimer);\n      this.touchTimer = null;\n    }\n    event.evt.preventDefault();\n    event.cancelBubble = true;\n\n    const menuItems = [\n      {\n        label: \"Undo\",\n        action: this.props.undo,\n      },\n      {\n        label: \"Redo\",\n        action: this.props.redo,\n      },\n      {\n        label: \"Load Deck by ID\",\n        action: () => {\n          this.setState({\n            showDeckImporter: true,\n            deckImporterPosition: this.stage?.getPointerPosition() ?? null,\n          });\n        },\n      },\n      {\n        label: \"Load Deck from txt file\",\n        fileLoadedAction: (txtContents: string) => {\n          this.props.createDeckFromTxt({\n            gameType: this.props.currentGameType,\n            position: this.stage?.getPointerPosition() ?? { x: 0, y: 0 },\n            txtContents,\n          });\n        },\n        fileUploader: true,\n      },\n      {\n        label: `Load ${\n          GamePropertiesMap[this.props.currentGameType].encounterUiName\n        }`,\n        action: () => {\n          this.setState({\n            showEncounterImporter: true,\n            encounterImporterPosition: this.stage?.getPointerPosition() ?? null,\n          });\n        },\n      },\n      {\n        label: \"Create new counter\",\n        action: () => {\n          this.props.addNewCounter(\n            this.getRelativePositionFromTarget(this.stage) ?? { x: 0, y: 0 }\n          );\n        },\n      },\n      { label: \"Reset Game\", action: this.props.resetApp },\n      {\n        label: \"Quit Game\",\n        action: () => {\n          this.props.quitGame();\n          this.props.resetApp();\n        },\n      },\n      {\n        label: \"Connect to Remote Game\",\n        action: () => {\n          this.setState({\n            showPeerConnector: true,\n            peerConnectorPosition: this.stage?.getPointerPosition() ?? null,\n          });\n        },\n      },\n      {\n        label: \"Request resync from Remote Game\",\n        action: this.props.requestResync,\n      },\n      {\n        label: `Peer id is ${this.props.peerId}`,\n        action: () => {\n          if (!!this.props.peerId) {\n            copyToClipboard(generateRemoteGameUrl(this.props.peerId));\n          }\n        },\n      },\n      {\n        label: `Copy game state as url`,\n        action: () => {\n          this.props.generateGameStateUrl();\n        },\n      },\n    ];\n\n    this.setState({\n      showContextMenu: true,\n      contextMenuPosition: this.stage?.getPointerPosition() ?? null,\n      contextMenuItems: menuItems,\n    });\n  };\n\n  private getCardType = (card: ICardStack): string => {\n    if (Object.keys(this.props.cardsData).length === 0) return \"\";\n\n    const cardData = this.props.cardsData[card.cardStack[0].jsonId];\n\n    return (cardData?.typeCode ?? \"\").toLocaleLowerCase();\n  };\n\n  private getCardName = (card: ICardStack) => {\n    const cardInQuestion = card.faceup\n      ? card.cardStack[0]\n      : card.cardStack[card.cardStack.length - 1];\n    return this.props.cardsData[cardInQuestion.jsonId]?.name ?? \"\";\n  };\n\n  private getCardCode = (card: ICardStack) => {\n    const cardInQuestion = card.faceup\n      ? card.cardStack[0]\n      : card.cardStack[card.cardStack.length - 1];\n\n    if (!cardInQuestion) {\n      console.error(\"Could not get card in question for stack:\", card);\n    }\n\n    const idToGrab = cardInQuestion?.jsonId ?? \"missing-id\";\n\n    return (\n      this.props.cardsData[idToGrab]?.code ?? `code missing for ${idToGrab}`\n    );\n  };\n\n  private checkMissingImageMap(code: string): string | null {\n    return MISSING_CARD_IMAGE_MAP[code] ?? null;\n  }\n\n  private generateLCGCDNImageUrl(card: CardData, faceup: boolean): string {\n    if (!card) {\n      return `https://lcgcdn.s3.amazonaws.com/mc/NOPE.jpg`;\n    }\n\n    // get the first two digits\n    let codeToUse = card.code;\n\n    if (!faceup && !!card.backLink) {\n      codeToUse = card.backLink;\n    }\n\n    const groupCode =\n      CARD_PACK_REMAPPING[card.extraInfo.packCode ?? \"\"] ??\n      codeToUse.substring(0, 2);\n    let cardCode = codeToUse.substring(2);\n\n    //trim leading \"0\" chars\n    while (cardCode[0] === \"0\") {\n      cardCode = cardCode.substring(1);\n    }\n\n    cardCode = cardCode.toLocaleUpperCase();\n\n    let cardSuffix = \"\";\n\n    if (!!card.doubleSided) {\n      cardSuffix = faceup ? \"A\" : \"B\";\n    }\n\n    return `https://lcgcdn.s3.amazonaws.com/mc/MC${groupCode}en_${cardCode}${cardSuffix}.jpg`;\n  }\n\n  private getImgUrls = (card: ICardStack): string[] => {\n    if (Object.keys(this.props.cardsData).length === 0) return [];\n\n    let urls: string[] = [];\n\n    const topCardData = this.props.cardsData[card.cardStack[0].jsonId];\n\n    if (!topCardData) {\n      return [];\n    }\n\n    let cardData: CardData | null = topCardData;\n\n    if (!!cardData.images) {\n      if (!card.faceup) {\n        if (!cardData.images.back) {\n          return [\n            topCardData.extraInfo.factionCode === \"encounter\"\n              ? process.env.PUBLIC_URL +\n                \"/images/standard/encounter_card_back_\" +\n                this.props.currentGameType +\n                \".png\"\n              : process.env.PUBLIC_URL +\n                \"/images/standard/card_back_\" +\n                this.props.currentGameType +\n                \".png\",\n          ];\n        } else {\n          return [cardData.images.back];\n        }\n      } else {\n        return [cardData.images.front];\n      }\n    }\n\n    if (!card.faceup) {\n      if (!!topCardData.backLink || !!topCardData.doubleSided) {\n        urls = [\n          this.generateLCGCDNImageUrl(topCardData, card.faceup),\n          // `https://marvelcdb.com/bundles/cards/${bottomCardData.back_link}.png`,\n          // `https://marvelcdb.com/bundles/cards/${bottomCardData.back_link}.jpg`,\n          // process.env.PUBLIC_URL +\n          //   \"/images/cards/\" +\n          //   bottomCardData.octgn_id +\n          //   \".b.jpg\",\n        ];\n      } else {\n        cardData = null;\n        urls = [\n          topCardData.extraInfo.factionCode === \"encounter\"\n            ? process.env.PUBLIC_URL +\n              \"/images/standard/encounter_card_back_\" +\n              this.props.currentGameType +\n              \".png\"\n            : process.env.PUBLIC_URL +\n              \"/images/standard/card_back_\" +\n              this.props.currentGameType +\n              \".png\",\n        ];\n      }\n    } else {\n      urls = [\n        this.generateLCGCDNImageUrl(topCardData, card.faceup),\n        // `https://marvelcdb.com/bundles/cards/${topCardData.code}.png`,\n        // `https://marvelcdb.com/bundles/cards/${topCardData.code}.jpg`,\n        // process.env.PUBLIC_URL +\n        //   \"/images/cards/\" +\n        //   topCardData.octgn_id +\n        //   \".jpg\",\n      ];\n    }\n\n    let codeForMissingCheck = \"\";\n\n    if (!!cardData) {\n      if (card.faceup) {\n        codeForMissingCheck = cardData.code;\n      } else {\n        if (!!cardData.backLink) {\n          codeForMissingCheck = cardData.backLink;\n        } else if (cardData.doubleSided) {\n          codeForMissingCheck = `${cardData.code}_double_sided_back`;\n        }\n      }\n    }\n\n    const missingImageOverride = !!cardData\n      ? this.checkMissingImageMap(codeForMissingCheck)\n      : null;\n\n    if (!!missingImageOverride) {\n      urls.unshift(missingImageOverride);\n    }\n\n    return urls;\n  };\n\n  private handleResize = () => {\n    this.setState({\n      stageHeight: window.innerHeight,\n      stageWidth: window.innerWidth,\n    });\n  };\n}\n\nexport default Game;\n","export const packList = [\n\"ant.json\",\n\"ant_encounter.json\",\n\"bkw.json\",\n\"bkw_encounter.json\",\n\"cap.json\",\n\"cap_encounter.json\",\n\"core.json\",\n\"core_encounter.json\",\n\"drax.json\",\n\"drax_encounter.json\",\n\"drs.json\",\n\"drs_encounter.json\",\n\"gam.json\",\n\"gam_encounter.json\",\n\"gmw.json\",\n\"gmw_encounter.json\",\n\"gob_encounter.json\",\n\"hlk.json\",\n\"hlk_encounter.json\",\n\"msm.json\",\n\"msm_encounter.json\",\n\"qsv.json\",\n\"qsv_encounter.json\",\n\"ron_encounter.json\",\n\"scw.json\",\n\"scw_encounter.json\",\n\"stld.json\",\n\"stld_encounter.json\",\n\"thor.json\",\n\"thor_encounter.json\",\n\"toafk_encounter.json\",\n\"trors.json\",\n\"trors_encounter.json\",\n\"twc_encounter.json\",\n\"vnm.json\",\n\"vnm_encounter.json\",\n\"wsp.json\",\n\"wsp_encounter.json\",\n];","export const packList = [\n\"A Journey To Rhosgobel.json\",\n\"A Journey to Rhosgobel Nightmare.json\",\n\"A Knife in the Dark Nightmare.json\",\n\"A Shadow in the East.json\",\n\"A Shadow of the Past Nightmare.json\",\n\"A Storm on Cobas Haven Nightmare.json\",\n\"A Storm on Cobas Haven.json\",\n\"Across the Ettenmoors Nightmare.json\",\n\"Across the Ettenmoors.json\",\n\"Among the Outlaws.json\",\n\"Assault on Osgiliath Nightmare.json\",\n\"Assault on Osgiliath.json\",\n\"Attack on Dol Guldur.json\",\n\"Beneath the Sands.json\",\n\"Breaking of the Fellowship Nightmare.json\",\n\"Celebrimbor's Secret Nightmare.json\",\n\"Celebrimbor's Secret.json\",\n\"Challenge of the Wainriders.json\",\n\"Children of Eorl.json\",\n\"Conflict at the Carrock Nightmare.json\",\n\"Conflict at the Carrock.json\",\n\"Core Set.json\",\n\"Deadmen's Dike Nightmare.json\",\n\"Dungeons Deep and Caverns Dim Nightmare.json\",\n\"Encounter at Amon Dîn Nightmare.json\",\n\"Encounter at Amon Dîn.json\",\n\"Escape From Dol Guldur Nightmare.json\",\n\"Escape from Khazad-dûm.json\",\n\"Escape from Mount Gram Nightmare.json\",\n\"Escape from Mount Gram.json\",\n\"Fire in the Night.json\",\n\"First Age.json\",\n\"Flies and Spiders Nightmare.json\",\n\"Flight from Moria Nightmare.json\",\n\"Flight of the Stormcaller Nightmare.json\",\n\"Flight of the Stormcaller.json\",\n\"Flight to the Ford Nightmare.json\",\n\"Fog on the Barrow-downs.json\",\n\"Foundations of Stone Nightmare.json\",\n\"Foundations of Stone.json\",\n\"Heirs of Númenor.json\",\n\"Helm's Deep Nightmare.json\",\n\"Into Fangorn Nightmare.json\",\n\"Into Ithilien Nightmare.json\",\n\"Into the Pit Nightmare.json\",\n\"Intruders in Chetwood Nightmare.json\",\n\"Journey Along the Anduin Nightmare.json\",\n\"Journey in the Dark Nightmare.json\",\n\"Journey to the Cross-roads Nightmare.json\",\n\"Khazad-dûm.json\",\n\"Mount Gundabad.json\",\n\"Murder at the Prancing Pony.json\",\n\"Over the Misty Mountains Grim Nightmare.json\",\n\"Passage Through Mirkwood Nightmare.json\",\n\"Peril in Pelargir Nightmare.json\",\n\"Race Across Harad.json\",\n\"Raid on the Grey Havens Nightmare.json\",\n\"Return to Mirkwood Nightmare.json\",\n\"Return to Mirkwood.json\",\n\"Road to Rivendell Nightmare.json\",\n\"Road to Rivendell.json\",\n\"Roam Across Rhovanion.json\",\n\"Shadow and Flame Nightmare.json\",\n\"Shadow and Flame.json\",\n\"Shelob's Lair Nightmare.json\",\n\"Temple of the Deceived Nightmare.json\",\n\"Temple of the Deceived.json\",\n\"The Aldburg Plot.json\",\n\"The Antlered Crown Nightmare.json\",\n\"The Antlered Crown.json\",\n\"The Battle of Carn Dûm Nightmare.json\",\n\"The Battle of Carn Dûm.json\",\n\"The Battle of Five Armies Nightmare.json\",\n\"The Battle of Lake-town.json\",\n\"The Betrayal of Mîm.json\",\n\"The Black Riders.json\",\n\"The Black Serpent.json\",\n\"The Blood of Gondor Nightmare.json\",\n\"The Blood of Gondor.json\",\n\"The City of Corsairs Nightmare.json\",\n\"The City of Corsairs.json\",\n\"The City of Ulfast.json\",\n\"The Crossings of Poros.json\",\n\"The Dead Marshes Nightmare.json\",\n\"The Dead Marshes.json\",\n\"The Dread Realm Nightmare.json\",\n\"The Dread Realm.json\",\n\"The Drowned Ruins Nightmare.json\",\n\"The Drowned Ruins.json\",\n\"The Drúadan Forest Nightmare.json\",\n\"The Drúadan Forest.json\",\n\"The Dungeons of Cirith Gurat.json\",\n\"The Dunland Trap Nightmare.json\",\n\"The Dunland Trap.json\",\n\"The Fall of Nargothrond.json\",\n\"The Fate of Númenor Nightmare.json\",\n\"The Fate of Wilderland.json\",\n\"The Flame of the West.json\",\n\"The Fords of Isen Nightmare.json\",\n\"The Fortress of Nurn.json\",\n\"The Ghost of Framsburg.json\",\n\"The Grey Havens.json\",\n\"The Hills of Emyn Muil Nightmare.json\",\n\"The Hills of Emyn Muil.json\",\n\"The Hobbit: On the Doorstep.json\",\n\"The Hobbit: Over Hill and Under Hill.json\",\n\"The Hunt for Gollum Nightmare.json\",\n\"The Hunt for Gollum.json\",\n\"The Hunt for the Dreadnaught.json\",\n\"The Land of Shadow.json\",\n\"The Land of Sorrow.json\",\n\"The Lonely Mountain Nightmare.json\",\n\"The Long Dark Nightmare.json\",\n\"The Long Dark.json\",\n\"The Lost Realm.json\",\n\"The Massing at Osgiliath.json\",\n\"The Mines of Moria.json\",\n\"The Morgul Vale Nightmare.json\",\n\"The Morgul Vale.json\",\n\"The Mountain of Fire.json\",\n\"The Mûmakil.json\",\n\"The Nîn-in-Eilph Nightmare.json\",\n\"The Nîn-in-Eilph.json\",\n\"The Old Forest.json\",\n\"The Passage of the Marshes Nightmare.json\",\n\"The Redhorn Gate Nightmare.json\",\n\"The Redhorn Gate.json\",\n\"The Ring Goes South Nightmare.json\",\n\"The Road Darkens.json\",\n\"The Road to Isengard Nightmare.json\",\n\"The Ruins of Belegost.json\",\n\"The Sands of Harad.json\",\n\"The Seventh Level Nightmare.json\",\n\"The Siege of Annúminas.json\",\n\"The Siege of Cair Andros Nightmare.json\",\n\"The Steward's Fear Nightmare.json\",\n\"The Steward's Fear.json\",\n\"The Stone of Erech.json\",\n\"The Thing in the Depths Nightmare.json\",\n\"The Thing in the Depths.json\",\n\"The Three Trials Nightmare.json\",\n\"The Three Trials.json\",\n\"The Treachery of Rhudaur Nightmare.json\",\n\"The Treachery of Rhudaur.json\",\n\"The Treason of Saruman.json\",\n\"The Uruk-hai Nightmare.json\",\n\"The Voice of Isengard.json\",\n\"The Wastes of Eriador Nightmare.json\",\n\"The Wastes of Eriador.json\",\n\"The Watcher in the Water Nightmare.json\",\n\"The Watcher in the Water.json\",\n\"The Weather Hills Nightmare.json\",\n\"The Wilds of Rhovanion.json\",\n\"The Withered Heath.json\",\n\"The Wizard's Quest.json\",\n\"The Woodland Realm.json\",\n\"To Catch an Orc Nightmare.json\",\n\"Trial Upon the Marches.json\",\n\"Trouble in Tharbad Nightmare.json\",\n\"Trouble in Tharbad.json\",\n\"Two-Player Limited Edition Starter.json\",\n\"Under the Ash Mountains.json\",\n\"Voyage Across Belegaer Nightmare.json\",\n\"We Must Away, Ere Break of Day Nightmare.json\",\n\"Wrath and Ruin.json\",\n];","import { Action, ThunkAction } from \"@reduxjs/toolkit\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { CardPack as CardPackMarvel } from \"../../external-api/marvel-card-data\";\nimport {\n  CardPack as CardPackLOTR,\n  Scenario,\n} from \"../../external-api/beorn-json-data\";\nimport { packList as marvelPackList } from \"../../generated/packsList\";\nimport { packList as lotrPackList } from \"../../generated/packsList_lotr\";\nimport scenarioListLOTR from \"../../external/ringsteki-json-data/scenarios.json\";\nimport { RootState } from \"../../store/rootReducer\";\nimport {\n  loadCardsDataForPack,\n  loadCardsForEncounterSet,\n} from \"./cards-data.slice\";\nimport { GameType } from \"../../constants/app-constants\";\n\nexport const allJsonData = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n> => async (dispatch) => {\n  let resultsList = await Promise.all(\n    marvelPackList.map((pack) => getSpecificMarvelPack(pack))\n  );\n\n  resultsList.forEach((result) => {\n    if (result.res.status === 200) {\n      dispatch(\n        loadCardsDataForPack({\n          packType: GameType.MarvelChampions,\n          pack: result.res.data as any,\n          pack_code: result.packCode,\n        })\n      );\n    } else {\n      console.error(\"Failed to load some json data\");\n    }\n  });\n\n  const resultsListLOTR = await Promise.all(\n    lotrPackList.map((pack) => getSpecificLOTRPack(pack))\n  );\n\n  resultsListLOTR.forEach((result) => {\n    if (result.res.status === 200) {\n      dispatch(\n        loadCardsDataForPack({\n          packType: GameType.LordOfTheRingsLivingCardGame,\n          pack: result.res.data as any,\n          pack_code: result.packCode,\n        })\n      );\n    } else {\n      console.error(\"Failed to load some json data\");\n    }\n  });\n\n  const resultsListLOTRScenarios = await Promise.all(\n    scenarioListLOTR.map((scenario) => getSpecificLOTRScenario(scenario.Title))\n  );\n\n  resultsListLOTRScenarios.forEach((result) => {\n    if (result.status === 200) {\n      dispatch(\n        loadCardsForEncounterSet({\n          setCode: result.data.Slug,\n          cards: result.data.AllCards,\n        })\n      );\n    } else {\n      console.error(\"Failed to load some json data\");\n    }\n  });\n};\n\nconst getSpecificMarvelPack = async (\n  packName: string\n): Promise<{ res: AxiosResponse<CardPackMarvel>; packCode: string }> => {\n  const response = await axios.get<CardPackMarvel>(\n    process.env.PUBLIC_URL + \"/json_data/\" + packName\n  );\n  return {\n    res: response,\n    packCode: packName.split(\".json\")[0],\n  };\n};\n\nconst getSpecificLOTRPack = async (\n  packName: string\n): Promise<{ res: AxiosResponse<CardPackLOTR>; packCode: string }> => {\n  const response = await axios.get<CardPackLOTR>(\n    process.env.PUBLIC_URL + \"/json_data/\" + packName\n  );\n  return {\n    res: response,\n    packCode: packName.split(\".json\")[0],\n  };\n};\n\nconst getSpecificLOTRScenario = async (\n  scenario: string\n): Promise<AxiosResponse<Scenario>> => {\n  const response = await axios.get<Scenario>(\n    process.env.PUBLIC_URL + \"/json_data/scenarios/\" + scenario + \".json\"\n  );\n  return response;\n};\n","import { connect } from \"react-redux\";\nimport { ActionCreators } from \"redux-undo\";\nimport Game from \"./Game\";\nimport { getCardsDataEntities } from \"./features/cards-data/cards-data.selectors\";\nimport { loadCardsData } from \"./features/cards-data/cards-data.slice\";\nimport {\n  getCards,\n  getDropTargetCardsById,\n  getMultiselectMode,\n  getPanMode,\n} from \"./features/cards/cards.selectors\";\nimport {\n  adjustCounterToken,\n  cardMove,\n  endCardMove,\n  exhaustCard,\n  flipCards,\n  selectCard,\n  selectMultipleCards,\n  togglePanMode,\n  toggleSelectCard,\n  toggleToken,\n  unselectAllCards,\n  unselectCard,\n  adjustModifier,\n  clearAllModifiers,\n} from \"./features/cards/cards.slice\";\nimport {\n  addCardStack,\n  fetchDecklistById,\n  pullCardOutOfCardStack,\n  startCardMove,\n  shuffleStack,\n  drawCardsOutOfCardStack,\n  createDeckFromTxt,\n} from \"./features/cards/cards.thunks\";\nimport { generateGameStateUrl } from \"./features/game/game.thunks\";\nimport { allJsonData } from \"./features/cards-data/cards-data.thunks\";\nimport {\n  getGame,\n  getMenuPreviewCard,\n  getPeerId,\n  getPlayerColors,\n} from \"./features/game/game.selectors\";\nimport {\n  connectToRemoteGame,\n  updatePosition,\n  updateZoom,\n  requestResync,\n  setPreviewCardId,\n  clearPreviewCard,\n  quitGame,\n  showRadialMenuAtPosition,\n} from \"./features/game/game.slice\";\n\nimport {\n  moveCounter,\n  removeCounter,\n  updateCounterValue,\n  updateCounterColor,\n} from \"./features/counters/counters.slice\";\nimport { addNewCounter } from \"./features/counters/counters.thunks\";\nimport { resetApp } from \"./store/global.actions\";\nimport { RootState } from \"./store/rootReducer\";\nimport { getCurrentCounters } from \"./features/counters/counters.selectors\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    playerColors: getPlayerColors(state),\n    cards: getCards(state),\n    cardsData: getCardsDataEntities(state),\n    panMode: getPanMode(state),\n    multiselectMode: getMultiselectMode(state),\n    gameState: getGame(state),\n    counters: getCurrentCounters(state),\n    peerId: getPeerId(state),\n    dropTargetCardsById: getDropTargetCardsById(state),\n    menuPreviewCard: getMenuPreviewCard(state),\n  };\n};\n\nconst GameContainer = connect(mapStateToProps, {\n  cardMove,\n  endCardMove,\n  exhaustCard,\n  loadCardsData,\n  allJsonData,\n  selectCard,\n  unselectCard,\n  toggleSelectCard,\n  selectMultipleCards,\n  startCardMove,\n  unselectAllCards,\n  togglePanMode,\n  flipCards,\n  shuffleStack,\n  fetchDecklistById,\n  updateZoom,\n  updatePosition,\n  resetApp,\n  addCardStack,\n  toggleToken,\n  adjustCounterToken,\n  pullCardOutOfCardStack,\n  addNewCounter,\n  updateCounterValue,\n  removeCounter,\n  moveCounter,\n  connectToRemoteGame,\n  requestResync,\n  undo: ActionCreators.undo,\n  redo: ActionCreators.redo,\n  drawCardsOutOfCardStack,\n  setPreviewCardId,\n  clearPreviewCard,\n  quitGame,\n  updateCounterColor,\n  createDeckFromTxt,\n  generateGameStateUrl,\n  showRadialMenuAtPosition,\n  adjustModifier,\n  clearAllModifiers,\n})(Game);\n\nexport default GameContainer;\n","import { Vector2d } from \"konva/lib/types\";\nimport { Action } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { RootState } from \"../../store/rootReducer\";\nimport { addNewCounterWithId } from \"./counters.actions\";\n\nexport const addNewCounter =\n  (pos: Vector2d): ThunkAction<void, RootState, unknown, Action<string>> =>\n  (dispatch) => {\n    const payloadWithId = {\n      pos,\n      id: uuidv4(),\n    };\n    dispatch(addNewCounterWithId(payloadWithId));\n  };\n","import { Vector2d } from \"konva/lib/types\";\nimport { CardData } from \"../external-api/common-card-data\";\n\nexport const convertMarvelTxtToDeckInfo = (\n  heroDataByName: { [key: string]: CardData },\n  playerCardDataByName: { [key: string]: CardData },\n  position: Vector2d,\n  txtContents: string\n) => {\n  const nonEmptyLines = txtContents\n    .split(\"\\n\")\n    .map((l) => l.trim())\n    .filter((l) => !!l);\n\n  let heroName = \"\";\n  const packLineIndex = nonEmptyLines.findIndex((l) =>\n    l.toLocaleLowerCase().startsWith(\"pack\")\n  );\n  if (packLineIndex !== -1) {\n    heroName = nonEmptyLines[packLineIndex - 1];\n  }\n\n  const hero = heroDataByName[heroName];\n  if (!hero) {\n    throw new Error(`Could not find hero with name ${heroName}`);\n  }\n\n  // Mock out the slots\n  const pattern = /^\\dx/;\n  const slotLines = nonEmptyLines.filter((l) => l.match(pattern)?.index === 0);\n  let slots: { [key: string]: number } = {};\n\n  slotLines.forEach((sl) => {\n    // first character should be a number\n    const quantity = parseInt(sl[0]);\n    if (Number.isNaN(quantity)) {\n      throw new Error(\"Could not get number from txt file for card\");\n    }\n\n    const cardName = sl.split(pattern)[1].split(\"(\")[0].trim();\n    const card = playerCardDataByName[cardName];\n    slots[card.code] = quantity;\n  });\n\n  console.log(heroName);\n  return {\n    data: {\n      investigator_code: hero.code,\n      slots,\n    },\n  };\n};\n","import { Action, ThunkAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../store/rootReducer\";\nimport * as jc from \"jsoncrush\";\nimport { copyToClipboard, getBaseUrl } from \"../../utilities/text-utils\";\nexport const generateGameStateUrl = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<any>\n> => (_dispatch, getState) => {\n  const currentStoreState = getState();\n\n  const cards = currentStoreState.liveState.present.cards.cards;\n  const counters = currentStoreState.liveState.present.counters;\n  const gameType = currentStoreState.game.activeGameType;\n  const crushedCardsString = jc.JSONCrush(JSON.stringify(cards));\n  const crushedCountersString = jc.JSONCrush(JSON.stringify(counters));\n  copyToClipboard(\n    `${getBaseUrl()}?gameType=${gameType}&cards=${crushedCardsString}&counters=${crushedCountersString}`\n  );\n};\n\nexport const clearQueryParams = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<any>\n> => () => {\n  const queryParams = new URLSearchParams(window.location.search);\n  const queryParamsGameType = queryParams.get(\"gameType\");\n  if (!!queryParamsGameType) {\n    window.history.replaceState(\n      {},\n      document.title,\n      window.location.pathname || \"/\"\n    );\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { GameType } from \"./constants/app-constants\";\nimport GameContainer from \"./GameContainer\";\nimport \"./App.scss\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\ninterface IProps {\n  activeGameType: GameType | null;\n  updateActiveGameType: (val: GameType) => void;\n  clearQueryParams: () => void;\n}\n\nconst App = (props: IProps) => {\n  const clearQueryParams = props.clearQueryParams;\n  useEffect(() => {\n    clearQueryParams();\n  }, [clearQueryParams]);\n\n  return !!props.activeGameType ? (\n    <GameContainer currentGameType={props.activeGameType}></GameContainer>\n  ) : (\n    renderGamePicker(props)\n  );\n};\n\nconst camelCaseToSpaces = (str: string) => {\n  // insert a space before all caps\n  return (\n    str\n      .replace(/([A-Z])/g, \" $1\")\n      // uppercase the first character\n      .replace(/^./, (s) => {\n        return s.toUpperCase();\n      })\n  );\n};\n\nconst renderGamePicker = (props: IProps) => {\n  return (\n    <div className=\"game-picker\">\n      <h1>Card Game Playground</h1>\n      <FormControl className=\"select\">\n        <InputLabel id=\"game-picker-label\">Select Game</InputLabel>\n        <Select\n          id=\"game-picker\"\n          labelId=\"game-picker-label\"\n          onChange={(e) => {\n            props.updateActiveGameType(e.target.value as GameType);\n          }}\n        >\n          {Object.entries(GameType).map(([key, value]) => {\n            const label = camelCaseToSpaces(key);\n            return <MenuItem value={value}>{label}</MenuItem>;\n          })}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport App from \"./App\";\nimport { getActiveGameType } from \"./features/game/game.selectors\";\nimport { updateActiveGameType } from \"./features/game/game.slice\";\nimport { clearQueryParams } from \"./features/game/game.thunks\";\nimport { RootState } from \"./store/rootReducer\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    activeGameType: getActiveGameType(state),\n  };\n};\n\nconst AppContainer = connect(mapStateToProps, {\n  updateActiveGameType,\n  clearQueryParams,\n})(App);\n\nexport default AppContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport configureStore from \"./store/configureStore\";\nimport AppContainer from \"./AppContainer\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}